/* For LarKC */
package com.cyc.tool.subl.jrtl.nativeCode.subLisp;

import static com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory.makeSymbol;

import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLPackage;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;

public interface CommonSymbols_SYM {
    SubLPackage __init_package__ = SubLPackage.getCurrentPackage();

    final Object commonSymbolsCheck = new Object() {
	{
	    if (!SubLMain.commonSymbolsOK) {
		if (true) {
		    throw new Error("!commonSymbolsOK!");
		}
	    }
	}
    };
    SubLSymbol times = makeCycSymbol("*");
    SubLSymbol minus = makeCycSymbol("-");
    SubLSymbol oneminus = makeCycSymbol("1-");
    SubLSymbol oneplus = makeCycSymbol("1+");
    SubLPackage __initCycPackage__ = SubLPackage.setCurrentPackage("CYC");
    SubLSymbol qA = makeCycSymbol("?A");

    SubLSymbol A = makeCycSymbol("A");
    SubLSymbol ABSTRACT_LEXICON_P = makeCycSymbol("ABSTRACT-LEXICON-P");
    SubLSymbol ABSTRACT_PASSAGE_P = makeCycSymbol("ABSTRACT-PASSAGE-P");
    SubLSymbol ACCUMULATOR = makeCycSymbol("ACCUMULATOR");
    SubLSymbol ACKNOWLEDGE_APPLICATION_EVENT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-APPLICATION-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_CYC_APPLICATION_EVENT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-CYC-APPLICATION-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_CYC_EVENT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-CYC-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_EVENT_ROOT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-EVENT-ROOT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_INFERENCE_EVENT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-INFERENCE-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_KB_STORE_EVENT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-KB-STORE-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_NL_EVENT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-NL-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_SBHL_EVENT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-SBHL-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_SUBLISP_EVENT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-SUBLISP-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol ACKNOWLEDGE_SYSTEM_EVENT_STIMULATION_PROPOSAL = makeCycSymbol("ACKNOWLEDGE-SYSTEM-EVENT-STIMULATION-PROPOSAL");
    SubLSymbol qACTION = makeCycSymbol("?ACTION");
    SubLSymbol ACTION = makeCycSymbol("ACTION");
    SubLSymbol ACTION_HEAD = makeCycSymbol("ACTION-HEAD");
    SubLSymbol ACTION_QUALIFIERS = makeCycSymbol("ACTION-QUALIFIERS");
    SubLSymbol ACTION_TYPE = makeCycSymbol("ACTION-TYPE");
    SubLSymbol ACTIVATE_POSTING = makeCycSymbol("ACTIVATE-POSTING");
    SubLSymbol ACTIVATION_PATTERN = makeCycSymbol("ACTIVATION-PATTERN");
    SubLSymbol ACTIVATION_PATTERNS = makeCycSymbol("ACTIVATION-PATTERNS");
    SubLSymbol ACTIVATIONS = makeCycSymbol("ACTIVATIONS");
    SubLSymbol ACTIVE = makeCycSymbol("ACTIVE");
    SubLSymbol ACTIVE_LEARNERS = makeCycSymbol("ACTIVE-LEARNERS");
    SubLSymbol ACTIVE_P = makeCycSymbol("ACTIVE-P");
    SubLSymbol ACTIVE_PROPOSALS = makeCycSymbol("ACTIVE-PROPOSALS");
    SubLSymbol ACTUAL_IPC_QUEUE = makeCycSymbol("ACTUAL-IPC-QUEUE");
    SubLSymbol ACTUAL_POSTING = makeCycSymbol("ACTUAL-POSTING");
    SubLSymbol ADD = makeCycSymbol("ADD");
    SubLSymbol ADD_CHILD = makeCycSymbol("ADD-CHILD");
    SubLSymbol ADD_DIRECT_KNOWLEDGE_SOURCE = makeCycSymbol("ADD-DIRECT-KNOWLEDGE-SOURCE");
    SubLSymbol ADD_DIRECT_POSTING = makeCycSymbol("ADD-DIRECT-POSTING");
    SubLSymbol ADD_DIRECT_POSTINGS = makeCycSymbol("ADD-DIRECT-POSTINGS");
    SubLSymbol ADDED_DECLARATIONS_FOR_KS_CLASS = makeCycSymbol("ADDED-DECLARATIONS-FOR-KS-CLASS");
    SubLSymbol ADD_KNOWLEDGE_SOURCES_AT_WILL = makeCycSymbol("ADD-KNOWLEDGE-SOURCES-AT-WILL");
    SubLSymbol ADD_LEARNER = makeCycSymbol("ADD-LEARNER");
    SubLSymbol ADD_LITERALS = makeCycSymbol("ADD-LITERALS");
    SubLSymbol ADD_MARK = makeCycSymbol("ADD-MARK");
    SubLSymbol ADD_PANELS_AT_WILL = makeCycSymbol("ADD-PANELS-AT-WILL");
    SubLSymbol ADD_PARENT_LINK = makeCycSymbol("ADD-PARENT-LINK");
    SubLSymbol ADD_POSTING = makeCycSymbol("ADD-POSTING");
    SubLSymbol ADD_POSTING_CLASSES_AT_WILL = makeCycSymbol("ADD-POSTING-CLASSES-AT-WILL");
    SubLSymbol ADD_POSTING_DAEMON = makeCycSymbol("ADD-POSTING-DAEMON");
    SubLSymbol ADDRESS = makeCycSymbol("ADDRESS");
    SubLSymbol ADDS = makeCycSymbol("ADDS");
    SubLSymbol ADD_SUB_PANEL = makeCycSymbol("ADD-SUB-PANEL");
    SubLSymbol ADD_SUPER_PANEL = makeCycSymbol("ADD-SUPER-PANEL");
    SubLSymbol ADD_SUPPORT_NOTIFY = makeCycSymbol("ADD-SUPPORT-NOTIFY");
    SubLSymbol ADD_TASK = makeCycSymbol("ADD-TASK");
    SubLSymbol ADD_TO_LOG = makeCycSymbol("ADD-TO-LOG");
    SubLSymbol ADJECTIVE_LINK_WORD = makeCycSymbol("ADJECTIVE-LINK-WORD");
    SubLSymbol ADVERB_LINK_WORD = makeCycSymbol("ADVERB-LINK-WORD");
    SubLSymbol AFTER_STARTUP = makeCycSymbol("AFTER-STARTUP");
    SubLSymbol AFTER_STIMULATION = makeCycSymbol("AFTER-STIMULATION");
    SubLSymbol AGENDA = makeCycSymbol("AGENDA");
    SubLSymbol AGENDA_CLASS = makeCycSymbol("AGENDA-CLASS");
    SubLSymbol AGENDA_EXPRESSION = makeCycSymbol("AGENDA-EXPRESSION");
    SubLSymbol ALIGN = makeCycSymbol("ALIGN");
    SubLSymbol ALIST = makeCycSymbol("ALIST");
    SubLSymbol ALIST_P = makeCycSymbol("ALIST-P");
    SubLSymbol ALL = makeCycSymbol("ALL");
    SubLSymbol ALL_ARGS = makeCycSymbol("ALL-ARGS");
    SubLSymbol ALL_CONJUNCTION_CYCLS = makeCycSymbol("ALL-CONJUNCTION-CYCLS");
    SubLSymbol ALL_GENLS = makeCycSymbol("ALL-GENLS");
    SubLSymbol ALL_HEAD_CYCLS = makeCycSymbol("ALL-HEAD-CYCLS");
    SubLSymbol ALLOCATE = makeCycSymbol("ALLOCATE");
    SubLSymbol ALLOCATE_ENUMERATOR = makeCycSymbol("ALLOCATE-ENUMERATOR");
    SubLSymbol ALLOWED_MTS = makeCycSymbol("ALLOWED-MTS");
    SubLSymbol ALLOW_FABRICATIONq = makeCycSymbol("ALLOW-FABRICATION?");
    SubLSymbol ALLOW_MT = makeCycSymbol("ALLOW-MT");
    SubLSymbol ALLOW_PREDICATE = makeCycSymbol("ALLOW-PREDICATE");
    SubLSymbol ALLOW_STEMMING = makeCycSymbol("ALLOW-STEMMING");
    SubLSymbol ALL_RLE_CYCLS = makeCycSymbol("ALL-RLE-CYCLS");
    SubLSymbol ALL_SUBJECTS_WITH_OBJECTS_CYCLS = makeCycSymbol("ALL-SUBJECTS-WITH-OBJECTS-CYCLS");
    SubLSymbol ALL_TYPES = makeCycSymbol("ALL-TYPES");
    SubLSymbol ALPHA_CHAR_P = makeCycSymbol("ALPHA-CHAR-P");
    SubLSymbol ALPHANUMERICP = makeCycSymbol("ALPHANUMERICP");
    SubLSymbol AMT = makeCycSymbol("AMT");
    SubLSymbol ANCESTOR = makeCycSymbol("ANCESTOR");
    SubLSymbol AND = makeCycSymbol("AND");
    SubLSymbol ANS1 = makeCycSymbol("ANS1");
    SubLSymbol ANS2 = makeCycSymbol("ANS2");
    SubLSymbol ANSWER = makeCycSymbol("ANSWER");
    SubLSymbol ANSWER_CARDINALITY = makeCycSymbol("ANSWER-CARDINALITY");
    SubLSymbol ANSWERS = makeCycSymbol("ANSWERS");
    SubLSymbol ANSWER_TO = makeCycSymbol("ANSWER-TO");
    SubLSymbol ANSWER_TO_SINGLETON = makeCycSymbol("ANSWER-TO-SINGLETON");
    SubLSymbol ANSWER_TYPES = makeCycSymbol("ANSWER-TYPES");
    SubLSymbol ANTECEDENT = makeCycSymbol("ANTECEDENT");
    SubLSymbol ANTE_PREV_NE = makeCycSymbol("ANTE-PREV-NE");
    SubLSymbol APP = makeCycSymbol("APP");
    SubLSymbol APP_BODY = makeCycSymbol("APP-BODY");
    SubLSymbol APP_CLASS = makeCycSymbol("APP-CLASS");
    SubLSymbol APPEND = makeCycSymbol("APPEND");
    SubLSymbol APPEND_TEXT_FILE = makeCycSymbol("APPEND-TEXT-FILE");
    SubLSymbol APPLICATION = makeCycSymbol("APPLICATION");
    SubLSymbol APPLICATION_ID = makeCycSymbol("APPLICATION-ID");
    SubLSymbol APPLICATION_NAME = makeCycSymbol("APPLICATION-NAME");
    SubLSymbol APPLICATION_PROCESS = makeCycSymbol("APPLICATION-PROCESS");
    SubLSymbol APPLICATION_VAR = makeCycSymbol("APPLICATION-VAR");
    SubLSymbol APPLY = makeCycSymbol("APPLY");
    SubLSymbol APPLY_LEX_RENAMING = makeCycSymbol("APPLY-LEX-RENAMING");
    SubLSymbol APRIORI_P = makeCycSymbol("APRIORI-P");
    SubLSymbol AREF = makeCycSymbol("AREF");
    SubLSymbol qARG = makeCycSymbol("?ARG");
    SubLSymbol ARG = makeCycSymbol("ARG");
    SubLSymbol qARG1 = makeCycSymbol("?ARG1");
    SubLSymbol ARG1 = makeCycSymbol("ARG1");
    SubLSymbol qARG2 = makeCycSymbol("?ARG2");
    SubLSymbol ARG2 = makeCycSymbol("ARG2");
    SubLSymbol ARG2RANGE = makeCycSymbol("ARG2RANGE");
    SubLSymbol ARG3 = makeCycSymbol("ARG3");
    SubLSymbol ARG_IF_ON_STARTUP = makeCycSymbol("ARG-IF-ON-STARTUP");
    SubLSymbol ARG_LIST = makeCycSymbol("ARG-LIST");
    SubLSymbol ARGLIST = makeCycSymbol("ARGLIST");
    SubLSymbol ARG_NUM = makeCycSymbol("ARG-NUM");
    SubLSymbol ARGNUM = makeCycSymbol("ARGNUM");
    SubLSymbol ARGNUM_VAR = makeCycSymbol("ARGNUM-VAR");
    SubLSymbol ARG_POS = makeCycSymbol("ARG-POS");
    SubLSymbol ARGPOS = makeCycSymbol("ARGPOS");
    SubLSymbol ARG_POSITION = makeCycSymbol("ARG-POSITION");
    SubLSymbol qARGS = makeCycSymbol("?ARGS");
    SubLSymbol ARGS = makeCycSymbol("ARGS");
    SubLSymbol ARG_STRING = makeCycSymbol("ARG-STRING");
    SubLSymbol ARGTYPE_LIST = makeCycSymbol("ARGTYPE-LIST");
    SubLSymbol ARGTYPES = makeCycSymbol("ARGTYPES");
    SubLSymbol ARGUMENT = makeCycSymbol("ARGUMENT");
    SubLSymbol ARGUMENT_P = makeCycSymbol("ARGUMENT-P");
    SubLSymbol ARGUMENTS = makeCycSymbol("ARGUMENTS");
    SubLSymbol ARITY = makeCycSymbol("ARITY");
    SubLSymbol qASENT = makeCycSymbol("?ASENT");
    SubLSymbol ASENT = makeCycSymbol("ASENT");
    SubLSymbol ASENT_HAS_INDEXED_TERM_ARG_P = makeCycSymbol("ASENT-HAS-INDEXED-TERM-ARG-P");
    SubLSymbol ASK = makeCycSymbol("ASK");
    SubLSymbol ASK_GENERIC_BOOLEAN = makeCycSymbol("ASK-GENERIC-BOOLEAN");
    SubLSymbol ASK_GENERIC_ENUMERATED = makeCycSymbol("ASK-GENERIC-ENUMERATED");
    SubLSymbol ASK_MT = makeCycSymbol("ASK-MT");
    SubLSymbol ASK_PART_OF_SPEECH = makeCycSymbol("ASK-PART-OF-SPEECH");
    SubLSymbol ASK_PHRASE = makeCycSymbol("ASK-PHRASE");
    SubLSymbol ASK_TERM = makeCycSymbol("ASK-TERM");
    SubLSymbol ASSERTED_ARGUMENT_P = makeCycSymbol("ASSERTED-ARGUMENT-P");
    SubLSymbol ASSERTED_ASSERTIONq = makeCycSymbol("ASSERTED-ASSERTION?");
    SubLSymbol ASSERTED_WHEN = makeCycSymbol("ASSERTED-WHEN");
    SubLSymbol ASSERTION = makeCycSymbol("ASSERTION");
    SubLSymbol ASSERTION_FORM = makeCycSymbol("ASSERTION-FORM");
    SubLSymbol ASSERTION_FORMULA = makeCycSymbol("ASSERTION-FORMULA");
    SubLSymbol ASSERTION_ID = makeCycSymbol("ASSERTION-ID");
    SubLSymbol ASSERTION_LIST = makeCycSymbol("ASSERTION-LIST");
    SubLSymbol ASSERTION_MT = makeCycSymbol("ASSERTION-MT");
    SubLSymbol ASSERTION_P = makeCycSymbol("ASSERTION-P");
    SubLSymbol ASSERTIONS = makeCycSymbol("ASSERTIONS");
    SubLSymbol ASSERTION_VAR = makeCycSymbol("ASSERTION-VAR");
    SubLSymbol ASSERT_TYPE = makeCycSymbol("ASSERT-TYPE");
    SubLSymbol ASSIGNMENTS = makeCycSymbol("ASSIGNMENTS");
    SubLSymbol ASSIMILATE = makeCycSymbol("ASSIMILATE");
    SubLSymbol ASSISTANT = makeCycSymbol("ASSISTANT");
    SubLSymbol ASSOC = makeCycSymbol("ASSOC");
    SubLSymbol ASSOCIATE_COMMON_IDS = makeCycSymbol("ASSOCIATE-COMMON-IDS");
    SubLSymbol ASSOCIATED_KNOWLEDGE_SOURCE = makeCycSymbol("ASSOCIATED-KNOWLEDGE-SOURCE");
    SubLSymbol ASSOCIATION = makeCycSymbol("ASSOCIATION");
    SubLSymbol ASYNCH_BASIC_DOUBLY_LINKED_QUEUE = makeCycSymbol("ASYNCH-BASIC-DOUBLY-LINKED-QUEUE");
    SubLSymbol ATOM = makeCycSymbol("ATOM");
    SubLSymbol ATOMIC_SENTENCEq = makeCycSymbol("ATOMIC-SENTENCE?");
    SubLSymbol ATOMIC_SENTENCE_PREDICATE = makeCycSymbol("ATOMIC-SENTENCE-PREDICATE");
    SubLSymbol AT_SIGN_P = makeCycSymbol("AT-SIGN-P");
    SubLSymbol ATT = makeCycSymbol("ATT");
    SubLSymbol qATTACK = makeCycSymbol("?ATTACK");
    SubLSymbol ATTRIBUTE = makeCycSymbol("ATTRIBUTE");
    SubLSymbol ATTRIBUTE_DICTIONARY = makeCycSymbol("ATTRIBUTE-DICTIONARY");
    SubLSymbol ATTRIBUTE_PLIST = makeCycSymbol("ATTRIBUTE-PLIST");
    SubLSymbol ATTRIBUTES = makeCycSymbol("ATTRIBUTES");
    SubLSymbol AUGMENTATION_TERMS = makeCycSymbol("AUGMENTATION-TERMS");
    SubLSymbol AUGMENT_TERMS = makeCycSymbol("AUGMENT-TERMS");
    SubLSymbol AUTHOR_NAMES = makeCycSymbol("AUTHOR-NAMES");
    SubLSymbol AUTO_GENERATED_KS_ASSISTENT = makeCycSymbol("AUTO-GENERATED-KS-ASSISTENT");
    SubLSymbol AUX = makeCycSymbol("AUX");
    SubLSymbol AUX_VERB_LINK_WORD = makeCycSymbol("AUX-VERB-LINK-WORD");
    SubLSymbol AUX_VERB_TREE_P = makeCycSymbol("AUX-VERB-TREE-P");
    SubLSymbol AVAILABLE_RMS = makeCycSymbol("AVAILABLE-RMS");
    SubLSymbol AVERAGE_SLEEP_INTERVAL = makeCycSymbol("AVERAGE-SLEEP-INTERVAL");
    SubLSymbol qB = makeCycSymbol("?B");
    SubLSymbol B = makeCycSymbol("B");
    SubLSymbol BACKCHAIN = makeCycSymbol("BACKCHAIN");
    SubLSymbol BAG = makeCycSymbol("BAG");
    SubLSymbol BASE_MT = makeCycSymbol("BASE-MT");
    SubLSymbol BASE_NAME = makeCycSymbol("BASE-NAME");
    SubLSymbol BASE_PANEL = makeCycSymbol("BASE-PANEL");
    SubLSymbol BASE_SUFFIX_COUNTER = makeCycSymbol("BASE-SUFFIX-COUNTER");
    SubLSymbol BASE_TYPE = makeCycSymbol("BASE-TYPE");
    SubLSymbol BASIC_BAG = makeCycSymbol("BASIC-BAG");
    SubLSymbol BASIC_BAG_ENUMERATOR = makeCycSymbol("BASIC-BAG-ENUMERATOR");
    SubLSymbol BASIC_BAG_P = makeCycSymbol("BASIC-BAG-P");
    SubLSymbol BASIC_DOUBLY_LINKED_LIST = makeCycSymbol("BASIC-DOUBLY-LINKED-LIST");
    SubLSymbol BASIC_DOUBLY_LINKED_LIST_ENUMERATOR = makeCycSymbol("BASIC-DOUBLY-LINKED-LIST-ENUMERATOR");
    SubLSymbol BASIC_DOUBLY_LINKED_QUEUE = makeCycSymbol("BASIC-DOUBLY-LINKED-QUEUE");
    SubLSymbol BASIC_END_POINTER_LIST = makeCycSymbol("BASIC-END-POINTER-LIST");
    SubLSymbol BASIC_MULTI_TASK_SCHEDULER = makeCycSymbol("BASIC-MULTI-TASK-SCHEDULER");
    SubLSymbol BASIC_SUBLOOP_PROCESS = makeCycSymbol("BASIC-SUBLOOP-PROCESS");
    SubLSymbol BASIC_TAG = makeCycSymbol("BASIC-TAG");
    SubLSymbol BASIS = makeCycSymbol("BASIS");
    SubLSymbol BB_SUBSET_NAME = makeCycSymbol("BB-SUBSET-NAME");
    SubLSymbol BETTER_TAG = makeCycSymbol("BETTER-TAG");
    SubLSymbol BETTER_TAG_SUMMAND = makeCycSymbol("BETTER-TAG-SUMMAND");
    SubLSymbol BGCOLOR = makeCycSymbol("BGCOLOR");
    SubLSymbol BIG_STRING = makeCycSymbol("BIG-STRING");
    SubLSymbol BINDING = makeCycSymbol("BINDING");
    SubLSymbol BINDING_LIST = makeCycSymbol("BINDING-LIST");
    SubLSymbol BINDINGS = makeCycSymbol("BINDINGS");
    SubLSymbol BIND_VAR = makeCycSymbol("BIND-VAR");
    SubLSymbol BIN_PRED = makeCycSymbol("BIN-PRED");
    SubLSymbol BI_STREAM = makeCycSymbol("BI-STREAM");
    SubLSymbol BLACKBOARD = makeCycSymbol("BLACKBOARD");
    SubLSymbol BLACKBOARD_CLASS = makeCycSymbol("BLACKBOARD-CLASS");
    SubLSymbol BLACKBOARD_CLASS_NAME = makeCycSymbol("BLACKBOARD-CLASS-NAME");
    SubLSymbol BLACKBOARD_EXPRESSION = makeCycSymbol("BLACKBOARD-EXPRESSION");
    SubLSymbol BLACKBOARD_IDENTIFIER = makeCycSymbol("BLACKBOARD-IDENTIFIER");
    SubLSymbol $BLACKBOARD_INPUT_FILE$ = makeCycSymbol("*BLACKBOARD-INPUT-FILE*");
    SubLSymbol $BLACKBOARD_LOG_FILE$ = makeCycSymbol("*BLACKBOARD-LOG-FILE*");
    SubLSymbol BLACKBOARD_VAR = makeCycSymbol("BLACKBOARD-VAR");
    SubLSymbol qBLOOD_TEST = makeCycSymbol("?BLOOD-TEST");
    SubLSymbol aBODY = makeCycSymbol("&BODY");
    SubLSymbol BODY = makeCycSymbol("BODY");
    SubLSymbol BOOKKEEPING_PREDICATE_HL_STORAGE_MODULE_UNASSERT = makeCycSymbol("BOOKKEEPING-PREDICATE-HL-STORAGE-MODULE-UNASSERT");
    SubLSymbol BOOLEAN = makeCycSymbol("BOOLEAN");
    SubLSymbol BOOLEANP = makeCycSymbol("BOOLEANP");
    SubLSymbol BORDER = makeCycSymbol("BORDER");
    SubLSymbol BOUND_BINDINGS = makeCycSymbol("BOUND-BINDINGS");
    SubLSymbol BOUNDP = makeCycSymbol("BOUNDP");
    SubLSymbol BQ_APPEND = makeCycSymbol("BQ-APPEND");
    SubLSymbol BQ_CONS = makeCycSymbol("BQ-CONS");
    SubLSymbol BQ_LIST = makeCycSymbol("BQ-LIST");
    SubLSymbol BQ_LIST$ = makeCycSymbol("BQ-LIST*");
    SubLSymbol BUNGE = makeCycSymbol("BUNGE");
    SubLSymbol BUT_LAST = makeCycSymbol("BUT-LAST");
    SubLSymbol qC = makeCycSymbol("?C");
    SubLSymbol C = makeCycSymbol("C");
    SubLSymbol CAAR = makeCycSymbol("CAAR");
    SubLSymbol CACHE = makeCycSymbol("CACHE");
    SubLSymbol CACHED_BLACKBOARD = makeCycSymbol("CACHED-BLACKBOARD");
    SubLSymbol CACHED_DATATYPE_DICTIONARY = makeCycSymbol("CACHED-DATATYPE-DICTIONARY");
    SubLSymbol CACHED_DOMAIN = makeCycSymbol("CACHED-DOMAIN");
    SubLSymbol CACHED_EXTERNAL_CONNECTION = makeCycSymbol("CACHED-EXTERNAL-CONNECTION");
    SubLSymbol CACHED_EXTERNAL_MODULE = makeCycSymbol("CACHED-EXTERNAL-MODULE");
    SubLSymbol CACHED_KSI_CLASS = makeCycSymbol("CACHED-KSI-CLASS");
    SubLSymbol CACHED_MESSAGE_BROKER = makeCycSymbol("CACHED-MESSAGE-BROKER");
    SubLSymbol CACHED_PROPOSAL_CLASS = makeCycSymbol("CACHED-PROPOSAL-CLASS");
    SubLSymbol CADR = makeCycSymbol("CADR");
    SubLSymbol CALCULATED_TAG = makeCycSymbol("CALCULATED-TAG");
    SubLSymbol CALCULATED_TAG_SUMMAND = makeCycSymbol("CALCULATED-TAG-SUMMAND");
    SubLSymbol CALLBACK_FUNCTION = makeCycSymbol("CALLBACK-FUNCTION");
    SubLSymbol CANCEL_MESSAGE = makeCycSymbol("CANCEL-MESSAGE");
    SubLSymbol CAND = makeCycSymbol("CAND");
    SubLSymbol CANDIDATE = makeCycSymbol("CANDIDATE");
    SubLSymbol CANDIDATE_ANSWER_P = makeCycSymbol("CANDIDATE-ANSWER-P");
    SubLSymbol CANDIDATES = makeCycSymbol("CANDIDATES");
    SubLSymbol CANONICALIZE_TERM = makeCycSymbol("CANONICALIZE-TERM");
    SubLSymbol CAPACITY = makeCycSymbol("CAPACITY");
    SubLSymbol CAR = makeCycSymbol("CAR");
    SubLSymbol CARDINALITY = makeCycSymbol("CARDINALITY");
    SubLSymbol CASES = makeCycSymbol("CASES");
    SubLSymbol CASE_SENSITIVEq = makeCycSymbol("CASE-SENSITIVE?");
    SubLSymbol CASE_SENSITIVITY = makeCycSymbol("CASE-SENSITIVITY");
    SubLSymbol CAST = makeCycSymbol("CAST");
    SubLSymbol CAT = makeCycSymbol("CAT");
    SubLSymbol CATCH_ERROR_MESSAGE = makeCycSymbol("CATCH-ERROR-MESSAGE");
    SubLSymbol CATCH_ERROR_MESSAGE_HANDLER = makeCycSymbol("CATCH-ERROR-MESSAGE-HANDLER");
    SubLSymbol CATEGORIES = makeCycSymbol("CATEGORIES");
    SubLSymbol CATEGORY = makeCycSymbol("CATEGORY");
    SubLSymbol CAUSE = makeCycSymbol("CAUSE");
    SubLSymbol CB_FORM = makeCycSymbol("CB-FORM");
    SubLSymbol CCATCH = makeCycSymbol("CCATCH");
    SubLSymbol qCCF_DATA_SOURCE = makeCycSymbol("?CCF-DATA-SOURCE");
    SubLSymbol qCCF_EVENT = makeCycSymbol("?CCF-EVENT");
    SubLSymbol qCCF_HOSPITAL_ADMIT_REASON_TYPE = makeCycSymbol("?CCF-HOSPITAL-ADMIT-REASON-TYPE");
    SubLSymbol CCONCATENATE = makeCycSymbol("CCONCATENATE");
    SubLSymbol CDAR = makeCycSymbol("CDAR");
    SubLSymbol CDDR = makeCycSymbol("CDDR");
    SubLSymbol CDEC = makeCycSymbol("CDEC");
    SubLSymbol CDESTRUCTURING_BIND = makeCycSymbol("CDESTRUCTURING-BIND");
    SubLSymbol CDO = makeCycSymbol("CDO");
    SubLSymbol CDO_ESSENTIAL_SLOTS = makeCycSymbol("CDO-ESSENTIAL-SLOTS");
    SubLSymbol CDOHASH = makeCycSymbol("CDOHASH");
    SubLSymbol CDOLIST = makeCycSymbol("CDOLIST");
    SubLSymbol CDOLIST_APPENDING = makeCycSymbol("CDOLIST-APPENDING");
    SubLSymbol CDOLIST_COLLECTING = makeCycSymbol("CDOLIST-COLLECTING");
    SubLSymbol CDOLIST_NUMBERED = makeCycSymbol("CDOLIST-NUMBERED");
    SubLSymbol CDOTIMES = makeCycSymbol("CDOTIMES");
    SubLSymbol CDOVECTOR = makeCycSymbol("CDOVECTOR");
    SubLSymbol CDR = makeCycSymbol("CDR");
    SubLSymbol CENTROID = makeCycSymbol("CENTROID");
    SubLSymbol CERROR = makeCycSymbol("CERROR");
    SubLSymbol CFASL_INPUT = makeCycSymbol("CFASL-INPUT");
    SubLSymbol CFASL_OUTPUT = makeCycSymbol("CFASL-OUTPUT");
    SubLSymbol CHANNEL = makeCycSymbol("CHANNEL");
    SubLSymbol CHAR = makeCycSymbol("CHAR");
    SubLSymbol CHAR1 = makeCycSymbol("CHAR1");
    SubLSymbol CHAR2 = makeCycSymbol("CHAR2");
    SubLSymbol CHARACTERP = makeCycSymbol("CHARACTERP");
    SubLSymbol CHAR_EQUAL = makeCycSymbol("CHAR-EQUAL");
    SubLSymbol $CHEAP_HL_MODULE_CHECK_COST$ = makeCycSymbol("*CHEAP-HL-MODULE-CHECK-COST*");
    SubLSymbol CHECKER = makeCycSymbol("CHECKER");
    SubLSymbol CHECK_PART_OF_SPEECH = makeCycSymbol("CHECK-PART-OF-SPEECH");
    SubLSymbol CHECK_PHRASE = makeCycSymbol("CHECK-PHRASE");
    SubLSymbol CHECK_TERM = makeCycSymbol("CHECK-TERM");
    SubLSymbol CHECK_TYPE = makeCycSymbol("CHECK-TYPE");
    SubLSymbol CHECK_TYPE_IF_PRESENT = makeCycSymbol("CHECK-TYPE-IF-PRESENT");
    SubLSymbol CHILD = makeCycSymbol("CHILD");
    SubLSymbol CHILDREN = makeCycSymbol("CHILDREN");
    SubLSymbol CHOICE = makeCycSymbol("CHOICE");
    SubLSymbol CHOICE_NUM = makeCycSymbol("CHOICE-NUM");
    SubLSymbol CHOICES = makeCycSymbol("CHOICES");
    SubLSymbol CHUNKER = makeCycSymbol("CHUNKER");
    SubLSymbol CINC = makeCycSymbol("CINC");
    SubLSymbol CLASS = makeCycSymbol("CLASS");
    SubLSymbol CLASSES = makeCycSymbol("CLASSES");
    SubLSymbol CLASSES_GETF = makeCycSymbol("CLASSES-GETF");
    SubLSymbol CLASSES_IMPLEMENTS_P = makeCycSymbol("CLASSES-IMPLEMENTS-P");
    SubLSymbol CLASSES_RETRIEVE_CLASS = makeCycSymbol("CLASSES-RETRIEVE-CLASS");
    SubLSymbol CLASS_NAME = makeCycSymbol("CLASS-NAME");
    SubLSymbol CLASS_NAME_OR_CLASS = makeCycSymbol("CLASS-NAME-OR-CLASS");
    SubLSymbol CLASS_OF = makeCycSymbol("CLASS-OF");
    SubLSymbol CLASS_OR_INSTANCE = makeCycSymbol("CLASS-OR-INSTANCE");
    SubLSymbol CLASS_P = makeCycSymbol("CLASS-P");
    SubLSymbol CLASS_REFERENCE = makeCycSymbol("CLASS-REFERENCE");
    SubLSymbol CLASS_TYPE = makeCycSymbol("CLASS-TYPE");
    SubLSymbol CLAUSE = makeCycSymbol("CLAUSE");
    SubLSymbol CLAUSES = makeCycSymbol("CLAUSES");
    SubLSymbol CL_COMPLEMENT = makeCycSymbol("CL-COMPLEMENT");
    SubLSymbol CL_CYCL = makeCycSymbol("CL-CYCL");
    SubLSymbol CLEANUP = makeCycSymbol("CLEANUP");
    SubLSymbol CLEAR = makeCycSymbol("CLEAR");
    SubLSymbol CLEAR_ALL_MARKS = makeCycSymbol("CLEAR-ALL-MARKS");
    SubLSymbol CLET = makeCycSymbol("CLET");
    SubLSymbol CLET_BIND = makeCycSymbol("CLET-BIND");
    SubLSymbol CLIENT_DATA = makeCycSymbol("CLIENT-DATA");
    SubLSymbol CLIENT_INTERACTION = makeCycSymbol("CLIENT-INTERACTION");
    SubLSymbol CLIENT_KEY = makeCycSymbol("CLIENT-KEY");
    SubLSymbol CLONE = makeCycSymbol("CLONE");
    SubLSymbol CLOSE = makeCycSymbol("CLOSE");
    SubLSymbol CLOSURE = makeCycSymbol("CLOSURE");
    SubLSymbol CLRHASH = makeCycSymbol("CLRHASH");
    SubLSymbol CLUSTER = makeCycSymbol("CLUSTER");
    SubLSymbol CMULTIPLE_VALUE_BIND = makeCycSymbol("CMULTIPLE-VALUE-BIND");
    SubLSymbol CMULTIPLE_VALUE_SETQ = makeCycSymbol("CMULTIPLE-VALUE-SETQ");
    SubLSymbol CNF = makeCycSymbol("CNF");
    SubLSymbol CNF_P = makeCycSymbol("CNF-P");
    SubLSymbol CNOT = makeCycSymbol("CNOT");
    SubLSymbol CODE = makeCycSymbol("CODE");
    SubLSymbol qCOL = makeCycSymbol("?COL");
    SubLSymbol COL = makeCycSymbol("COL");
    SubLSymbol qCOL1 = makeCycSymbol("?COL1");
    SubLSymbol COL1 = makeCycSymbol("COL1");
    SubLSymbol qCOL2 = makeCycSymbol("?COL2");
    SubLSymbol COL2 = makeCycSymbol("COL2");
    SubLSymbol qCOLL = makeCycSymbol("?COLL");
    SubLSymbol COLLECTED_PANELS = makeCycSymbol("COLLECTED-PANELS");
    SubLSymbol COLLECTED_POSTINGS = makeCycSymbol("COLLECTED-POSTINGS");
    SubLSymbol COLLECTION = makeCycSymbol("COLLECTION");
    SubLSymbol COLLECTIONq = makeCycSymbol("COLLECTION?");
    SubLSymbol COLLECTION_OR_INDIVIDUALq = makeCycSymbol("COLLECTION-OR-INDIVIDUAL?");
    SubLSymbol COLLECTION_P = makeCycSymbol("COLLECTION-P");
    SubLSymbol COLLECTION_TEMPLATE_P = makeCycSymbol("COLLECTION-TEMPLATE-P");
    SubLSymbol COLONP = makeCycSymbol("COLONP");
    SubLSymbol COLOR = makeCycSymbol("COLOR");
    SubLSymbol COLS = makeCycSymbol("COLS");
    SubLSymbol COLUMN = makeCycSymbol("COLUMN");
    SubLSymbol COMMENT = makeCycSymbol("COMMENT");
    SubLSymbol COMMON_NOUN_LINK_WORD = makeCycSymbol("COMMON-NOUN-LINK-WORD");
    SubLSymbol COMP_CYCL = makeCycSymbol("COMP-CYCL");
    SubLSymbol COMP_CYCLS = makeCycSymbol("COMP-CYCLS");
    SubLSymbol COMPILED_INHERITANCE_PATH = makeCycSymbol("COMPILED-INHERITANCE-PATH");
    SubLSymbol COMPILED_INSTANCE_SLOT_ACCESS_ALIST = makeCycSymbol("COMPILED-INSTANCE-SLOT-ACCESS-ALIST");
    SubLSymbol COMPLEMENT = makeCycSymbol("COMPLEMENT");
    SubLSymbol COMPLEMENTIZER_LINK_WORD = makeCycSymbol("COMPLEMENTIZER-LINK-WORD");
    SubLSymbol COMPLEMENTS = makeCycSymbol("COMPLEMENTS");
    SubLSymbol COMPLETE_CYCL_FOR_ONE_SUBJECT = makeCycSymbol("COMPLETE-CYCL-FOR-ONE-SUBJECT");
    SubLSymbol COMPLETENESS = makeCycSymbol("COMPLETENESS");
    SubLSymbol COMPLEX_FORMULA = makeCycSymbol("COMPLEX-FORMULA");
    SubLSymbol COMPLEX_FORMULA_ARG0 = makeCycSymbol("COMPLEX-FORMULA-ARG0");
    SubLSymbol COMPLEX_FORMULAS = makeCycSymbol("COMPLEX-FORMULAS");
    SubLSymbol COMPLEX_NOUN = makeCycSymbol("COMPLEX-NOUN");
    SubLSymbol COMPLEX_NOUNS = makeCycSymbol("COMPLEX-NOUNS");
    SubLSymbol COMPLEX_NOUNS_FILE = makeCycSymbol("COMPLEX-NOUNS-FILE");
    SubLSymbol COMP_MOD_CYCLS = makeCycSymbol("COMP-MOD-CYCLS");
    SubLSymbol COMPONENT = makeCycSymbol("COMPONENT");
    SubLSymbol COMPONENT_CLASS = makeCycSymbol("COMPONENT-CLASS");
    SubLSymbol COMPOSITE_VERBAL_CYCLS = makeCycSymbol("COMPOSITE-VERBAL-CYCLS");
    SubLSymbol COMP_REF = makeCycSymbol("COMP-REF");
    SubLSymbol COMPUTE_INDEX_ENTRIES = makeCycSymbol("COMPUTE-INDEX-ENTRIES");
    SubLSymbol CONCEPT = makeCycSymbol("CONCEPT");
    SubLSymbol CONCEPT_FILTER_SPECS = makeCycSymbol("CONCEPT-FILTER-SPECS");
    SubLSymbol CONDITION = makeCycSymbol("CONDITION");
    SubLSymbol CONDITIONAL_EFFECTS = makeCycSymbol("CONDITIONAL-EFFECTS");
    SubLSymbol CONDITIONS = makeCycSymbol("CONDITIONS");
    SubLSymbol COND_OPERATORS = makeCycSymbol("COND-OPERATORS");
    SubLSymbol CONF = makeCycSymbol("CONF");
    SubLSymbol CONFIDENCE = makeCycSymbol("CONFIDENCE");
    SubLSymbol CONFIDENCE_EXPRESSION = makeCycSymbol("CONFIDENCE-EXPRESSION");
    SubLSymbol CONJECTURES = makeCycSymbol("CONJECTURES");
    SubLSymbol CONJUNCTION = makeCycSymbol("CONJUNCTION");
    SubLSymbol CONJUNCTION_LINK_WORD = makeCycSymbol("CONJUNCTION-LINK-WORD");
    SubLSymbol CONJUNCTS = makeCycSymbol("CONJUNCTS");
    SubLSymbol CONNECTED = makeCycSymbol("CONNECTED");
    SubLSymbol CONNECTION = makeCycSymbol("CONNECTION");
    SubLSymbol CONNECTION_CLASS = makeCycSymbol("CONNECTION-CLASS");
    SubLSymbol CONS = makeCycSymbol("CONS");
    SubLSymbol CONSP = makeCycSymbol("CONSP");
    SubLSymbol CONSTANT = makeCycSymbol("CONSTANT");
    SubLSymbol CONSTANT_EXTERNAL_ID_P = makeCycSymbol("CONSTANT-EXTERNAL-ID-P");
    SubLSymbol CONSTANT_NAME = makeCycSymbol("CONSTANT-NAME");
    SubLSymbol CONSTANT_P = makeCycSymbol("CONSTANT-P");
    SubLSymbol CONSTANTS = makeCycSymbol("CONSTANTS");
    SubLSymbol CONSTRAINT = makeCycSymbol("CONSTRAINT");
    SubLSymbol CONSTRAINTS = makeCycSymbol("CONSTRAINTS");
    SubLSymbol qCONTAINER_UNDERSPECIFIED = makeCycSymbol("?CONTAINER-UNDERSPECIFIED");
    SubLSymbol CONTENT = makeCycSymbol("CONTENT");
    SubLSymbol CONTENTS = makeCycSymbol("CONTENTS");
    SubLSymbol CONTENTS_POINTER = makeCycSymbol("CONTENTS-POINTER");
    SubLSymbol CONTENT_TERMS = makeCycSymbol("CONTENT-TERMS");
    SubLSymbol CONTEXT = makeCycSymbol("CONTEXT");
    SubLSymbol CONTINUE = makeCycSymbol("CONTINUE");
    SubLSymbol CONTINUE_P = makeCycSymbol("CONTINUE-P");
    SubLSymbol CONTRIBUTIONS = makeCycSymbol("CONTRIBUTIONS");
    SubLSymbol CONTROL_VERB = makeCycSymbol("CONTROL-VERB");
    SubLSymbol CONTROL_VERB_P = makeCycSymbol("CONTROL-VERB-P");
    SubLSymbol CONVERT_TO_ELq = makeCycSymbol("CONVERT-TO-EL?");
    SubLSymbol COORDINATE_KEYWORD_RENAMING = makeCycSymbol("COORDINATE-KEYWORD-RENAMING");
    SubLSymbol COORDINATE_PHRASE_P = makeCycSymbol("COORDINATE-PHRASE-P");
    SubLSymbol COPULA = makeCycSymbol("COPULA");
    SubLSymbol COPULA_P = makeCycSymbol("COPULA-P");
    SubLSymbol COPY = makeCycSymbol("COPY");
    SubLSymbol COPY_LIST = makeCycSymbol("COPY-LIST");
    SubLSymbol COPY_OF_ENVIRONMENT = makeCycSymbol("COPY-OF-ENVIRONMENT");
    SubLSymbol COPY_TREE = makeCycSymbol("COPY-TREE");
    SubLSymbol COR = makeCycSymbol("COR");
    SubLSymbol CORE = makeCycSymbol("CORE");
    SubLSymbol COREF_DISCOURSE = makeCycSymbol("COREF-DISCOURSE");
    SubLSymbol COREFERENCE_RESOLVER = makeCycSymbol("COREFERENCE-RESOLVER");
    SubLSymbol CORPORA = makeCycSymbol("CORPORA");
    SubLSymbol CORPUS = makeCycSymbol("CORPUS");
    SubLSymbol CORRESPONDENCE = makeCycSymbol("CORRESPONDENCE");
    SubLSymbol COST = makeCycSymbol("COST");
    SubLSymbol COUNT = makeCycSymbol("COUNT");
    SubLSymbol COUNT_AS_OBJECT_BY_VERB = makeCycSymbol("COUNT-AS-OBJECT-BY-VERB");
    SubLSymbol COUNT_AS_SUBJECT_BY_VERB = makeCycSymbol("COUNT-AS-SUBJECT-BY-VERB");
    SubLSymbol COUNTER = makeCycSymbol("COUNTER");
    SubLSymbol qCOUNTRY = makeCycSymbol("?COUNTRY");
    SubLSymbol CPOP = makeCycSymbol("CPOP");
    SubLSymbol CPUSH = makeCycSymbol("CPUSH");
    SubLSymbol CPUSHNEW = makeCycSymbol("CPUSHNEW");
    SubLSymbol CREATE_DATATYPE_BAG = makeCycSymbol("CREATE-DATATYPE-BAG");
    SubLSymbol CREATE_LEX_ENTRIES = makeCycSymbol("CREATE-LEX-ENTRIES");
    SubLSymbol CREATE_POSTING = makeCycSymbol("CREATE-POSTING");
    SubLSymbol CREATE_PROPOSAL = makeCycSymbol("CREATE-PROPOSAL");
    SubLSymbol CREATE_PROPOSALS = makeCycSymbol("CREATE-PROPOSALS");
    SubLSymbol CREATE_QUEUE = makeCycSymbol("CREATE-QUEUE");
    SubLSymbol CREATE_STACK = makeCycSymbol("CREATE-STACK");
    SubLSymbol CREATOR = makeCycSymbol("CREATOR");
    SubLSymbol CROSS_PRODUCTS = makeCycSymbol("CROSS-PRODUCTS");
    SubLSymbol CSETF = makeCycSymbol("CSETF");
    SubLSymbol CSETQ = makeCycSymbol("CSETQ");
    SubLSymbol CSOME = makeCycSymbol("CSOME");
    SubLSymbol CTIME = makeCycSymbol("CTIME");
    SubLSymbol CUNWIND_PROTECT = makeCycSymbol("CUNWIND-PROTECT");
    SubLSymbol CUR_METHOD = makeCycSymbol("CUR-METHOD");
    SubLSymbol CUR_NAME = makeCycSymbol("CUR-NAME");
    SubLSymbol CUR_NUM = makeCycSymbol("CUR-NUM");
    SubLSymbol CUR_OP = makeCycSymbol("CUR-OP");
    SubLSymbol CURRENT = makeCycSymbol("CURRENT");
    SubLSymbol CURRENT_ARG = makeCycSymbol("CURRENT-ARG");
    SubLSymbol CURRENT_COLLECTION = makeCycSymbol("CURRENT-COLLECTION");
    SubLSymbol CURRENT_ENVIRONMENT = makeCycSymbol("CURRENT-ENVIRONMENT");
    SubLSymbol CURRENT_INDEX = makeCycSymbol("CURRENT-INDEX");
    SubLSymbol CURRENT_INTERACTION = makeCycSymbol("CURRENT-INTERACTION");
    SubLSymbol CURRENT_KS = makeCycSymbol("CURRENT-KS");
    SubLSymbol CURRENT_LINK = makeCycSymbol("CURRENT-LINK");
    SubLSymbol CURRENT_PANEL = makeCycSymbol("CURRENT-PANEL");
    SubLSymbol CURRENT_PARENT = makeCycSymbol("CURRENT-PARENT");
    SubLSymbol CURRENT_POSTING = makeCycSymbol("CURRENT-POSTING");
    SubLSymbol CURRENT_PROCESS = makeCycSymbol("CURRENT-PROCESS");
    SubLSymbol CURRENT_SESSION = makeCycSymbol("CURRENT-SESSION");
    SubLSymbol CURRENT_SLEEP_INTERVAL = makeCycSymbol("CURRENT-SLEEP-INTERVAL");
    SubLSymbol CURRENT_SLICE = makeCycSymbol("CURRENT-SLICE");
    SubLSymbol CURRENT_SMALL_LIST = makeCycSymbol("CURRENT-SMALL-LIST");
    SubLSymbol CURRENT_SUB_PANELS = makeCycSymbol("CURRENT-SUB-PANELS");
    SubLSymbol CURRENT_TOKEN = makeCycSymbol("CURRENT-TOKEN");
    SubLSymbol CURRENT_TYPE = makeCycSymbol("CURRENT-TYPE");
    SubLSymbol CURRENT_VAR = makeCycSymbol("CURRENT-VAR");
    SubLSymbol CUR_SCOND = makeCycSymbol("CUR-SCOND");
    SubLSymbol CUR_TASK = makeCycSymbol("CUR-TASK");
    SubLSymbol CUR_VAR = makeCycSymbol("CUR-VAR");
    SubLSymbol CUTOFF = makeCycSymbol("CUTOFF");
    SubLSymbol CWITH_OUTPUT_TO_STRING = makeCycSymbol("CWITH-OUTPUT-TO-STRING");
    SubLSymbol CYBLACK_ACTIVATION_PATTERN = makeCycSymbol("CYBLACK-ACTIVATION-PATTERN");
    SubLSymbol CYBLACK_AGENDA = makeCycSymbol("CYBLACK-AGENDA");
    SubLSymbol CYBLACK_APPLICATION_GET_BLACKBOARD = makeCycSymbol("CYBLACK-APPLICATION-GET-BLACKBOARD");
    SubLSymbol CYBLACK_APPLICATION_GET_DATATYPE_DICTIONARY = makeCycSymbol("CYBLACK-APPLICATION-GET-DATATYPE-DICTIONARY");
    SubLSymbol CYBLACK_APPLICATION_P = makeCycSymbol("CYBLACK-APPLICATION-P");
    SubLSymbol CYBLACK_AUTO_GENERATED_INTERNAL_KSI = makeCycSymbol("CYBLACK-AUTO-GENERATED-INTERNAL-KSI");
    SubLSymbol CYBLACK_AUTO_GENERATED_INTERNAL_PROPOSAL = makeCycSymbol("CYBLACK-AUTO-GENERATED-INTERNAL-PROPOSAL");
    SubLSymbol CYBLACK_AUTO_GENERATED_KS_ASSISTANT = makeCycSymbol("CYBLACK-AUTO-GENERATED-KS-ASSISTANT");
    SubLSymbol CYBLACK_BASIC_APPLICATION = makeCycSymbol("CYBLACK-BASIC-APPLICATION");
    SubLSymbol CYBLACK_BASIC_BLACKBOARD = makeCycSymbol("CYBLACK-BASIC-BLACKBOARD");
    SubLSymbol CYBLACK_BASIC_DATATYPE = makeCycSymbol("CYBLACK-BASIC-DATATYPE");
    SubLSymbol CYBLACK_BASIC_KNOWLEDGE_SOURCE_BATTERY = makeCycSymbol("CYBLACK-BASIC-KNOWLEDGE-SOURCE-BATTERY");
    SubLSymbol CYBLACK_BASIC_KNOWLEDGE_SOURCE_LIST = makeCycSymbol("CYBLACK-BASIC-KNOWLEDGE-SOURCE-LIST");
    SubLSymbol CYBLACK_BASIC_KSI = makeCycSymbol("CYBLACK-BASIC-KSI");
    SubLSymbol CYBLACK_BASIC_LOCKABLE = makeCycSymbol("CYBLACK-BASIC-LOCKABLE");
    SubLSymbol CYBLACK_BASIC_PANEL = makeCycSymbol("CYBLACK-BASIC-PANEL");
    SubLSymbol CYBLACK_BASIC_POSTING = makeCycSymbol("CYBLACK-BASIC-POSTING");
    SubLSymbol CYBLACK_BASIC_PROPOSAL = makeCycSymbol("CYBLACK-BASIC-PROPOSAL");
    SubLSymbol CYBLACK_BASIC_SEQUENCE_PANEL = makeCycSymbol("CYBLACK-BASIC-SEQUENCE-PANEL");
    SubLSymbol CYBLACK_BASIC_SUPPORT = makeCycSymbol("CYBLACK-BASIC-SUPPORT");
    SubLSymbol CYBLACK_BINDING = makeCycSymbol("CYBLACK-BINDING");
    SubLSymbol CYBLACK_BINDING_ASSOC = makeCycSymbol("CYBLACK-BINDING-ASSOC");
    SubLSymbol CYBLACK_BLACKBOARD_POST = makeCycSymbol("CYBLACK-BLACKBOARD-POST");
    SubLSymbol CYBLACK_CANCEL_MESSAGE = makeCycSymbol("CYBLACK-CANCEL-MESSAGE");
    SubLSymbol CYBLACK_CEM_EVENT_ROOT_POSTING = makeCycSymbol("CYBLACK-CEM-EVENT-ROOT-POSTING");
    SubLSymbol CYBLACK_COMPONENT = makeCycSymbol("CYBLACK-COMPONENT");
    SubLSymbol CYBLACK_CONSTRAINED_UNIFICATION_ROBOT = makeCycSymbol("CYBLACK-CONSTRAINED-UNIFICATION-ROBOT");
    SubLSymbol CYBLACK_CONSTRAINED_UNIFICATION_ROBOT_SATISFIED_BY_ANY_SOLUTION = makeCycSymbol("CYBLACK-CONSTRAINED-UNIFICATION-ROBOT-SATISFIED-BY-ANY-SOLUTION");
    SubLSymbol $CYBLACK_CYC_EVENT_BB_AGENDA$ = makeCycSymbol("*CYBLACK-CYC-EVENT-BB-AGENDA*");
    SubLSymbol CYBLACK_CYC_EVENT_BB_LAZY_AGENDA = makeCycSymbol("CYBLACK-CYC-EVENT-BB-LAZY-AGENDA");
    SubLSymbol CYBLACK_DATATYPE_DICTIONARY_INTERN = makeCycSymbol("CYBLACK-DATATYPE-DICTIONARY-INTERN");
    SubLSymbol CYBLACK_DATATYPE_GET_PANEL = makeCycSymbol("CYBLACK-DATATYPE-GET-PANEL");
    SubLSymbol CYBLACK_DATATYPE_P = makeCycSymbol("CYBLACK-DATATYPE-P");
    SubLSymbol CYBLACK_DEFAPP_BODY = makeCycSymbol("CYBLACK-DEFAPP-BODY");
    SubLSymbol CYBLACK_DEFAPP_EXPRESSION = makeCycSymbol("CYBLACK-DEFAPP-EXPRESSION");
    SubLSymbol CYBLACK_DEFBB_TYPE_RELATION = makeCycSymbol("CYBLACK-DEFBB-TYPE-RELATION");
    SubLSymbol CYBLACK_DEFKS_EXPRESSION = makeCycSymbol("CYBLACK-DEFKS-EXPRESSION");
    SubLSymbol CYBLACK_ENVIRONMENT = makeCycSymbol("CYBLACK-ENVIRONMENT");
    SubLSymbol CYBLACK_ENVIRONMENT_P = makeCycSymbol("CYBLACK-ENVIRONMENT-P");
    SubLSymbol CYBLACK_EQUAL_PREDICATE = makeCycSymbol("CYBLACK-EQUAL-PREDICATE");
    SubLSymbol CYBLACK_EXECUTE_MESSAGE = makeCycSymbol("CYBLACK-EXECUTE-MESSAGE");
    SubLSymbol CYBLACK_EXTERNAL_KNOWLEDGE_SOURCE = makeCycSymbol("CYBLACK-EXTERNAL-KNOWLEDGE-SOURCE");
    SubLSymbol CYBLACK_EXTERNAL_KNOWLEDGE_SOURCE_P = makeCycSymbol("CYBLACK-EXTERNAL-KNOWLEDGE-SOURCE-P");
    SubLSymbol CYBLACK_EXTERNAL_PROPOSAL = makeCycSymbol("CYBLACK-EXTERNAL-PROPOSAL");
    SubLSymbol CYBLACK_FORMAT = makeCycSymbol("CYBLACK-FORMAT");
    SubLSymbol CYBLACK_GUID_INFO = makeCycSymbol("CYBLACK-GUID-INFO");
    SubLSymbol CYBLACK_GUID_MANAGER = makeCycSymbol("CYBLACK-GUID-MANAGER");
    SubLSymbol CYBLACK_INVITATION_MESSAGE = makeCycSymbol("CYBLACK-INVITATION-MESSAGE");
    SubLSymbol $CYBLACK_IO_LOOP_CONTINUE$ = makeCycSymbol("*CYBLACK-IO-LOOP-CONTINUE*");
    SubLSymbol $CYBLACK_IO_STREAM_MONITOR$ = makeCycSymbol("*CYBLACK-IO-STREAM-MONITOR*");
    SubLSymbol CYBLACK_KNOWLEDGE_SOURCE_P = makeCycSymbol("CYBLACK-KNOWLEDGE-SOURCE-P");
    SubLSymbol CYBLACK_KS = makeCycSymbol("CYBLACK-KS");
    SubLSymbol CYBLACK_MESSAGE = makeCycSymbol("CYBLACK-MESSAGE");
    SubLSymbol CYBLACK_MESSAGE_BROKER = makeCycSymbol("CYBLACK-MESSAGE-BROKER");
    SubLSymbol CYBLACK_MESSAGE_P = makeCycSymbol("CYBLACK-MESSAGE-P");
    SubLSymbol CYBLACK_MONITOR = makeCycSymbol("CYBLACK-MONITOR");
    SubLSymbol CYBLACK_MONITORING_PATTERN = makeCycSymbol("CYBLACK-MONITORING-PATTERN");
    SubLSymbol CYBLACK_MONITORING_PATTERN_P = makeCycSymbol("CYBLACK-MONITORING-PATTERN-P");
    SubLSymbol CYBLACK_MUST = makeCycSymbol("CYBLACK-MUST");
    SubLSymbol CYBLACK_OBJECT = makeCycSymbol("CYBLACK-OBJECT");
    SubLSymbol CYBLACK_ORDINAL_POSTING = makeCycSymbol("CYBLACK-ORDINAL-POSTING");
    SubLSymbol CYBLACK_PANEL = makeCycSymbol("CYBLACK-PANEL");
    SubLSymbol CYBLACK_PANEL_P = makeCycSymbol("CYBLACK-PANEL-P");
    SubLSymbol CYBLACK_PATTERN = makeCycSymbol("CYBLACK-PATTERN");
    SubLSymbol CYBLACK_PORT = makeCycSymbol("CYBLACK-PORT");
    SubLSymbol CYBLACK_PORT_MANAGER = makeCycSymbol("CYBLACK-PORT-MANAGER");
    SubLSymbol CYBLACK_POSTING = makeCycSymbol("CYBLACK-POSTING");
    SubLSymbol CYBLACK_POSTING_ACTIVE_P = makeCycSymbol("CYBLACK-POSTING-ACTIVE-P");
    SubLSymbol CYBLACK_POSTING_GET_DATATYPE = makeCycSymbol("CYBLACK-POSTING-GET-DATATYPE");
    SubLSymbol CYBLACK_POSTING_P = makeCycSymbol("CYBLACK-POSTING-P");
    SubLSymbol CYBLACK_POSTING_VISITOR_P = makeCycSymbol("CYBLACK-POSTING-VISITOR-P");
    SubLSymbol CYBLACK_PRECON_PATTERN = makeCycSymbol("CYBLACK-PRECON-PATTERN");
    SubLSymbol CYBLACK_PROPOSAL_P = makeCycSymbol("CYBLACK-PROPOSAL-P");
    SubLSymbol CYBLACK_SILENCE = makeCycSymbol("CYBLACK-SILENCE");
    SubLSymbol CYBLACK_STATE_CHANGE_MESSAGE = makeCycSymbol("CYBLACK-STATE-CHANGE-MESSAGE");
    SubLSymbol CYBLACK_SYMBOL = makeCycSymbol("CYBLACK-SYMBOL");
    SubLSymbol CYBLACK_TERMINATE_MESSAGE = makeCycSymbol("CYBLACK-TERMINATE-MESSAGE");
    SubLSymbol CYBLACK_TRACING_FORMAT = makeCycSymbol("CYBLACK-TRACING-FORMAT");
    SubLSymbol $CYBLACK_UNBOUND_VALUE$ = makeCycSymbol("*CYBLACK-UNBOUND-VALUE*");
    SubLSymbol CYBLACK_UNIFICATION_ROBOT = makeCycSymbol("CYBLACK-UNIFICATION-ROBOT");
    SubLSymbol CYBLACK_VARIABLE_REFERENCE = makeCycSymbol("CYBLACK-VARIABLE-REFERENCE");
    SubLSymbol CYBLACK_VERIFY_MESSAGE = makeCycSymbol("CYBLACK-VERIFY-MESSAGE");
    SubLSymbol $CYBLACK_VIRTUAL_POSTING_ERROR_MSG$ = makeCycSymbol("*CYBLACK-VIRTUAL-POSTING-ERROR-MSG*");
    SubLSymbol CYC_ANSWERS = makeCycSymbol("CYC-ANSWERS");
    SubLSymbol CYC_ENTITY = makeCycSymbol("CYC-ENTITY");
    SubLSymbol CYC_FOCUSES = makeCycSymbol("CYC-FOCUSES");
    SubLSymbol CYC_FORT = makeCycSymbol("CYC-FORT");
    SubLSymbol CYC_FUNCTION = makeCycSymbol("CYC-FUNCTION");
    SubLSymbol CYC_IMAGE_ID = makeCycSymbol("CYC-IMAGE-ID");
    SubLSymbol qCYCL = makeCycSymbol("?CYCL");
    SubLSymbol CYCL = makeCycSymbol("CYCL");
    SubLSymbol CYCL_BINDING = makeCycSymbol("CYCL-BINDING");
    SubLSymbol CYCL_DATE = makeCycSymbol("CYCL-DATE");
    SubLSymbol CYCL_DENOTATIONAL_TERM_P = makeCycSymbol("CYCL-DENOTATIONAL-TERM-P");
    SubLSymbol CYCL_DENOTATIONS = makeCycSymbol("CYCL-DENOTATIONS");
    SubLSymbol CYCL_DIRECTION = makeCycSymbol("CYCL-DIRECTION");
    SubLSymbol CYCL_EXPRESSION_P = makeCycSymbol("CYCL-EXPRESSION-P");
    SubLSymbol CYCL_FORMULAS = makeCycSymbol("CYCL-FORMULAS");
    SubLSymbol CYCL_FUNCTION = makeCycSymbol("CYCL-FUNCTION");
    SubLSymbol CYCLIFIABLE_VERB_PHRASE = makeCycSymbol("CYCLIFIABLE-VERB-PHRASE");
    SubLSymbol CYCLIFICATION = makeCycSymbol("CYCLIFICATION");
    SubLSymbol $CYCLIFICATION_IN_PROGRESS$ = makeCycSymbol("*CYCLIFICATION-IN-PROGRESS*");
    SubLSymbol CYCLIFIER = makeCycSymbol("CYCLIFIER");
    SubLSymbol CYCLIFIER_LEXICON = makeCycSymbol("CYCLIFIER-LEXICON");
    SubLSymbol CYCLIFY = makeCycSymbol("CYCLIFY");
    SubLSymbol CYCLIFY_INT = makeCycSymbol("CYCLIFY-INT");
    SubLSymbol CYCLIFY_INT_VP = makeCycSymbol("CYCLIFY-INT-VP");
    SubLSymbol CYCLIFY_INT_VP_COORDINATION = makeCycSymbol("CYCLIFY-INT-VP-COORDINATION");
    SubLSymbol CYCLIFY_NUCLEUS = makeCycSymbol("CYCLIFY-NUCLEUS");
    SubLSymbol CYCL_INFERENCE_ANSWER = makeCycSymbol("CYCL-INFERENCE-ANSWER");
    SubLSymbol qCYCLIST = makeCycSymbol("?CYCLIST");
    SubLSymbol CYCLIST = makeCycSymbol("CYCLIST");
    SubLSymbol CYCL_PROBLEM = makeCycSymbol("CYCL-PROBLEM");
    SubLSymbol CYCL_PROBLEM_STORE_ENCODE = makeCycSymbol("CYCL-PROBLEM-STORE-ENCODE");
    SubLSymbol CYCL_PROOF = makeCycSymbol("CYCL-PROOF");
    SubLSymbol CYCLS = makeCycSymbol("CYCLS");
    SubLSymbol CYCLS0 = makeCycSymbol("CYCLS0");
    SubLSymbol CYCLS_CONJ = makeCycSymbol("CYCLS-CONJ");
    SubLSymbol CYCLS_DISJ = makeCycSymbol("CYCLS-DISJ");
    SubLSymbol CYCL_SENTENCE = makeCycSymbol("CYCL-SENTENCE");
    SubLSymbol CYCL_SENTENCE_P = makeCycSymbol("CYCL-SENTENCE-P");
    SubLSymbol CYCL_STORE = makeCycSymbol("CYCL-STORE");
    SubLSymbol CYCL_STRENGTH = makeCycSymbol("CYCL-STRENGTH");
    SubLSymbol CYCL_TERM = makeCycSymbol("CYCL-TERM");
    SubLSymbol CYCL_TERM_P = makeCycSymbol("CYCL-TERM-P");
    SubLSymbol CYCL_TRUTH = makeCycSymbol("CYCL-TRUTH");
    SubLSymbol CYCL_VAR = makeCycSymbol("CYCL-VAR");
    SubLSymbol CYCML_PRIMITIVE_INDENTED_ELEMENT = makeCycSymbol("CYCML-PRIMITIVE-INDENTED-ELEMENT");
    SubLSymbol CYC_TERM = makeCycSymbol("CYC-TERM");
    SubLSymbol CYC_TEST_KB_P = makeCycSymbol("CYC-TEST-KB-P");
    SubLSymbol CYC_VARq = makeCycSymbol("CYC-VAR?");
    SubLSymbol D = makeCycSymbol("D");
    SubLSymbol DAEMON = makeCycSymbol("DAEMON");
    SubLSymbol DAEMON_VISITOR = makeCycSymbol("DAEMON-VISITOR");
    SubLSymbol DATA = makeCycSymbol("DATA");
    SubLSymbol DATATYPE = makeCycSymbol("DATATYPE");
    SubLSymbol DATATYPE_BAG = makeCycSymbol("DATATYPE-BAG");
    SubLSymbol DATATYPE_DICTIONARY = makeCycSymbol("DATATYPE-DICTIONARY");
    SubLSymbol DATATYPE_LIST = makeCycSymbol("DATATYPE-LIST");
    SubLSymbol DATATYPE_NAME = makeCycSymbol("DATATYPE-NAME");
    SubLSymbol DATATYPE_NAMES = makeCycSymbol("DATATYPE-NAMES");
    SubLSymbol DATATYPES = makeCycSymbol("DATATYPES");
    SubLSymbol DATATYPE_STRING = makeCycSymbol("DATATYPE-STRING");
    SubLSymbol DATATYPE_VAR = makeCycSymbol("DATATYPE-VAR");
    SubLSymbol qDATE = makeCycSymbol("?DATE");
    SubLSymbol DATE = makeCycSymbol("DATE");
    SubLSymbol DATE1 = makeCycSymbol("DATE1");
    SubLSymbol DATE2 = makeCycSymbol("DATE2");
    SubLSymbol DATE_INTERVAL = makeCycSymbol("DATE-INTERVAL");
    SubLSymbol DATE_P = makeCycSymbol("DATE-P");
    SubLSymbol DATE_P_INTERNAL = makeCycSymbol("DATE-P-INTERNAL");
    SubLSymbol DATES = makeCycSymbol("DATES");
    SubLSymbol DATE_STRING = makeCycSymbol("DATE-STRING");
    SubLSymbol DATUM = makeCycSymbol("DATUM");
    SubLSymbol DAUGHTER = makeCycSymbol("DAUGHTER");
    SubLSymbol DAUGHTER_COUNT = makeCycSymbol("DAUGHTER-COUNT");
    SubLSymbol DAUGHTERS = makeCycSymbol("DAUGHTERS");
    SubLSymbol DAY = makeCycSymbol("DAY");
    SubLSymbol DAY_NUMBER = makeCycSymbol("DAY-NUMBER");
    SubLSymbol $DBMS_SERVER$ = makeCycSymbol("*DBMS-SERVER*");
    SubLSymbol DBMS_SERVER = makeCycSymbol("DBMS-SERVER");
    SubLSymbol DEACTIVATE_POSTING = makeCycSymbol("DEACTIVATE-POSTING");
    SubLSymbol DEALLOCATE_ENUMERATOR = makeCycSymbol("DEALLOCATE-ENUMERATOR");
    SubLSymbol qDEATH = makeCycSymbol("?DEATH");
    SubLSymbol DEC_ELEMENT_COUNT = makeCycSymbol("DEC-ELEMENT-COUNT");
    SubLSymbol DECL = makeCycSymbol("DECL");
    SubLSymbol DECLARE_SUBTYPE = makeCycSymbol("DECLARE-SUBTYPE");
    SubLSymbol DECOMPOSITION = makeCycSymbol("DECOMPOSITION");
    SubLSymbol DEDUCTION = makeCycSymbol("DEDUCTION");
    SubLSymbol DEDUCTION_P = makeCycSymbol("DEDUCTION-P");
    SubLSymbol DEFAULT = makeCycSymbol("DEFAULT");
    SubLSymbol $DEFAULT_ALL_TEMPORAL_RELATION_COST$ = makeCycSymbol("*DEFAULT-ALL-TEMPORAL-RELATION-COST*");
    SubLSymbol $DEFAULT_ALL_TEMPORAL_RELATION_INVERSE_COST$ = makeCycSymbol("*DEFAULT-ALL-TEMPORAL-RELATION-INVERSE-COST*");
    SubLSymbol DEFAULT_BASE_MT = makeCycSymbol("DEFAULT-BASE-MT");
    SubLSymbol DEFAULT_EXCLUDE_MTS = makeCycSymbol("DEFAULT-EXCLUDE-MTS");
    SubLSymbol DEFAULT_EXCLUDE_PREDICATES = makeCycSymbol("DEFAULT-EXCLUDE-PREDICATES");
    SubLSymbol DEFAULT_KB_SPEC = makeCycSymbol("DEFAULT-KB-SPEC");
    SubLSymbol $DEFAULT_MATH_MODULE_COST$ = makeCycSymbol("*DEFAULT-MATH-MODULE-COST*");
    SubLSymbol $DEFAULT_NOT_TEMPORAL_RELATION_CHECK_COST$ = makeCycSymbol("*DEFAULT-NOT-TEMPORAL-RELATION-CHECK-COST*");
    SubLSymbol $DEFAULT_REGEX_STRING_MATCH_COST$ = makeCycSymbol("*DEFAULT-REGEX-STRING-MATCH-COST*");
    SubLSymbol DEFAULT_STRUCT_PRINT_FUNCTION = makeCycSymbol("DEFAULT-STRUCT-PRINT-FUNCTION");
    SubLSymbol $DEFAULT_TEMPORAL_RELATION_CHECK_COST$ = makeCycSymbol("*DEFAULT-TEMPORAL-RELATION-CHECK-COST*");
    SubLSymbol $DEFAULT_TERM_PHRASES_COST$ = makeCycSymbol("*DEFAULT-TERM-PHRASES-COST*");
    SubLSymbol DEFAULT_VALUE = makeCycSymbol("DEFAULT-VALUE");
    SubLSymbol DEF_CLASS_METHOD = makeCycSymbol("DEF-CLASS-METHOD");
    SubLSymbol DEFCONSTANT = makeCycSymbol("DEFCONSTANT");
    SubLSymbol DEFINE = makeCycSymbol("DEFINE");
    SubLSymbol DEFINE_CLASS = makeCycSymbol("DEFINE-CLASS");
    SubLSymbol DEFINE_PRIVATE = makeCycSymbol("DEFINE-PRIVATE");
    SubLSymbol DEFINE_PROTECTED = makeCycSymbol("DEFINE-PROTECTED");
    SubLSymbol DEFINE_PUBLIC = makeCycSymbol("DEFINE-PUBLIC");
    SubLSymbol qDEFINING_COLL = makeCycSymbol("?DEFINING-COLL");
    SubLSymbol qDEFINING_PRED = makeCycSymbol("?DEFINING-PRED");
    SubLSymbol DEFINITE_DESCRIPTION_P = makeCycSymbol("DEFINITE-DESCRIPTION-P");
    SubLSymbol DEFINITE_RMS = makeCycSymbol("DEFINITE-RMS");
    SubLSymbol DEF_INSTANCE_METHOD = makeCycSymbol("DEF-INSTANCE-METHOD");
    SubLSymbol DEFLEXICAL = makeCycSymbol("DEFLEXICAL");
    SubLSymbol DEFLEXICAL_PRIVATE = makeCycSymbol("DEFLEXICAL-PRIVATE");
    SubLSymbol qDEFN = makeCycSymbol("?DEFN");
    SubLSymbol DEFPARAMETER = makeCycSymbol("DEFPARAMETER");
    SubLSymbol DEFVAR = makeCycSymbol("DEFVAR");
    SubLSymbol DEGENERATE_DIAGNOSIS = makeCycSymbol("DEGENERATE-DIAGNOSIS");
    SubLSymbol qDEGREE = makeCycSymbol("?DEGREE");
    SubLSymbol DELETE = makeCycSymbol("DELETE");
    SubLSymbol DELETE_CATEGORY = makeCycSymbol("DELETE-CATEGORY");
    SubLSymbol DELETE_FILE = makeCycSymbol("DELETE-FILE");
    SubLSymbol DELETE_LINK = makeCycSymbol("DELETE-LINK");
    SubLSymbol DELETE_LITERALS = makeCycSymbol("DELETE-LITERALS");
    SubLSymbol DELETE_PARENT_LINK = makeCycSymbol("DELETE-PARENT-LINK");
    SubLSymbol DELETES = makeCycSymbol("DELETES");
    SubLSymbol DELETE_SELF_FROM_ALL_COLLECTIONS = makeCycSymbol("DELETE-SELF-FROM-ALL-COLLECTIONS");
    SubLSymbol DELETE_SELF_FROM_COLLECTION = makeCycSymbol("DELETE-SELF-FROM-COLLECTION");
    SubLSymbol DEN = makeCycSymbol("DEN");
    SubLSymbol DENOMINATOR = makeCycSymbol("DENOMINATOR");
    SubLSymbol qDENOT = makeCycSymbol("?DENOT");
    SubLSymbol DENOT = makeCycSymbol("DENOT");
    SubLSymbol DENOTS = makeCycSymbol("DENOTS");
    SubLSymbol qDEP_COL = makeCycSymbol("?DEP-COL");
    SubLSymbol DEPTH = makeCycSymbol("DEPTH");
    SubLSymbol DEPTH_CUTOFF = makeCycSymbol("DEPTH-CUTOFF");
    SubLSymbol DEQUEUE = makeCycSymbol("DEQUEUE");
    SubLSymbol DEQUEUED_ITEM = makeCycSymbol("DEQUEUED-ITEM");
    SubLSymbol DEQUEUE_NOTIFY = makeCycSymbol("DEQUEUE-NOTIFY");
    SubLSymbol DESCRIBE_INSTANCE = makeCycSymbol("DESCRIBE-INSTANCE");
    SubLSymbol DESCRIBE_TERM = makeCycSymbol("DESCRIBE-TERM");
    SubLSymbol DESCRIPTION = makeCycSymbol("DESCRIPTION");
    SubLSymbol DESCRIPTIONS = makeCycSymbol("DESCRIPTIONS");
    SubLSymbol DESTINATION = makeCycSymbol("DESTINATION");
    SubLSymbol DESTRUCTURING_PREDICATION_GENERATOR = makeCycSymbol("DESTRUCTURING-PREDICATION-GENERATOR");
    SubLSymbol DET = makeCycSymbol("DET");
    SubLSymbol DETERMINER = makeCycSymbol("DETERMINER");
    SubLSymbol DIAGN = makeCycSymbol("DIAGN");
    SubLSymbol DIAGNOSE = makeCycSymbol("DIAGNOSE");
    SubLSymbol DIAGNOSIS = makeCycSymbol("DIAGNOSIS");
    SubLSymbol DICTIONARY = makeCycSymbol("DICTIONARY");
    SubLSymbol DICTIONARY_ENTER = makeCycSymbol("DICTIONARY-ENTER");
    SubLSymbol DICTIONARY_INDEX = makeCycSymbol("DICTIONARY-INDEX");
    SubLSymbol DICTIONARY_LOOKUP = makeCycSymbol("DICTIONARY-LOOKUP");
    SubLSymbol DICTIONARY_OF_NOUNS = makeCycSymbol("DICTIONARY-OF-NOUNS");
    SubLSymbol DICTIONARY_P = makeCycSymbol("DICTIONARY-P");
    SubLSymbol DICTIONARY_VALUES = makeCycSymbol("DICTIONARY-VALUES");
    SubLSymbol DIGIT_CHAR_P = makeCycSymbol("DIGIT-CHAR-P");
    SubLSymbol DIRECT_CLASS = makeCycSymbol("DIRECT-CLASS");
    SubLSymbol DIRECTION = makeCycSymbol("DIRECTION");
    SubLSymbol DIRECTION_P = makeCycSymbol("DIRECTION-P");
    SubLSymbol DIRECTIVE = makeCycSymbol("DIRECTIVE");
    SubLSymbol DIRECTIVE_ARG = makeCycSymbol("DIRECTIVE-ARG");
    SubLSymbol DIRECT_KNOWLEDGE_SOURCES = makeCycSymbol("DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol DIRECT_OBJECT = makeCycSymbol("DIRECT-OBJECT");
    SubLSymbol DIRECTORY = makeCycSymbol("DIRECTORY");
    SubLSymbol DIRECTORY_P = makeCycSymbol("DIRECTORY-P");
    SubLSymbol DISABLEq = makeCycSymbol("DISABLE?");
    SubLSymbol DISAMBIGUATOR = makeCycSymbol("DISAMBIGUATOR");
    SubLSymbol DISJUNCTIVE_KEYWORD_RENAMINGS = makeCycSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS");
    SubLSymbol DISJUNCTS = makeCycSymbol("DISJUNCTS");
    SubLSymbol DISPLAY_QUESTION = makeCycSymbol("DISPLAY-QUESTION");
    SubLSymbol DISTANCE = makeCycSymbol("DISTANCE");
    SubLSymbol DISTR_COMP_CYCLS = makeCycSymbol("DISTR-COMP-CYCLS");
    SubLSymbol DISTRIBUTE_BINDING_INFO = makeCycSymbol("DISTRIBUTE-BINDING-INFO");
    SubLSymbol DLC_CONTENTS = makeCycSymbol("DLC-CONTENTS");
    SubLSymbol DLC_NEXT = makeCycSymbol("DLC-NEXT");
    SubLSymbol DLC_OWNER = makeCycSymbol("DLC-OWNER");
    SubLSymbol DLC_PREVIOUS = makeCycSymbol("DLC-PREVIOUS");
    SubLSymbol DLL_ELEMENT_COUNT = makeCycSymbol("DLL-ELEMENT-COUNT");
    SubLSymbol DLL_ELEMENT_EQUALITY_PREDICATE = makeCycSymbol("DLL-ELEMENT-EQUALITY-PREDICATE");
    SubLSymbol DLL_FIRST_LINK = makeCycSymbol("DLL-FIRST-LINK");
    SubLSymbol DLL_LAST_LINK = makeCycSymbol("DLL-LAST-LINK");
    SubLSymbol DO_ALIST = makeCycSymbol("DO-ALIST");
    SubLSymbol DOC_ID = makeCycSymbol("DOC-ID");
    SubLSymbol DOCNO = makeCycSymbol("DOCNO");
    SubLSymbol qDOCUMENT = makeCycSymbol("?DOCUMENT");
    SubLSymbol DOCUMENT = makeCycSymbol("DOCUMENT");
    SubLSymbol DOCUMENTATION = makeCycSymbol("DOCUMENTATION");
    SubLSymbol DO_DICTIONARY = makeCycSymbol("DO-DICTIONARY");
    SubLSymbol DO_GAF_ARG_INDEX = makeCycSymbol("DO-GAF-ARG-INDEX");
    SubLSymbol DO_GAF_ARG_INDEX_GP = makeCycSymbol("DO-GAF-ARG-INDEX-GP");
    SubLSymbol DO_HASH_TABLE = makeCycSymbol("DO-HASH-TABLE");
    SubLSymbol DO_ID_INDEX = makeCycSymbol("DO-ID-INDEX");
    SubLSymbol DO_ITERATOR = makeCycSymbol("DO-ITERATOR");
    SubLSymbol DO_KB_SUID_TABLE = makeCycSymbol("DO-KB-SUID-TABLE");
    SubLSymbol DO_LIST = makeCycSymbol("DO-LIST");
    SubLSymbol DOMAIN = makeCycSymbol("DOMAIN");
    SubLSymbol DOMAIN_MT = makeCycSymbol("DOMAIN-MT");
    SubLSymbol DOMAIN_TUPLE = makeCycSymbol("DOMAIN-TUPLE");
    SubLSymbol DONE = makeCycSymbol("DONE");
    SubLSymbol DONEq = makeCycSymbol("DONE?");
    SubLSymbol DONE_VAR = makeCycSymbol("DONE-VAR");
    SubLSymbol DO_PREDICATE_EXTENT_INDEX = makeCycSymbol("DO-PREDICATE-EXTENT-INDEX");
    SubLSymbol DO_SET = makeCycSymbol("DO-SET");
    SubLSymbol DO_SET_CONTENTS = makeCycSymbol("DO-SET-CONTENTS");
    SubLSymbol DOTTED_ASSOC_PUSH = makeCycSymbol("DOTTED-ASSOC-PUSH");
    SubLSymbol DOUBLE_FLOAT = makeCycSymbol("DOUBLE-FLOAT");
    SubLSymbol DOUBLE_LINK_CELL_P = makeCycSymbol("DOUBLE-LINK-CELL-P");
    SubLSymbol DOUBLY_LINKED_LIST_TEMPLATE = makeCycSymbol("DOUBLY-LINKED-LIST-TEMPLATE");
    SubLSymbol DO_VECTOR = makeCycSymbol("DO-VECTOR");
    SubLSymbol DRT_TRACE_PROGN = makeCycSymbol("DRT-TRACE-PROGN");
    SubLSymbol DRT_WARN = makeCycSymbol("DRT-WARN");
    SubLSymbol DRS = makeCycSymbol("DRS");
    SubLSymbol DRT = makeCycSymbol("DRT");
    SubLSymbol E = makeCycSymbol("E");
    SubLSymbol EDGE = makeCycSymbol("EDGE");
    SubLSymbol EDGES = makeCycSymbol("EDGES");
    SubLSymbol EDGES_SOURCE = makeCycSymbol("EDGES-SOURCE");
    SubLSymbol EDGES_TARGET = makeCycSymbol("EDGES-TARGET");
    SubLSymbol EFFECTS = makeCycSymbol("EFFECTS");
    SubLSymbol EKSC = makeCycSymbol("EKSC");
    SubLSymbol EKS_CLASS = makeCycSymbol("EKS-CLASS");
    SubLSymbol EKSC_TO_PORT_ID_MAP = makeCycSymbol("EKSC-TO-PORT-ID-MAP");
    SubLSymbol ELAPSED_TIME = makeCycSymbol("ELAPSED-TIME");
    SubLSymbol ELEMENT = makeCycSymbol("ELEMENT");
    SubLSymbol ELEMENT1 = makeCycSymbol("ELEMENT1");
    SubLSymbol ELEMENT2 = makeCycSymbol("ELEMENT2");
    SubLSymbol ELEMENT_COUNT = makeCycSymbol("ELEMENT-COUNT");
    SubLSymbol ELEMENT_EQUALITY_PREDICATE = makeCycSymbol("ELEMENT-EQUALITY-PREDICATE");
    SubLSymbol ELEMENT_EQUAL_P = makeCycSymbol("ELEMENT-EQUAL-P");
    SubLSymbol ELEMENTS = makeCycSymbol("ELEMENTS");
    SubLSymbol ELEMENT_VAR = makeCycSymbol("ELEMENT-VAR");
    SubLSymbol EL_FORMULA = makeCycSymbol("EL-FORMULA");
    SubLSymbol EL_FORMULA_P = makeCycSymbol("EL-FORMULA-P");
    SubLSymbol EL_FORT_P = makeCycSymbol("EL-FORT-P");
    SubLSymbol EL_IMPLICATION_P = makeCycSymbol("EL-IMPLICATION-P");
    SubLSymbol EL_LIST_ITEMS = makeCycSymbol("EL-LIST-ITEMS");
    SubLSymbol EL_LIST_P = makeCycSymbol("EL-LIST-P");
    SubLSymbol ELMT = makeCycSymbol("ELMT");
    SubLSymbol EL_SENTENCE_P = makeCycSymbol("EL-SENTENCE-P");
    SubLSymbol EL_STRENGTH_P = makeCycSymbol("EL-STRENGTH-P");
    SubLSymbol ELT = makeCycSymbol("ELT");
    SubLSymbol EL_VAR = makeCycSymbol("EL-VAR");
    SubLSymbol EL_VARq = makeCycSymbol("EL-VAR?");
    SubLSymbol EL_VARIABLE_P = makeCycSymbol("EL-VARIABLE-P");
    SubLSymbol EMID = makeCycSymbol("EMID");
    SubLSymbol EMNAME = makeCycSymbol("EMNAME");
    SubLSymbol EMPTY_LIST_P = makeCycSymbol("EMPTY-LIST-P");
    SubLSymbol EMPTY_P = makeCycSymbol("EMPTY-P");
    SubLSymbol EMPTY_STRING_P = makeCycSymbol("EMPTY-STRING-P");
    SubLSymbol ENABLED = makeCycSymbol("ENABLED");
    SubLSymbol ENCODING = makeCycSymbol("ENCODING");
    SubLSymbol END = makeCycSymbol("END");
    SubLSymbol END1 = makeCycSymbol("END1");
    SubLSymbol END2 = makeCycSymbol("END2");
    SubLSymbol END_INDEX = makeCycSymbol("END-INDEX");
    SubLSymbol END_INTERACTION = makeCycSymbol("END-INTERACTION");
    SubLSymbol ENDS_WITH = makeCycSymbol("ENDS-WITH");
    SubLSymbol END_TAG = makeCycSymbol("END-TAG");
    SubLSymbol ENGINE = makeCycSymbol("ENGINE");
    SubLSymbol ENQUEUE = makeCycSymbol("ENQUEUE");
    SubLSymbol ENQUEUED_P = makeCycSymbol("ENQUEUED-P");
    SubLSymbol ENQUEUE_NOTIFY = makeCycSymbol("ENQUEUE-NOTIFY");
    SubLSymbol ENQUEUE_SERIALIZED_EVENT = makeCycSymbol("ENQUEUE-SERIALIZED-EVENT");
    SubLSymbol ENTITIES = makeCycSymbol("ENTITIES");
    SubLSymbol ENTITY = makeCycSymbol("ENTITY");
    SubLSymbol qENTITY_MENTION = makeCycSymbol("?ENTITY-MENTION");
    SubLSymbol ENTRIES = makeCycSymbol("ENTRIES");
    SubLSymbol ENTRY = makeCycSymbol("ENTRY");
    SubLSymbol ENUMERATOR = makeCycSymbol("ENUMERATOR");
    SubLSymbol ENV = makeCycSymbol("ENV");
    SubLSymbol ENVIRONMENT = makeCycSymbol("ENVIRONMENT");
    SubLSymbol ENVIRONMENTS = makeCycSymbol("ENVIRONMENTS");
    SubLSymbol ENVIRONMENT_TAG = makeCycSymbol("ENVIRONMENT-TAG");
    SubLSymbol ENVIRONMENT_VAR = makeCycSymbol("ENVIRONMENT-VAR");
    SubLSymbol ENV_VAR = makeCycSymbol("ENV-VAR");
    SubLSymbol EQUALITY_PRED = makeCycSymbol("EQUALITY-PRED");
    SubLSymbol EQUAL_P = makeCycSymbol("EQUAL-P");
    SubLSymbol EQUALS_ELq = makeCycSymbol("EQUALS-EL?");
    SubLSymbol EQUATION = makeCycSymbol("EQUATION");
    SubLSymbol ERROR = makeCycSymbol("ERROR");
    SubLSymbol ERRORq = makeCycSymbol("ERROR?");
    SubLSymbol ERROR_DATA = makeCycSymbol("ERROR-DATA");
    SubLSymbol ERROR_HANDLING = makeCycSymbol("ERROR-HANDLING");
    SubLSymbol ERROR_MESSAGE = makeCycSymbol("ERROR-MESSAGE");
    SubLSymbol EVAL = makeCycSymbol("EVAL");
    SubLSymbol EVALUATORS = makeCycSymbol("EVALUATORS");
    SubLSymbol EVAL_VAR = makeCycSymbol("EVAL-VAR");
    SubLSymbol qEVENT = makeCycSymbol("?EVENT");
    SubLSymbol EVENT = makeCycSymbol("EVENT");
    SubLSymbol qEVENT_1 = makeCycSymbol("?EVENT-1");
    SubLSymbol EVENT_TYPE = makeCycSymbol("EVENT-TYPE");
    SubLSymbol qEVT = makeCycSymbol("?EVT");
    SubLSymbol EXCLUDED_MTS = makeCycSymbol("EXCLUDED-MTS");
    SubLSymbol EXCLUDED_PANELS = makeCycSymbol("EXCLUDED-PANELS");
    SubLSymbol EXCLUDED_POS_LIST = makeCycSymbol("EXCLUDED-POS-LIST");
    SubLSymbol EXCLUDED_PREDS = makeCycSymbol("EXCLUDED-PREDS");
    SubLSymbol EXCLUDE_POS = makeCycSymbol("EXCLUDE-POS");
    SubLSymbol EXCLUDE_PREDICATE = makeCycSymbol("EXCLUDE-PREDICATE");
    SubLSymbol $EXCLUDE_SLANGq$ = makeCycSymbol("*EXCLUDE-SLANG?*");
    SubLSymbol $EXCLUDE_VULGARITIESq$ = makeCycSymbol("*EXCLUDE-VULGARITIES?*");
    SubLSymbol EXCUSES = makeCycSymbol("EXCUSES");
    SubLSymbol EXECUTABLE_KSI_QUEUE = makeCycSymbol("EXECUTABLE-KSI-QUEUE");
    SubLSymbol EXECUTE = makeCycSymbol("EXECUTE");
    SubLSymbol EXECUTE_DEF = makeCycSymbol("EXECUTE-DEF");
    SubLSymbol EXECUTE_MESSAGE = makeCycSymbol("EXECUTE-MESSAGE");
    SubLSymbol EXECUTION_MODE = makeCycSymbol("EXECUTION-MODE");
    SubLSymbol EXISTING_BINDING = makeCycSymbol("EXISTING-BINDING");
    SubLSymbol EXISTING_ENTRIES = makeCycSymbol("EXISTING-ENTRIES");
    SubLSymbol $EXPENSIVE_HL_MODULE_CHECK_COST$ = makeCycSymbol("*EXPENSIVE-HL-MODULE-CHECK-COST*");
    SubLSymbol EXPIRATION_DELTA = makeCycSymbol("EXPIRATION-DELTA");
    SubLSymbol EXPLANATION = makeCycSymbol("EXPLANATION");
    SubLSymbol EXPRESSION = makeCycSymbol("EXPRESSION");
    SubLSymbol EXPRESSION1 = makeCycSymbol("EXPRESSION1");
    SubLSymbol EXPRESSION2 = makeCycSymbol("EXPRESSION2");
    SubLSymbol EXPRESSION_INDEX = makeCycSymbol("EXPRESSION-INDEX");
    SubLSymbol EXTENSION = makeCycSymbol("EXTENSION");
    SubLSymbol EXTERNAL_CONNECTION = makeCycSymbol("EXTERNAL-CONNECTION");
    SubLSymbol EXTERNAL_ID = makeCycSymbol("EXTERNAL-ID");
    SubLSymbol EXTERNAL_KNOWLEDGE_SOURCE = makeCycSymbol("EXTERNAL-KNOWLEDGE-SOURCE");
    SubLSymbol EXTERNAL_KNOWLEDGE_SOURCE_EXPRESSIONS = makeCycSymbol("EXTERNAL-KNOWLEDGE-SOURCE-EXPRESSIONS");
    SubLSymbol EXTERNAL_MESSAGE = makeCycSymbol("EXTERNAL-MESSAGE");
    SubLSymbol EXTERNAL_MODULE = makeCycSymbol("EXTERNAL-MODULE");
    SubLSymbol EXTERNAL_MODULE_GUID = makeCycSymbol("EXTERNAL-MODULE-GUID");
    SubLSymbol EXTERNAL_MODULE_GUID_ID = makeCycSymbol("EXTERNAL-MODULE-GUID-ID");
    SubLSymbol EXTERNAL_MODULE_GUID_INFO = makeCycSymbol("EXTERNAL-MODULE-GUID-INFO");
    SubLSymbol EXTERNAL_MODULE_ID = makeCycSymbol("EXTERNAL-MODULE-ID");
    SubLSymbol EXTERNAL_MODULE_INSTANCE = makeCycSymbol("EXTERNAL-MODULE-INSTANCE");
    SubLSymbol EXTERNAL_MODULE_INSTANCES = makeCycSymbol("EXTERNAL-MODULE-INSTANCES");
    SubLSymbol EXTERNAL_MODULE_NAME = makeCycSymbol("EXTERNAL-MODULE-NAME");
    SubLSymbol EXTERNAL_MODULE_PORT = makeCycSymbol("EXTERNAL-MODULE-PORT");
    SubLSymbol EXTERNAL_MODULE_TABLE = makeCycSymbol("EXTERNAL-MODULE-TABLE");
    SubLSymbol EXTERNAL_P = makeCycSymbol("EXTERNAL-P");
    SubLSymbol EXTERNAL_POSTING = makeCycSymbol("EXTERNAL-POSTING");
    SubLSymbol EXTERNAL_POSTING_REPRESENTATION = makeCycSymbol("EXTERNAL-POSTING-REPRESENTATION");
    SubLSymbol EXTERNAL_PROPOSAL = makeCycSymbol("EXTERNAL-PROPOSAL");
    SubLSymbol EXTERNAL_REPRESENTATION = makeCycSymbol("EXTERNAL-REPRESENTATION");
    SubLSymbol EXTRACT = makeCycSymbol("EXTRACT");
    SubLSymbol qF = makeCycSymbol("?F");
    SubLSymbol F = makeCycSymbol("F");
    SubLSymbol FABRICATE = makeCycSymbol("FABRICATE");
    SubLSymbol FACCESS = makeCycSymbol("FACCESS");
    SubLSymbol FACTOR = makeCycSymbol("FACTOR");
    SubLSymbol $FACT_SHEET_LOG_FILE$ = makeCycSymbol("*FACT-SHEET-LOG-FILE*");
    SubLSymbol FAIL = makeCycSymbol("FAIL");
    SubLSymbol FALSE = makeCycSymbol("FALSE");
    SubLSymbol FBOUNDP = makeCycSymbol("FBOUNDP");
    SubLSymbol FCM = makeCycSymbol("FCM");
    SubLSymbol FCOND = makeCycSymbol("FCOND");
    SubLSymbol FHT = makeCycSymbol("FHT");
    SubLSymbol FI_ASSERT = makeCycSymbol("FI-ASSERT");
    SubLSymbol FI_BLAST = makeCycSymbol("FI-BLAST");
    SubLSymbol FIELD = makeCycSymbol("FIELD");
    SubLSymbol FIELD_LABELS = makeCycSymbol("FIELD-LABELS");
    SubLSymbol FIELD_NAME = makeCycSymbol("FIELD-NAME");
    SubLSymbol FIELDS = makeCycSymbol("FIELDS");
    SubLSymbol FIELD_WIDTH = makeCycSymbol("FIELD-WIDTH");
    SubLSymbol FIF = makeCycSymbol("FIF");
    SubLSymbol FIFTH = makeCycSymbol("FIFTH");
    SubLSymbol FILE = makeCycSymbol("FILE");
    SubLSymbol FILE_EXISTSq = makeCycSymbol("FILE-EXISTS?");
    SubLSymbol FILENAME = makeCycSymbol("FILENAME");
    SubLSymbol FILL = makeCycSymbol("FILL");
    SubLSymbol qFILLER = makeCycSymbol("?FILLER");
    SubLSymbol FILTER_CONSTRAINED_CYCLS = makeCycSymbol("FILTER-CONSTRAINED-CYCLS");
    SubLSymbol FILTERED = makeCycSymbol("FILTERED");
    SubLSymbol FILTERS = makeCycSymbol("FILTERS");
    SubLSymbol FIM = makeCycSymbol("FIM");
    SubLSymbol FIMPLIES = makeCycSymbol("FIMPLIES");
    SubLSymbol FIND = makeCycSymbol("FIND");
    SubLSymbol FIND_ASSERTION_BY_ID = makeCycSymbol("FIND-ASSERTION-BY-ID");
    SubLSymbol FIND_CONSTANT = makeCycSymbol("FIND-CONSTANT");
    SubLSymbol FIND_CONSTANT_BY_INTERNAL_ID = makeCycSymbol("FIND-CONSTANT-BY-INTERNAL-ID");
    SubLSymbol FIND_FIRST = makeCycSymbol("FIND-FIRST");
    SubLSymbol FIND_LAST = makeCycSymbol("FIND-LAST");
    SubLSymbol FIND_LINK = makeCycSymbol("FIND-LINK");
    SubLSymbol FIND_NART = makeCycSymbol("FIND-NART");
    SubLSymbol FIND_NOUN = makeCycSymbol("FIND-NOUN");
    SubLSymbol FIND_NTH_LINK = makeCycSymbol("FIND-NTH-LINK");
    SubLSymbol FIND_OBJECT_BY_HL_EXTERNAL_ID_STRING = makeCycSymbol("FIND-OBJECT-BY-HL-EXTERNAL-ID-STRING");
    SubLSymbol FIND_PACKAGE = makeCycSymbol("FIND-PACKAGE");
    SubLSymbol FIRST = makeCycSymbol("FIRST");
    SubLSymbol FIRST_ELEMENT = makeCycSymbol("FIRST-ELEMENT");
    SubLSymbol FIRST_INDEX = makeCycSymbol("FIRST-INDEX");
    SubLSymbol FIRST_LINK = makeCycSymbol("FIRST-LINK");
    SubLSymbol FIRST_OF = makeCycSymbol("FIRST-OF");
    SubLSymbol FIRST_OUTPUT = makeCycSymbol("FIRST-OUTPUT");
    SubLSymbol FIRST_P = makeCycSymbol("FIRST-P");
    SubLSymbol FIRST_PRINTED = makeCycSymbol("FIRST-PRINTED");
    SubLSymbol FI_UNASSERT = makeCycSymbol("FI-UNASSERT");
    SubLSymbol FIXNUMP = makeCycSymbol("FIXNUMP");
    SubLSymbol FLAG = makeCycSymbol("FLAG");
    SubLSymbol FLOATP = makeCycSymbol("FLOATP");
    SubLSymbol FN = makeCycSymbol("FN");
    SubLSymbol FOCUS = makeCycSymbol("FOCUS");
    SubLSymbol FOCUS_STRING = makeCycSymbol("FOCUS-STRING");
    SubLSymbol FOCUS_TREE = makeCycSymbol("FOCUS-TREE");
    SubLSymbol FOO = makeCycSymbol("FOO");
    SubLSymbol FORBID_MT = makeCycSymbol("FORBID-MT");
    SubLSymbol FORCE = makeCycSymbol("FORCE");
    SubLSymbol FORCE_OUTPUT = makeCycSymbol("FORCE-OUTPUT");
    SubLSymbol FORGE_AHEADq = makeCycSymbol("FORGE-AHEAD?");
    SubLSymbol FORM = makeCycSymbol("FORM");
    SubLSymbol FORMAT = makeCycSymbol("FORMAT");
    SubLSymbol FORMAT_NIL = makeCycSymbol("FORMAT-NIL");
    SubLSymbol FORMAT_STR = makeCycSymbol("FORMAT-STR");
    SubLSymbol FORMAT_STRING = makeCycSymbol("FORMAT-STRING");
    SubLSymbol FORMAT_TO_STRING = makeCycSymbol("FORMAT-TO-STRING");
    SubLSymbol FORMS = makeCycSymbol("FORMS");
    SubLSymbol qFORMULA = makeCycSymbol("?FORMULA");
    SubLSymbol FORMULA = makeCycSymbol("FORMULA");
    SubLSymbol FORMULA_ARG = makeCycSymbol("FORMULA-ARG");
    SubLSymbol FORMULA_ARG0 = makeCycSymbol("FORMULA-ARG0");
    SubLSymbol FORMULA_ARG1 = makeCycSymbol("FORMULA-ARG1");
    SubLSymbol FORMULA_ARG2 = makeCycSymbol("FORMULA-ARG2");
    SubLSymbol FORMULA_ARGS = makeCycSymbol("FORMULA-ARGS");
    SubLSymbol FORMULA_KEYWORDS = makeCycSymbol("FORMULA-KEYWORDS");
    SubLSymbol FORMULA_OPERATOR = makeCycSymbol("FORMULA-OPERATOR");
    SubLSymbol FORT = makeCycSymbol("FORT");
    SubLSymbol FORT_NAME = makeCycSymbol("FORT-NAME");
    SubLSymbol FORT_P = makeCycSymbol("FORT-P");
    SubLSymbol FORTS = makeCycSymbol("FORTS");
    SubLSymbol FOUND = makeCycSymbol("FOUND");
    SubLSymbol FOURTH = makeCycSymbol("FOURTH");
    SubLSymbol FRACTION = makeCycSymbol("FRACTION");
    SubLSymbol FRAME = makeCycSymbol("FRAME");
    SubLSymbol FRAME_FILTER_LEXES = makeCycSymbol("FRAME-FILTER-LEXES");
    SubLSymbol qFROM = makeCycSymbol("?FROM");
    SubLSymbol FROM = makeCycSymbol("FROM");
    SubLSymbol FROM_NODE = makeCycSymbol("FROM-NODE");
    SubLSymbol FROM_NODE_ID = makeCycSymbol("FROM-NODE-ID");
    SubLSymbol FUDGE_FACTOR = makeCycSymbol("FUDGE-FACTOR");
    SubLSymbol FULLY_BOUND_P = makeCycSymbol("FULLY-BOUND-P");
    SubLSymbol qFUNC = makeCycSymbol("?FUNC");
    SubLSymbol FUNC = makeCycSymbol("FUNC");
    SubLSymbol FUNCALL = makeCycSymbol("FUNCALL");
    SubLSymbol FUNCALL_CLASS_METHOD = makeCycSymbol("FUNCALL-CLASS-METHOD");
    SubLSymbol FUNCALL_INSTANCE_METHOD = makeCycSymbol("FUNCALL-INSTANCE-METHOD");
    SubLSymbol FUNCTION = makeCycSymbol("FUNCTION");
    SubLSymbol FUNCTION_NAME = makeCycSymbol("FUNCTION-NAME");
    SubLSymbol FUNCTIONP = makeCycSymbol("FUNCTIONP");
    SubLSymbol FUNCTION_SPEC_P = makeCycSymbol("FUNCTION-SPEC-P");
    SubLSymbol FWHEN = makeCycSymbol("FWHEN");
    SubLSymbol G = makeCycSymbol("G");
    SubLSymbol GAF = makeCycSymbol("GAF");
    SubLSymbol GAF_ARG1 = makeCycSymbol("GAF-ARG1");
    SubLSymbol GAF_ARG2 = makeCycSymbol("GAF-ARG2");
    SubLSymbol GAF_ASSERTIONq = makeCycSymbol("GAF-ASSERTION?");
    SubLSymbol GAF_FORMULA = makeCycSymbol("GAF-FORMULA");
    SubLSymbol GAF_SENTENCE = makeCycSymbol("GAF-SENTENCE");
    SubLSymbol GATHER_ARG = makeCycSymbol("GATHER-ARG");
    SubLSymbol GENDER = makeCycSymbol("GENDER");
    SubLSymbol GENDERS = makeCycSymbol("GENDERS");
    SubLSymbol qGENERAL = makeCycSymbol("?GENERAL");
    SubLSymbol GENERALITY_ESTIMATE = makeCycSymbol("GENERALITY-ESTIMATE");
    SubLSymbol GENERATED_KSI = makeCycSymbol("GENERATED-KSI");
    SubLSymbol GENERATED_ON_SHUTDOWN = makeCycSymbol("GENERATED-ON-SHUTDOWN");
    SubLSymbol GENERATED_ON_STARTUP = makeCycSymbol("GENERATED-ON-STARTUP");
    SubLSymbol GENERATE_FROM_BINDINGS_CODE = makeCycSymbol("GENERATE-FROM-BINDINGS-CODE");
    SubLSymbol GENERATE_KSI = makeCycSymbol("GENERATE-KSI");
    SubLSymbol GENERATE_PHRASE = makeCycSymbol("GENERATE-PHRASE");
    SubLSymbol GENERATE_TO_BINDINGS_CODE = makeCycSymbol("GENERATE-TO-BINDINGS-CODE");
    SubLSymbol GENERATION_MT = makeCycSymbol("GENERATION-MT");
    SubLSymbol GENERATOR = makeCycSymbol("GENERATOR");
    SubLSymbol GENERIC_ARG_P = makeCycSymbol("GENERIC-ARG-P");
    SubLSymbol GENERIC_DLLT_ADD_PARENT_LINK_FUNCTION = makeCycSymbol("GENERIC-DLLT-ADD-PARENT-LINK-FUNCTION");
    SubLSymbol GENERIC_DLLT_DELETE_LINK_FUNCTION = makeCycSymbol("GENERIC-DLLT-DELETE-LINK-FUNCTION");
    SubLSymbol qGENL = makeCycSymbol("?GENL");
    SubLSymbol GENL = makeCycSymbol("GENL");
    SubLSymbol GENLq = makeCycSymbol("GENL?");
    SubLSymbol GENL_IN_ANY_MTq = makeCycSymbol("GENL-IN-ANY-MT?");
    SubLSymbol $GENL_INVERSE_MODE_P$ = makeCycSymbol("*GENL-INVERSE-MODE-P*");
    SubLSymbol GENL_MT = makeCycSymbol("GENL-MT");
    SubLSymbol GENL_PRED = makeCycSymbol("GENL-PRED");
    SubLSymbol GENLS = makeCycSymbol("GENLS");
    SubLSymbol GENLS_OR_ISA = makeCycSymbol("GENLS-OR-ISA");
    SubLSymbol GET = makeCycSymbol("GET");
    SubLSymbol GET_ACTION = makeCycSymbol("GET-ACTION");
    SubLSymbol GET_ACTION_QUALIFIERS = makeCycSymbol("GET-ACTION-QUALIFIERS");
    SubLSymbol GET_ACTIVATION_PATTERN = makeCycSymbol("GET-ACTIVATION-PATTERN");
    SubLSymbol GET_ACTIVE_PROPOSALS = makeCycSymbol("GET-ACTIVE-PROPOSALS");
    SubLSymbol GET_ADJECTIVAL_COMPLEMENT = makeCycSymbol("GET-ADJECTIVAL-COMPLEMENT");
    SubLSymbol GET_AGENDA = makeCycSymbol("GET-AGENDA");
    SubLSymbol GET_AGENDA_CLASS = makeCycSymbol("GET-AGENDA-CLASS");
    SubLSymbol GET_ALL_ACTIVE_POSTINGS = makeCycSymbol("GET-ALL-ACTIVE-POSTINGS");
    SubLSymbol GET_ALL_KNOWLEDGE_SOURCES = makeCycSymbol("GET-ALL-KNOWLEDGE-SOURCES");
    SubLSymbol GET_ALL_POSTINGS = makeCycSymbol("GET-ALL-POSTINGS");
    SubLSymbol GET_ALL_SUB_PANELS = makeCycSymbol("GET-ALL-SUB-PANELS");
    SubLSymbol GET_ANCESTOR_OBJECTS = makeCycSymbol("GET-ANCESTOR-OBJECTS");
    SubLSymbol GET_ANCESTORS = makeCycSymbol("GET-ANCESTORS");
    SubLSymbol GET_ANSWER = makeCycSymbol("GET-ANSWER");
    SubLSymbol GET_ANTECEDENT = makeCycSymbol("GET-ANTECEDENT");
    SubLSymbol GET_APPLICATION = makeCycSymbol("GET-APPLICATION");
    SubLSymbol GET_APPLICATION_NAME = makeCycSymbol("GET-APPLICATION-NAME");
    SubLSymbol GET_ARG = makeCycSymbol("GET-ARG");
    SubLSymbol GET_ARG1 = makeCycSymbol("GET-ARG1");
    SubLSymbol GET_ARGN = makeCycSymbol("GET-ARGN");
    SubLSymbol GET_ARGS = makeCycSymbol("GET-ARGS");
    SubLSymbol GET_ARITY = makeCycSymbol("GET-ARITY");
    SubLSymbol GET_AUTO_GENERATED_KS_ASSISTANT = makeCycSymbol("GET-AUTO-GENERATED-KS-ASSISTANT");
    SubLSymbol GET_AUX_VERB = makeCycSymbol("GET-AUX-VERB");
    SubLSymbol GET_BASE_PANEL = makeCycSymbol("GET-BASE-PANEL");
    SubLSymbol GET_BINDING_LIST = makeCycSymbol("GET-BINDING-LIST");
    SubLSymbol GET_BLACKBOARD = makeCycSymbol("GET-BLACKBOARD");
    SubLSymbol GET_CATEGORIES = makeCycSymbol("GET-CATEGORIES");
    SubLSymbol GET_CATEGORY = makeCycSymbol("GET-CATEGORY");
    SubLSymbol GET_CAUSE = makeCycSymbol("GET-CAUSE");
    SubLSymbol GET_CHILDREN = makeCycSymbol("GET-CHILDREN");
    SubLSymbol GET_COLLECTIONS = makeCycSymbol("GET-COLLECTIONS");
    SubLSymbol GET_COMPLEMENTS = makeCycSymbol("GET-COMPLEMENTS");
    SubLSymbol GET_CONFIDENCE = makeCycSymbol("GET-CONFIDENCE");
    SubLSymbol GET_CONFIDENCE_LEVEL = makeCycSymbol("GET-CONFIDENCE-LEVEL");
    SubLSymbol GET_CONJUNCTION = makeCycSymbol("GET-CONJUNCTION");
    SubLSymbol GET_CONTENT = makeCycSymbol("GET-CONTENT");
    SubLSymbol GET_CONTENTS = makeCycSymbol("GET-CONTENTS");
    SubLSymbol GET_CONTENTS_POINTER = makeCycSymbol("GET-CONTENTS-POINTER");
    SubLSymbol GET_CONTEXT = makeCycSymbol("GET-CONTEXT");
    SubLSymbol GET_CONTROLLER = makeCycSymbol("GET-CONTROLLER");
    SubLSymbol GET_CONTROL_VERB = makeCycSymbol("GET-CONTROL-VERB");
    SubLSymbol GET_CYC = makeCycSymbol("GET-CYC");
    SubLSymbol GET_CYCLIFIER = makeCycSymbol("GET-CYCLIFIER");
    SubLSymbol GET_DATATYPE = makeCycSymbol("GET-DATATYPE");
    SubLSymbol GET_DATATYPE_BAG = makeCycSymbol("GET-DATATYPE-BAG");
    SubLSymbol GET_DATATYPE_DICTIONARY = makeCycSymbol("GET-DATATYPE-DICTIONARY");
    SubLSymbol GET_DAUGHTER = makeCycSymbol("GET-DAUGHTER");
    SubLSymbol GET_DEFAULT_VALUE = makeCycSymbol("GET-DEFAULT-VALUE");
    SubLSymbol GET_DESCENDANT = makeCycSymbol("GET-DESCENDANT");
    SubLSymbol GET_DETERMINER = makeCycSymbol("GET-DETERMINER");
    SubLSymbol GET_DICTIONARY = makeCycSymbol("GET-DICTIONARY");
    SubLSymbol GET_DIRECT_ACTIVE_POSTINGS = makeCycSymbol("GET-DIRECT-ACTIVE-POSTINGS");
    SubLSymbol GET_DIRECTION = makeCycSymbol("GET-DIRECTION");
    SubLSymbol GET_DIRECT_KNOWLEDGE_SOURCES = makeCycSymbol("GET-DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol GET_DIRECTLY_RELATED = makeCycSymbol("GET-DIRECTLY-RELATED");
    SubLSymbol GET_DIRECT_OBJECT = makeCycSymbol("GET-DIRECT-OBJECT");
    SubLSymbol GET_DIRECT_POSTINGS = makeCycSymbol("GET-DIRECT-POSTINGS");
    SubLSymbol GET_DOC = makeCycSymbol("GET-DOC");
    SubLSymbol GET_DOMAIN = makeCycSymbol("GET-DOMAIN");
    SubLSymbol GET_ELEMENT_COUNT = makeCycSymbol("GET-ELEMENT-COUNT");
    SubLSymbol GET_ELEMENT_EQUALITY_PREDICATE = makeCycSymbol("GET-ELEMENT-EQUALITY-PREDICATE");
    SubLSymbol GET_END_POINTER = makeCycSymbol("GET-END-POINTER");
    SubLSymbol GET_EXECUTABLE_KSI_QUEUE = makeCycSymbol("GET-EXECUTABLE-KSI-QUEUE");
    SubLSymbol GET_EXECUTION_ERROR_MESSAGE = makeCycSymbol("GET-EXECUTION-ERROR-MESSAGE");
    SubLSymbol GET_EXISTENTIAL_NULL_DETERMINER = makeCycSymbol("GET-EXISTENTIAL-NULL-DETERMINER");
    SubLSymbol GET_EXTERNAL_CONNECTION = makeCycSymbol("GET-EXTERNAL-CONNECTION");
    SubLSymbol GET_EXTERNAL_KNOWLEDGE_SOURCE = makeCycSymbol("GET-EXTERNAL-KNOWLEDGE-SOURCE");
    SubLSymbol GET_EXTERNAL_MODULE_ID = makeCycSymbol("GET-EXTERNAL-MODULE-ID");
    SubLSymbol GET_EXTERNAL_MODULE_NAME = makeCycSymbol("GET-EXTERNAL-MODULE-NAME");
    SubLSymbol GETF = makeCycSymbol("GETF");
    SubLSymbol GET_FINAL_STATE = makeCycSymbol("GET-FINAL-STATE");
    SubLSymbol GET_FIRST = makeCycSymbol("GET-FIRST");
    SubLSymbol GET_FIRST_CONS = makeCycSymbol("GET-FIRST-CONS");
    SubLSymbol GET_FIRST_LINK = makeCycSymbol("GET-FIRST-LINK");
    SubLSymbol GET_FOCUS = makeCycSymbol("GET-FOCUS");
    SubLSymbol GET_FORMULA = makeCycSymbol("GET-FORMULA");
    SubLSymbol GET_GENDER = makeCycSymbol("GET-GENDER");
    SubLSymbol GET_GROWTH_FACTOR = makeCycSymbol("GET-GROWTH-FACTOR");
    SubLSymbol GET_GUID = makeCycSymbol("GET-GUID");
    SubLSymbol GET_GUID_INFO = makeCycSymbol("GET-GUID-INFO");
    SubLSymbol GETHASH = makeCycSymbol("GETHASH");
    SubLSymbol GETHASH_WITHOUT_VALUES = makeCycSymbol("GETHASH-WITHOUT-VALUES");
    SubLSymbol GET_HEAD = makeCycSymbol("GET-HEAD");
    SubLSymbol GET_HEAD_DAUGHTER = makeCycSymbol("GET-HEAD-DAUGHTER");
    SubLSymbol GET_HEAD_DAUGHTERS = makeCycSymbol("GET-HEAD-DAUGHTERS");
    SubLSymbol GET_HEADS = makeCycSymbol("GET-HEADS");
    SubLSymbol GET_ID = makeCycSymbol("GET-ID");
    SubLSymbol GET_INCOMING_MESSAGE_QUEUE = makeCycSymbol("GET-INCOMING-MESSAGE-QUEUE");
    SubLSymbol GET_INDEX = makeCycSymbol("GET-INDEX");
    SubLSymbol GET_INDIRECT_OBJECT = makeCycSymbol("GET-INDIRECT-OBJECT");
    SubLSymbol GET_INFO = makeCycSymbol("GET-INFO");
    SubLSymbol GET_INTERLOCUTOR_AGENT = makeCycSymbol("GET-INTERLOCUTOR-AGENT");
    SubLSymbol GET_INTERNAL_REAL_TIME = makeCycSymbol("GET-INTERNAL-REAL-TIME");
    SubLSymbol GET_INTERNAL_REPRESENTATION = makeCycSymbol("GET-INTERNAL-REPRESENTATION");
    SubLSymbol GET_INTERNAL_STORAGE = makeCycSymbol("GET-INTERNAL-STORAGE");
    SubLSymbol GET_KEYSTRINGS = makeCycSymbol("GET-KEYSTRINGS");
    SubLSymbol GET_KEYWORD_RENAMINGS = makeCycSymbol("GET-KEYWORD-RENAMINGS");
    SubLSymbol GET_KEYWORDS = makeCycSymbol("GET-KEYWORDS");
    SubLSymbol GET_KNOWLEDGE_SOURCE = makeCycSymbol("GET-KNOWLEDGE-SOURCE");
    SubLSymbol GET_KNOWLEDGE_SOURCE_BATTERY = makeCycSymbol("GET-KNOWLEDGE-SOURCE-BATTERY");
    SubLSymbol GET_KNOWLEDGE_SOURCE_CLASS = makeCycSymbol("GET-KNOWLEDGE-SOURCE-CLASS");
    SubLSymbol GET_KS = makeCycSymbol("GET-KS");
    SubLSymbol GET_KSB_INFO = makeCycSymbol("GET-KSB-INFO");
    SubLSymbol GET_KSI = makeCycSymbol("GET-KSI");
    SubLSymbol GET_KSI_INDEX = makeCycSymbol("GET-KSI-INDEX");
    SubLSymbol GET_LARGEST_INDEX = makeCycSymbol("GET-LARGEST-INDEX");
    SubLSymbol GET_LAST_LINK = makeCycSymbol("GET-LAST-LINK");
    SubLSymbol GET_LEFT_LINKS = makeCycSymbol("GET-LEFT-LINKS");
    SubLSymbol GET_LENGTH = makeCycSymbol("GET-LENGTH");
    SubLSymbol GET_LEXES = makeCycSymbol("GET-LEXES");
    SubLSymbol GET_LINKAGE = makeCycSymbol("GET-LINKAGE");
    SubLSymbol GET_LINK_PHRASE = makeCycSymbol("GET-LINK-PHRASE");
    SubLSymbol GET_LIST = makeCycSymbol("GET-LIST");
    SubLSymbol GET_LIST_INTERNAL = makeCycSymbol("GET-LIST-INTERNAL");
    SubLSymbol GET_LOCAL_BINDINGS = makeCycSymbol("GET-LOCAL-BINDINGS");
    SubLSymbol GET_LOCK = makeCycSymbol("GET-LOCK");
    SubLSymbol GET_MARKS_INTERNAL = makeCycSymbol("GET-MARKS-INTERNAL");
    SubLSymbol GET_MATRIX_CLAUSE = makeCycSymbol("GET-MATRIX-CLAUSE");
    SubLSymbol GET_MESSAGE_BROKER = makeCycSymbol("GET-MESSAGE-BROKER");
    SubLSymbol GET_MODIFIEDS = makeCycSymbol("GET-MODIFIEDS");
    SubLSymbol GET_MODIFIERS = makeCycSymbol("GET-MODIFIERS");
    SubLSymbol GET_MOTHER = makeCycSymbol("GET-MOTHER");
    SubLSymbol GET_MT = makeCycSymbol("GET-MT");
    SubLSymbol GET_NAME = makeCycSymbol("GET-NAME");
    SubLSymbol GET_NTH = makeCycSymbol("GET-NTH");
    SubLSymbol GET_NUMBER = makeCycSymbol("GET-NUMBER");
    SubLSymbol GET_OBJECTS = makeCycSymbol("GET-OBJECTS");
    SubLSymbol GET_OBLIQUE_OBJECT = makeCycSymbol("GET-OBLIQUE-OBJECT");
    SubLSymbol GET_ORD = makeCycSymbol("GET-ORD");
    SubLSymbol GET_OUTPUT_STREAM_STRING = makeCycSymbol("GET-OUTPUT-STREAM-STRING");
    SubLSymbol GET_OVERT_QUANTIFIER = makeCycSymbol("GET-OVERT-QUANTIFIER");
    SubLSymbol GET_PANEL = makeCycSymbol("GET-PANEL");
    SubLSymbol GET_PANELS = makeCycSymbol("GET-PANELS");
    SubLSymbol GET_PARENT = makeCycSymbol("GET-PARENT");
    SubLSymbol GET_PARENT_LINKS = makeCycSymbol("GET-PARENT-LINKS");
    SubLSymbol GET_PARSER = makeCycSymbol("GET-PARSER");
    SubLSymbol GET_PARTICLE = makeCycSymbol("GET-PARTICLE");
    SubLSymbol GET_PENDING_ACTIONS = makeCycSymbol("GET-PENDING-ACTIONS");
    SubLSymbol GET_PERSON = makeCycSymbol("GET-PERSON");
    SubLSymbol GET_PHRASE_TREE_DAUGHTERS = makeCycSymbol("GET-PHRASE-TREE-DAUGHTERS");
    SubLSymbol GET_PORT_ID = makeCycSymbol("GET-PORT-ID");
    SubLSymbol GET_POSSESSED = makeCycSymbol("GET-POSSESSED");
    SubLSymbol GET_POSSESSOR = makeCycSymbol("GET-POSSESSOR");
    SubLSymbol GET_POSTING_DAEMONS = makeCycSymbol("GET-POSTING-DAEMONS");
    SubLSymbol GET_PP_COMPLEMENT = makeCycSymbol("GET-PP-COMPLEMENT");
    SubLSymbol GET_PPS = makeCycSymbol("GET-PPS");
    SubLSymbol GET_PRECONDITION_DATATYPES = makeCycSymbol("GET-PRECONDITION-DATATYPES");
    SubLSymbol GET_PRECONDITION_PATTERN = makeCycSymbol("GET-PRECONDITION-PATTERN");
    SubLSymbol GET_PREDICATE = makeCycSymbol("GET-PREDICATE");
    SubLSymbol GET_PRIORITIZER = makeCycSymbol("GET-PRIORITIZER");
    SubLSymbol GET_PRIORITIZER_INTERNAL = makeCycSymbol("GET-PRIORITIZER-INTERNAL");
    SubLSymbol GET_PROPOSAL_CLASS = makeCycSymbol("GET-PROPOSAL-CLASS");
    SubLSymbol GET_PROPOSAL_INDEX = makeCycSymbol("GET-PROPOSAL-INDEX");
    SubLSymbol GET_PUBLICATION_DATE = makeCycSymbol("GET-PUBLICATION-DATE");
    SubLSymbol GET_QUANTIFIED = makeCycSymbol("GET-QUANTIFIED");
    SubLSymbol GET_QUANTIFIER = makeCycSymbol("GET-QUANTIFIER");
    SubLSymbol GET_RANKED_LEXES = makeCycSymbol("GET-RANKED-LEXES");
    SubLSymbol GET_REASONS = makeCycSymbol("GET-REASONS");
    SubLSymbol GET_REFERENCE = makeCycSymbol("GET-REFERENCE");
    SubLSymbol GET_REFINED_TAG = makeCycSymbol("GET-REFINED-TAG");
    SubLSymbol GET_REFS = makeCycSymbol("GET-REFS");
    SubLSymbol GET_RELATED = makeCycSymbol("GET-RELATED");
    SubLSymbol GET_RESULT = makeCycSymbol("GET-RESULT");
    SubLSymbol GET_RIGHT_LINKS = makeCycSymbol("GET-RIGHT-LINKS");
    SubLSymbol GET_SBHL_MODULE = makeCycSymbol("GET-SBHL-MODULE");
    SubLSymbol GET_SCORE = makeCycSymbol("GET-SCORE");
    SubLSymbol GET_SECOND = makeCycSymbol("GET-SECOND");
    SubLSymbol GET_SELF_DELETION_MODE = makeCycSymbol("GET-SELF-DELETION-MODE");
    SubLSymbol GET_SEMANTIC_COMPLEMENTS = makeCycSymbol("GET-SEMANTIC-COMPLEMENTS");
    SubLSymbol GET_SEMANTIC_DIRECT_OBJECT = makeCycSymbol("GET-SEMANTIC-DIRECT-OBJECT");
    SubLSymbol GET_SEMANTIC_HEAD = makeCycSymbol("GET-SEMANTIC-HEAD");
    SubLSymbol GET_SEMANTIC_HEADS = makeCycSymbol("GET-SEMANTIC-HEADS");
    SubLSymbol GET_SEMANTIC_INDIRECT_OBJECT = makeCycSymbol("GET-SEMANTIC-INDIRECT-OBJECT");
    SubLSymbol GET_SEMANTIC_OBJECTS = makeCycSymbol("GET-SEMANTIC-OBJECTS");
    SubLSymbol GET_SEMANTIC_SUBJECT = makeCycSymbol("GET-SEMANTIC-SUBJECT");
    SubLSymbol GET_SEQUENCE_CLASS = makeCycSymbol("GET-SEQUENCE-CLASS");
    SubLSymbol GET_SESSION_ID = makeCycSymbol("GET-SESSION-ID");
    SubLSymbol GET_SISTER = makeCycSymbol("GET-SISTER");
    SubLSymbol GET_SLOT = makeCycSymbol("GET-SLOT");
    SubLSymbol GET_SOURCE = makeCycSymbol("GET-SOURCE");
    SubLSymbol GET_SPECIFIER = makeCycSymbol("GET-SPECIFIER");
    SubLSymbol GET_STATE_CHANGE_LISTENER = makeCycSymbol("GET-STATE-CHANGE-LISTENER");
    SubLSymbol GET_STATES = makeCycSymbol("GET-STATES");
    SubLSymbol GET_STATUS_IN_CYC = makeCycSymbol("GET-STATUS-IN-CYC");
    SubLSymbol GET_STORAGE_SIZE = makeCycSymbol("GET-STORAGE-SIZE");
    SubLSymbol GET_STRING = makeCycSymbol("GET-STRING");
    SubLSymbol GET_STRINGS_OF_TYPE = makeCycSymbol("GET-STRINGS-OF-TYPE");
    SubLSymbol GET_SUBJECT = makeCycSymbol("GET-SUBJECT");
    SubLSymbol GET_SUB_PANELS = makeCycSymbol("GET-SUB-PANELS");
    SubLSymbol GET_SUBSEQUENCE = makeCycSymbol("GET-SUBSEQUENCE");
    SubLSymbol GET_SUPER_PANELS = makeCycSymbol("GET-SUPER-PANELS");
    SubLSymbol GET_SUPERTYPES = makeCycSymbol("GET-SUPERTYPES");
    SubLSymbol GET_SUSPENDED_PROPOSALS = makeCycSymbol("GET-SUSPENDED-PROPOSALS");
    SubLSymbol GET_TAG = makeCycSymbol("GET-TAG");
    SubLSymbol GET_TENSE = makeCycSymbol("GET-TENSE");
    SubLSymbol GET_TEST_CASES = makeCycSymbol("GET-TEST-CASES");
    SubLSymbol GET_TEST_CATEGORY_BY_NAME = makeCycSymbol("GET-TEST-CATEGORY-BY-NAME");
    SubLSymbol GET_TIMESTAMP = makeCycSymbol("GET-TIMESTAMP");
    SubLSymbol GET_TOTAL_COUNT = makeCycSymbol("GET-TOTAL-COUNT");
    SubLSymbol GET_TOTAL_COUNT_AS_WHOLE_NOUN = makeCycSymbol("GET-TOTAL-COUNT-AS-WHOLE-NOUN");
    SubLSymbol GET_TYPE = makeCycSymbol("GET-TYPE");
    SubLSymbol GET_TYPENAME = makeCycSymbol("GET-TYPENAME");
    SubLSymbol GET_UNIQUE_BINDINGS = makeCycSymbol("GET-UNIQUE-BINDINGS");
    SubLSymbol GET_UNIQUE_ELEMENTS = makeCycSymbol("GET-UNIQUE-ELEMENTS");
    SubLSymbol GET_UNIVERSAL_TIME = makeCycSymbol("GET-UNIVERSAL-TIME");
    SubLSymbol GET_VALUE = makeCycSymbol("GET-VALUE");
    SubLSymbol GET_VALUES = makeCycSymbol("GET-VALUES");
    SubLSymbol GET_VARIABLE = makeCycSymbol("GET-VARIABLE");
    SubLSymbol GET_VARIABLES = makeCycSymbol("GET-VARIABLES");
    SubLSymbol GET_VECTOR = makeCycSymbol("GET-VECTOR");
    SubLSymbol GET_VERBAL_COMPLEMENT = makeCycSymbol("GET-VERBAL-COMPLEMENT");
    SubLSymbol GET_WORD = makeCycSymbol("GET-WORD");
    SubLSymbol GLOBAL = makeCycSymbol("GLOBAL");
    SubLSymbol GLOSS = makeCycSymbol("GLOSS");
    SubLSymbol GOAL_PATTERN = makeCycSymbol("GOAL-PATTERN");
    SubLSymbol GOAL_POSTING = makeCycSymbol("GOAL-POSTING");
    SubLSymbol GOALS = makeCycSymbol("GOALS");
    SubLSymbol GOLEM = makeCycSymbol("GOLEM");
    SubLSymbol GOLEM_MT = makeCycSymbol("GOLEM-MT");
    SubLSymbol GOOGLE_COUNT = makeCycSymbol("GOOGLE-COUNT");
    SubLSymbol GRANDMOTHER = makeCycSymbol("GRANDMOTHER");
    SubLSymbol GRANDMOTHER_HEAD = makeCycSymbol("GRANDMOTHER-HEAD");
    SubLSymbol GRAPH = makeCycSymbol("GRAPH");
    SubLSymbol GRAPHING_MT = makeCycSymbol("GRAPHING-MT");
    SubLSymbol GRAPH_NODE_P = makeCycSymbol("GRAPH-NODE-P");
    SubLSymbol GROW_BY = makeCycSymbol("GROW-BY");
    SubLSymbol GROWTH_FACTOR = makeCycSymbol("GROWTH-FACTOR");
    SubLSymbol GT_TERM_P = makeCycSymbol("GT-TERM-P");
    SubLSymbol GUID = makeCycSymbol("GUID");
    SubLSymbol GUID_AS_STRING = makeCycSymbol("GUID-AS-STRING");
    SubLSymbol GUID_AS_STRING_OR_REFERENCE = makeCycSymbol("GUID-AS-STRING-OR-REFERENCE");
    SubLSymbol GUID_HASHTABLE = makeCycSymbol("GUID-HASHTABLE");
    SubLSymbol GUID_INFO = makeCycSymbol("GUID-INFO");
    SubLSymbol GUID_MANAGER = makeCycSymbol("GUID-MANAGER");
    SubLSymbol GUID_P = makeCycSymbol("GUID-P");
    SubLSymbol GUID_STRING_OR_MESSAGE = makeCycSymbol("GUID-STRING-OR-MESSAGE");
    SubLSymbol GUID_TO_STRING = makeCycSymbol("GUID-TO-STRING");
    SubLSymbol HALT = makeCycSymbol("HALT");
    SubLSymbol HALTED_P = makeCycSymbol("HALTED-P");
    SubLSymbol HALT_REASON = makeCycSymbol("HALT-REASON");
    SubLSymbol HALT_STATUS = makeCycSymbol("HALT-STATUS");
    SubLSymbol HANDLE_ERROR = makeCycSymbol("HANDLE-ERROR");
    SubLSymbol HANDLER = makeCycSymbol("HANDLER");
    SubLSymbol HAS_CACHED_DOMAIN_P = makeCycSymbol("HAS-CACHED-DOMAIN-P");
    SubLSymbol HASH_TABLE_P = makeCycSymbol("HASH-TABLE-P");
    SubLSymbol HAS_MARK_P = makeCycSymbol("HAS-MARK-P");
    SubLSymbol HAS_NEXTq = makeCycSymbol("HAS-NEXT?");
    SubLSymbol HEAD = makeCycSymbol("HEAD");
    SubLSymbol HEAD_DAUGHTER = makeCycSymbol("HEAD-DAUGHTER");
    SubLSymbol HEAD_DAUGHTERS = makeCycSymbol("HEAD-DAUGHTERS");
    SubLSymbol qHEAD_DENOT = makeCycSymbol("?HEAD-DENOT");
    SubLSymbol HEAD_DTR = makeCycSymbol("HEAD-DTR");
    SubLSymbol HEADS = makeCycSymbol("HEADS");
    SubLSymbol qHEAD_STRING = makeCycSymbol("?HEAD-STRING");
    SubLSymbol HEAD_STRING = makeCycSymbol("HEAD-STRING");
    SubLSymbol HEAD_STRING_WITH_SUFFIX = makeCycSymbol("HEAD-STRING-WITH-SUFFIX");
    SubLSymbol HEADWORD = makeCycSymbol("HEADWORD");
    SubLSymbol HEADWORD_POSITION = makeCycSymbol("HEADWORD-POSITION");
    SubLSymbol qHEART_VALVE_REPLACEMENT = makeCycSymbol("?HEART-VALVE-REPLACEMENT");
    SubLSymbol HEIGHT = makeCycSymbol("HEIGHT");
    SubLSymbol HEURISTIC_EVALUATOR = makeCycSymbol("HEURISTIC-EVALUATOR");
    SubLSymbol HEURISTIC_EVALUATOR_REGISTRY = makeCycSymbol("HEURISTIC-EVALUATOR-REGISTRY");
    SubLSymbol HIERARCHY = makeCycSymbol("HIERARCHY");
    SubLSymbol HIGH = makeCycSymbol("HIGH");
    SubLSymbol HL_JUSTIFICATION_P = makeCycSymbol("HL-JUSTIFICATION-P");
    SubLSymbol HL_MODULE = makeCycSymbol("HL-MODULE");
    SubLSymbol $HL_MODULE_CHECK_COST$ = makeCycSymbol("*HL-MODULE-CHECK-COST*");
    SubLSymbol HL_MODULE_P = makeCycSymbol("HL-MODULE-P");
    SubLSymbol HLMT = makeCycSymbol("HLMT");
    SubLSymbol HLMTq = makeCycSymbol("HLMT?");
    SubLSymbol HLMT_EQUAL = makeCycSymbol("HLMT-EQUAL");
    SubLSymbol HLMT_P = makeCycSymbol("HLMT-P");
    SubLSymbol HL_SUPPORT_P = makeCycSymbol("HL-SUPPORT-P");
    SubLSymbol HL_TERM_P = makeCycSymbol("HL-TERM-P");
    SubLSymbol HL_TO_EL = makeCycSymbol("HL-TO-EL");
    SubLSymbol HL_VAR = makeCycSymbol("HL-VAR");
    SubLSymbol HL_VARq = makeCycSymbol("HL-VAR?");
    SubLSymbol HL_VARIABLE_P = makeCycSymbol("HL-VARIABLE-P");
    SubLSymbol qHOSPITAL_ADMIT_REASON = makeCycSymbol("?HOSPITAL-ADMIT-REASON");
    SubLSymbol qHOSPITAL_CARE = makeCycSymbol("?HOSPITAL-CARE");
    SubLSymbol HOST = makeCycSymbol("HOST");
    SubLSymbol HOUR = makeCycSymbol("HOUR");
    SubLSymbol HREF = makeCycSymbol("HREF");
    SubLSymbol HTML_CHAR = makeCycSymbol("HTML-CHAR");
    SubLSymbol HTML_DISPLAY = makeCycSymbol("HTML-DISPLAY");
    SubLSymbol HTML_DOCUMENT = makeCycSymbol("HTML-DOCUMENT");
    SubLSymbol HTML_FANCY_ANCHOR = makeCycSymbol("HTML-FANCY-ANCHOR");
    SubLSymbol HTML_FANCY_BODY = makeCycSymbol("HTML-FANCY-BODY");
    SubLSymbol HTML_FANCY_TABLE_DATA = makeCycSymbol("HTML-FANCY-TABLE-DATA");
    SubLSymbol HTML_FORMAT = makeCycSymbol("HTML-FORMAT");
    SubLSymbol HTML_INDENT = makeCycSymbol("HTML-INDENT");
    SubLSymbol HTML_INDENT_BY = makeCycSymbol("HTML-INDENT-BY");
    SubLSymbol HTML_MARKUP = makeCycSymbol("HTML-MARKUP");
    SubLSymbol HTML_NEWLINE = makeCycSymbol("HTML-NEWLINE");
    SubLSymbol HTML_PRINC = makeCycSymbol("HTML-PRINC");
    SubLSymbol HTML_SIMPLE_ATTRIBUTE = makeCycSymbol("HTML-SIMPLE-ATTRIBUTE");
    SubLSymbol HTML_STRONG = makeCycSymbol("HTML-STRONG");
    SubLSymbol HTML_SUBMIT_INPUT = makeCycSymbol("HTML-SUBMIT-INPUT");
    SubLSymbol HTML_TABLE_DATA = makeCycSymbol("HTML-TABLE-DATA");
    SubLSymbol HTML_TABLE_ROW = makeCycSymbol("HTML-TABLE-ROW");
    SubLSymbol I = makeCycSymbol("I");
    SubLSymbol qID = makeCycSymbol("?ID");
    SubLSymbol ID = makeCycSymbol("ID");
    SubLSymbol ID_STRING = makeCycSymbol("ID-STRING");
    SubLSymbol IDX = makeCycSymbol("IDX");
    SubLSymbol IGNORE = makeCycSymbol("IGNORE");
    SubLSymbol IGNORE_CACHE = makeCycSymbol("IGNORE-CACHE");
    SubLSymbol IGNORE_CACHEq = makeCycSymbol("IGNORE-CACHE?");
    SubLSymbol IGNORE_ME = makeCycSymbol("IGNORE-ME");
    SubLSymbol IGNORE_NULL_VALUES = makeCycSymbol("IGNORE-NULL-VALUES");
    SubLSymbol IMMUTABLE = makeCycSymbol("IMMUTABLE");
    SubLSymbol IMMUTABLE_P = makeCycSymbol("IMMUTABLE-P");
    SubLSymbol IMPLICIT_PROGN = makeCycSymbol("IMPLICIT-PROGN");
    SubLSymbol INC_ELEMENT_COUNT = makeCycSymbol("INC-ELEMENT-COUNT");
    SubLSymbol INCLUDED_BB_SUBSETS = makeCycSymbol("INCLUDED-BB-SUBSETS");
    SubLSymbol INCOMING_MESSAGE_QUEUE = makeCycSymbol("INCOMING-MESSAGE-QUEUE");
    SubLSymbol INCOMING_POSTING_QUEUE = makeCycSymbol("INCOMING-POSTING-QUEUE");
    SubLSymbol INCOMING_QUEUE_REFERENCE = makeCycSymbol("INCOMING-QUEUE-REFERENCE");
    SubLSymbol INCOMING_RAW_QUEUE = makeCycSymbol("INCOMING-RAW-QUEUE");
    SubLSymbol IN_CYCL = makeCycSymbol("IN-CYCL");
    SubLSymbol INDENT = makeCycSymbol("INDENT");
    SubLSymbol INDENT_NUM = makeCycSymbol("INDENT-NUM");
    SubLSymbol qINDEP_COL = makeCycSymbol("?INDEP-COL");
    SubLSymbol INDEPENDENT_MODS = makeCycSymbol("INDEPENDENT-MODS");
    SubLSymbol INDEX = makeCycSymbol("INDEX");
    SubLSymbol INDEX_ARG = makeCycSymbol("INDEX-ARG");
    SubLSymbol INDEXED_ITEMS = makeCycSymbol("INDEXED-ITEMS");
    SubLSymbol INDEXED_PRODUCTS = makeCycSymbol("INDEXED-PRODUCTS");
    SubLSymbol INDEXED_TERM_P = makeCycSymbol("INDEXED-TERM-P");
    SubLSymbol INDEX_ENTRY = makeCycSymbol("INDEX-ENTRY");
    SubLSymbol INDEX_ENTRY_COMPUTER = makeCycSymbol("INDEX-ENTRY-COMPUTER");
    SubLSymbol INDEXICAL = makeCycSymbol("INDEXICAL");
    SubLSymbol INDEX_OF_NEXT_NON_NIL_ELEMENT = makeCycSymbol("INDEX-OF-NEXT-NON-NIL-ELEMENT");
    SubLSymbol INDEX_SPEC = makeCycSymbol("INDEX-SPEC");
    SubLSymbol INDICES = makeCycSymbol("INDICES");
    SubLSymbol INDIRECT_OBJECT = makeCycSymbol("INDIRECT-OBJECT");
    SubLSymbol INFERENCE = makeCycSymbol("INFERENCE");
    SubLSymbol INFERENCE_ANSWER = makeCycSymbol("INFERENCE-ANSWER");
    SubLSymbol INFERENCE_ANSWER_P = makeCycSymbol("INFERENCE-ANSWER-P");
    SubLSymbol INFERENCE_ID = makeCycSymbol("INFERENCE-ID");
    SubLSymbol INFERENCE_ID_STRING = makeCycSymbol("INFERENCE-ID-STRING");
    SubLSymbol INFERENCE_P = makeCycSymbol("INFERENCE-P");
    SubLSymbol INFERENCE_PREDICATE_P = makeCycSymbol("INFERENCE-PREDICATE-P");
    SubLSymbol INFERENCES = makeCycSymbol("INFERENCES");
    SubLSymbol INFERENCE_SOME_GENL_PRED_OR_INVERSEq = makeCycSymbol("INFERENCE-SOME-GENL-PRED-OR-INVERSE?");
    SubLSymbol INFERIOR = makeCycSymbol("INFERIOR");
    SubLSymbol INFLECTIONS = makeCycSymbol("INFLECTIONS");
    SubLSymbol INFO = makeCycSymbol("INFO");
    SubLSymbol INFO_REQUEST = makeCycSymbol("INFO-REQUEST");
    SubLSymbol INFORMATION_REQUEST = makeCycSymbol("INFORMATION-REQUEST");
    SubLSymbol INIT = makeCycSymbol("INIT");
    SubLSymbol INITIALIZATION = makeCycSymbol("INITIALIZATION");
    SubLSymbol INITIALIZE = makeCycSymbol("INITIALIZE");
    SubLSymbol INIT_MTS = makeCycSymbol("INIT-MTS");
    SubLSymbol INLINE_GET_SLOT = makeCycSymbol("INLINE-GET-SLOT");
    SubLSymbol INLINE_METHOD = makeCycSymbol("INLINE-METHOD");
    SubLSymbol INLINE_SET_SLOT = makeCycSymbol("INLINE-SET-SLOT");
    SubLSymbol IN_PACKAGE = makeCycSymbol("IN-PACKAGE");
    SubLSymbol INPUT = makeCycSymbol("INPUT");
    SubLSymbol INPUT_LIST_POINTER = makeCycSymbol("INPUT-LIST-POINTER");
    SubLSymbol INPUT_STREAM = makeCycSymbol("INPUT-STREAM");
    SubLSymbol qINSTANCE = makeCycSymbol("?INSTANCE");
    SubLSymbol INSTANCE = makeCycSymbol("INSTANCE");
    SubLSymbol INSTANCE_CLASS = makeCycSymbol("INSTANCE-CLASS");
    SubLSymbol INSTANCE_COUNT = makeCycSymbol("INSTANCE-COUNT");
    SubLSymbol INSTANCE_INDEX = makeCycSymbol("INSTANCE-INDEX");
    SubLSymbol INSTANCE_NUMBER = makeCycSymbol("INSTANCE-NUMBER");
    SubLSymbol INSTANCE_OF_P = makeCycSymbol("INSTANCE-OF-P");
    SubLSymbol INSTANCE_OR_CLASS = makeCycSymbol("INSTANCE-OR-CLASS");
    SubLSymbol INSTANCE_P = makeCycSymbol("INSTANCE-P");
    SubLSymbol INSTANCES = makeCycSymbol("INSTANCES");
    SubLSymbol INSTANCE_SLOTS = makeCycSymbol("INSTANCE-SLOTS");
    SubLSymbol INSTANTIATED_PANEL = makeCycSymbol("INSTANTIATED-PANEL");
    SubLSymbol INSTANTIATE_SCOPE = makeCycSymbol("INSTANTIATE-SCOPE");
    SubLSymbol INTEGER = makeCycSymbol("INTEGER");
    SubLSymbol INTEGERP = makeCycSymbol("INTEGERP");
    SubLSymbol INTERACTION = makeCycSymbol("INTERACTION");
    SubLSymbol INTERACTION_MT = makeCycSymbol("INTERACTION-MT");
    SubLSymbol INTERFACE = makeCycSymbol("INTERFACE");
    SubLSymbol INTERFACE_NAME = makeCycSymbol("INTERFACE-NAME");
    SubLSymbol INTERFACE_NAMES = makeCycSymbol("INTERFACE-NAMES");
    SubLSymbol INTERLOCUTOR_AGENT = makeCycSymbol("INTERLOCUTOR-AGENT");
    SubLSymbol INTERN = makeCycSymbol("INTERN");
    SubLSymbol INTERNALIZE_ATTRIBUTES = makeCycSymbol("INTERNALIZE-ATTRIBUTES");
    SubLSymbol INTERNALIZE_CONTENT = makeCycSymbol("INTERNALIZE-CONTENT");
    SubLSymbol INTERNAL_KNOWLEDGE_SOURCE_EXPRESSIONS = makeCycSymbol("INTERNAL-KNOWLEDGE-SOURCE-EXPRESSIONS");
    SubLSymbol INTERNAL_OR_EXTERNAL_POSTING_REPRESENTATION = makeCycSymbol("INTERNAL-OR-EXTERNAL-POSTING-REPRESENTATION");
    SubLSymbol INTERNAL_PID = makeCycSymbol("INTERNAL-PID");
    SubLSymbol INTERNAL_STORAGE = makeCycSymbol("INTERNAL-STORAGE");
    SubLSymbol $INTERNAL_TIME_UNITS_PER_SECOND$ = makeCycSymbol("*INTERNAL-TIME-UNITS-PER-SECOND*");
    SubLSymbol INTERP = makeCycSymbol("INTERP");
    SubLSymbol INTERSECTION = makeCycSymbol("INTERSECTION");
    SubLSymbol INTERVAL = makeCycSymbol("INTERVAL");
    SubLSymbol INTRODUCED_VAR = makeCycSymbol("INTRODUCED-VAR");
    SubLSymbol INVALIDATE = makeCycSymbol("INVALIDATE");
    SubLSymbol INVALID_CONSTANTq = makeCycSymbol("INVALID-CONSTANT?");
    SubLSymbol INVALID_FORTq = makeCycSymbol("INVALID-FORT?");
    SubLSymbol INVERT_BOOLEAN_ANSWER = makeCycSymbol("INVERT-BOOLEAN-ANSWER");
    SubLSymbol INVERTED_INDEX = makeCycSymbol("INVERTED-INDEX");
    SubLSymbol INVERTED_P = makeCycSymbol("INVERTED-P");
    SubLSymbol INVITATION_TRANSACTION_ID = makeCycSymbol("INVITATION-TRANSACTION-ID");
    SubLSymbol INVITE_MESSAGE = makeCycSymbol("INVITE-MESSAGE");
    SubLSymbol IN_WORDNETq = makeCycSymbol("IN-WORDNET?");
    SubLSymbol ISA = makeCycSymbol("ISA");
    SubLSymbol ISAq = makeCycSymbol("ISA?");
    SubLSymbol ISA_COLLECTIONq = makeCycSymbol("ISA-COLLECTION?");
    SubLSymbol IS_ACTIVE = makeCycSymbol("IS-ACTIVE");
    SubLSymbol ISA_FILTERS = makeCycSymbol("ISA-FILTERS");
    SubLSymbol ISA_IN_ANY_MTq = makeCycSymbol("ISA-IN-ANY-MT?");
    SubLSymbol IS_A_MONITOR = makeCycSymbol("IS-A-MONITOR");
    SubLSymbol ISA_OR_GENLS = makeCycSymbol("ISA-OR-GENLS");
    SubLSymbol ISAS = makeCycSymbol("ISAS");
    SubLSymbol ISA_VAR = makeCycSymbol("ISA-VAR");
    SubLSymbol IS_CONNECTED_P = makeCycSymbol("IS-CONNECTED-P");
    SubLSymbol ISG = makeCycSymbol("ISG");
    SubLSymbol ISI_PROBLEM = makeCycSymbol("ISI-PROBLEM");
    SubLSymbol IS_METHOD = makeCycSymbol("IS-METHOD");
    SubLSymbol ISOLATE = makeCycSymbol("ISOLATE");
    SubLSymbol ISOLATED_P = makeCycSymbol("ISOLATED-P");
    SubLSymbol IS_PASSIVE = makeCycSymbol("IS-PASSIVE");
    SubLSymbol IS_PROPOSAL_AUTO_GENERATED = makeCycSymbol("IS-PROPOSAL-AUTO-GENERATED");
    SubLSymbol IS_QUERY = makeCycSymbol("IS-QUERY");
    SubLSymbol IS_VALID = makeCycSymbol("IS-VALID");
    SubLSymbol ITEM = makeCycSymbol("ITEM");
    SubLSymbol ITEM2 = makeCycSymbol("ITEM2");
    SubLSymbol ITEM_TO_INDEX = makeCycSymbol("ITEM-TO-INDEX");
    SubLSymbol ITERATE_OVER_ALL_POSTING_DAEMONS = makeCycSymbol("ITERATE-OVER-ALL-POSTING-DAEMONS");
    SubLSymbol ITERATE_OVER_ALL_POSTINGS = makeCycSymbol("ITERATE-OVER-ALL-POSTINGS");
    SubLSymbol ITERATOR = makeCycSymbol("ITERATOR");
    SubLSymbol ITERATOR_VAR = makeCycSymbol("ITERATOR-VAR");
    SubLSymbol J = makeCycSymbol("J");
    SubLSymbol JAVAFIED_NOUN = makeCycSymbol("JAVAFIED-NOUN");
    SubLSymbol JUSTIFICATION = makeCycSymbol("JUSTIFICATION");
    SubLSymbol JUSTIFICATIONS = makeCycSymbol("JUSTIFICATIONS");
    SubLSymbol KB = makeCycSymbol("KB");
    SubLSymbol KB_HL_SUPPORT = makeCycSymbol("KB-HL-SUPPORT");
    SubLSymbol KB_HL_SUPPORT_P = makeCycSymbol("KB-HL-SUPPORT-P");
    SubLSymbol KBI_DONE_IF_ANY_RESULT = makeCycSymbol("KBI-DONE-IF-ANY-RESULT");
    SubLSymbol KB_SPEC = makeCycSymbol("KB-SPEC");
    SubLSymbol qKCT = makeCycSymbol("?KCT");
    SubLSymbol aKEY = makeCycSymbol("&KEY");
    SubLSymbol KEY = makeCycSymbol("KEY");
    SubLSymbol KEY_ACCESSOR_FUNCTION = makeCycSymbol("KEY-ACCESSOR-FUNCTION");
    SubLSymbol KEY_EXPRESSION = makeCycSymbol("KEY-EXPRESSION");
    SubLSymbol KEYS = makeCycSymbol("KEYS");
    SubLSymbol KEY_VALUE = makeCycSymbol("KEY-VALUE");
    SubLSymbol KEYWORD = makeCycSymbol("KEYWORD");
    SubLSymbol KEYWORDP = makeCycSymbol("KEYWORDP");
    SubLSymbol KEYWORD_PACKAGE = makeCycSymbol("KEYWORD-PACKAGE");
    SubLSymbol KEYWORDS = makeCycSymbol("KEYWORDS");
    SubLSymbol KILL_PROCESS = makeCycSymbol("KILL-PROCESS");
    SubLSymbol KMG = makeCycSymbol("KMG");
    SubLSymbol KMG_P = makeCycSymbol("KMG-P");
    SubLSymbol KNOWLEDGE_SOURCE = makeCycSymbol("KNOWLEDGE-SOURCE");
    SubLSymbol KNOWLEDGE_SOURCE_BATTERY = makeCycSymbol("KNOWLEDGE-SOURCE-BATTERY");
    SubLSymbol KNOWLEDGE_SOURCE_CLASS = makeCycSymbol("KNOWLEDGE-SOURCE-CLASS");
    SubLSymbol KNOWLEDGE_SOURCES = makeCycSymbol("KNOWLEDGE-SOURCES");
    SubLSymbol qKS = makeCycSymbol("?KS");
    SubLSymbol KS = makeCycSymbol("KS");
    SubLSymbol KS_ARGS = makeCycSymbol("KS-ARGS");
    SubLSymbol KS_ASSISTANT = makeCycSymbol("KS-ASSISTANT");
    SubLSymbol KSB = makeCycSymbol("KSB");
    SubLSymbol KSB_BODY = makeCycSymbol("KSB-BODY");
    SubLSymbol KSB_EXPRESSION = makeCycSymbol("KSB-EXPRESSION");
    SubLSymbol KSB_IDENTIFIER = makeCycSymbol("KSB-IDENTIFIER");
    SubLSymbol KSB_INFO = makeCycSymbol("KSB-INFO");
    SubLSymbol KS_CLASS = makeCycSymbol("KS-CLASS");
    SubLSymbol KSI = makeCycSymbol("KSI");
    SubLSymbol KSI_CLASS = makeCycSymbol("KSI-CLASS");
    SubLSymbol KSI_INDEX = makeCycSymbol("KSI-INDEX");
    SubLSymbol KSI_NAME = makeCycSymbol("KSI-NAME");
    SubLSymbol KS_INSTANCE = makeCycSymbol("KS-INSTANCE");
    SubLSymbol KS_NAME = makeCycSymbol("KS-NAME");
    SubLSymbol KS_VISITOR = makeCycSymbol("KS-VISITOR");
    SubLSymbol L = makeCycSymbol("L");
    SubLSymbol LABEL = makeCycSymbol("LABEL");
    SubLSymbol LAMBDA_LIST = makeCycSymbol("LAMBDA-LIST");
    SubLSymbol LANGUAGE = makeCycSymbol("LANGUAGE");
    SubLSymbol LANGUAGE_MT = makeCycSymbol("LANGUAGE-MT");
    SubLSymbol LARGEST_INDEX = makeCycSymbol("LARGEST-INDEX");
    SubLSymbol LAST = makeCycSymbol("LAST");
    SubLSymbol LAST_CONS = makeCycSymbol("LAST-CONS");
    SubLSymbol LAST_CONTENTS = makeCycSymbol("LAST-CONTENTS");
    SubLSymbol LAST_CYCLE_TIMESTAMP = makeCycSymbol("LAST-CYCLE-TIMESTAMP");
    SubLSymbol LAST_LINK = makeCycSymbol("LAST-LINK");
    SubLSymbol LAST_P = makeCycSymbol("LAST-P");
    SubLSymbol qLAT = makeCycSymbol("?LAT");
    SubLSymbol LAT = makeCycSymbol("LAT");
    SubLSymbol qLAT1 = makeCycSymbol("?LAT1");
    SubLSymbol qLAT2 = makeCycSymbol("?LAT2");
    SubLSymbol qLATER = makeCycSymbol("?LATER");
    SubLSymbol LEARN = makeCycSymbol("LEARN");
    SubLSymbol LEARNABLE_TYPES = makeCycSymbol("LEARNABLE-TYPES");
    SubLSymbol LEARNED = makeCycSymbol("LEARNED");
    SubLSymbol LEFT_LINKS = makeCycSymbol("LEFT-LINKS");
    SubLSymbol LEMMA = makeCycSymbol("LEMMA");
    SubLSymbol LENGTH = makeCycSymbol("LENGTH");
    SubLSymbol LEVEL = makeCycSymbol("LEVEL");
    SubLSymbol LEX = makeCycSymbol("LEX");
    SubLSymbol LEX_DEBUG_OUT = makeCycSymbol("LEX-DEBUG-OUT");
    SubLSymbol LEX_DESCRIBE_TERM = makeCycSymbol("LEX-DESCRIBE-TERM");
    SubLSymbol LEXEME = makeCycSymbol("LEXEME");
    SubLSymbol LEXEME_CLASS = makeCycSymbol("LEXEME-CLASS");
    SubLSymbol LEX_ENTRIES = makeCycSymbol("LEX-ENTRIES");
    SubLSymbol LEX_ENTRY = makeCycSymbol("LEX-ENTRY");
    SubLSymbol LEX_ENTRY_P = makeCycSymbol("LEX-ENTRY-P");
    SubLSymbol LEXES = makeCycSymbol("LEXES");
    SubLSymbol LEXICAL_MT = makeCycSymbol("LEXICAL-MT");
    SubLSymbol LEXICON = makeCycSymbol("LEXICON");
    SubLSymbol LEXICON_ITERATOR = makeCycSymbol("LEXICON-ITERATOR");
    SubLSymbol $LEXICON_LOOKUP_MT$ = makeCycSymbol("*LEXICON-LOOKUP-MT*");
    SubLSymbol LEXIFIED = makeCycSymbol("LEXIFIED");
    SubLSymbol LEXIFIER = makeCycSymbol("LEXIFIER");
    SubLSymbol LEXIFY = makeCycSymbol("LEXIFY");
    SubLSymbol LEXIFY_INT = makeCycSymbol("LEXIFY-INT");
    SubLSymbol LEXIFY_SENTENCE = makeCycSymbol("LEXIFY-SENTENCE");
    SubLSymbol LEX_SCORE = makeCycSymbol("LEX-SCORE");
    SubLSymbol LEX_SCORES = makeCycSymbol("LEX-SCORES");
    SubLSymbol LEX_STRING_TOKENIZE = makeCycSymbol("LEX-STRING-TOKENIZE");
    SubLSymbol LEX_TRACE = makeCycSymbol("LEX-TRACE");
    SubLSymbol LEX_WARN = makeCycSymbol("LEX-WARN");
    SubLSymbol LEXWIZ_ERROR_MESSAGE = makeCycSymbol("LEXWIZ-ERROR-MESSAGE");
    SubLSymbol LEXWIZ_HEADWORD_POSITION = makeCycSymbol("LEXWIZ-HEADWORD-POSITION");
    SubLSymbol LEXWIZ_MT = makeCycSymbol("LEXWIZ-MT");
    SubLSymbol LEXWIZ_PARAMETERS = makeCycSymbol("LEXWIZ-PARAMETERS");
    SubLSymbol LEXWIZ_PHRASE = makeCycSymbol("LEXWIZ-PHRASE");
    SubLSymbol LEXWIZ_SETTINGS = makeCycSymbol("LEXWIZ-SETTINGS");
    SubLSymbol LEXWIZ_TERM = makeCycSymbol("LEXWIZ-TERM");
    SubLSymbol qLF = makeCycSymbol("?LF");
    SubLSymbol LF = makeCycSymbol("LF");
    SubLSymbol qLFI = makeCycSymbol("?LFI");
    SubLSymbol LFI = makeCycSymbol("LFI");
    SubLSymbol LINE = makeCycSymbol("LINE");
    SubLSymbol LINK = makeCycSymbol("LINK");
    SubLSymbol LINK1 = makeCycSymbol("LINK1");
    SubLSymbol LINK2 = makeCycSymbol("LINK2");
    SubLSymbol LINKAGE = makeCycSymbol("LINKAGE");
    SubLSymbol LINK_BODY = makeCycSymbol("LINK-BODY");
    SubLSymbol LINKED_TO_PANELS = makeCycSymbol("LINKED-TO-PANELS");
    SubLSymbol LINK_KSI = makeCycSymbol("LINK-KSI");
    SubLSymbol LINK_NAME = makeCycSymbol("LINK-NAME");
    SubLSymbol LINK_NODES_VAR = makeCycSymbol("LINK-NODES-VAR");
    SubLSymbol LINK_NODE_VAR = makeCycSymbol("LINK-NODE-VAR");
    SubLSymbol LINK_PATH = makeCycSymbol("LINK-PATH");
    SubLSymbol LINK_PATTERN = makeCycSymbol("LINK-PATTERN");
    SubLSymbol LINKS = makeCycSymbol("LINKS");
    SubLSymbol LINK_TO_PANELS = makeCycSymbol("LINK-TO-PANELS");
    SubLSymbol LINK_VAR = makeCycSymbol("LINK-VAR");
    SubLSymbol qLIST = makeCycSymbol("?LIST");
    SubLSymbol LIST = makeCycSymbol("LIST");
    SubLSymbol LIST$ = makeCycSymbol("LIST*");
    SubLSymbol LIST1 = makeCycSymbol("LIST1");
    SubLSymbol LISTED_SLOTS = makeCycSymbol("LISTED-SLOTS");
    SubLSymbol LIST_ELEMENT_TEMPLATE = makeCycSymbol("LIST-ELEMENT-TEMPLATE");
    SubLSymbol LIST_ELEMENT_TEMPLATE_P = makeCycSymbol("LIST-ELEMENT-TEMPLATE-P");
    SubLSymbol LISTFORM = makeCycSymbol("LISTFORM");
    SubLSymbol LISTIFIED_RESULT = makeCycSymbol("LISTIFIED-RESULT");
    SubLSymbol LISTIFY = makeCycSymbol("LISTIFY");
    SubLSymbol LISTIFY_LOCAL_BINDINGS = makeCycSymbol("LISTIFY-LOCAL-BINDINGS");
    SubLSymbol LIST_LENGTH = makeCycSymbol("LIST-LENGTH");
    SubLSymbol LIST_OF_MARKS = makeCycSymbol("LIST-OF-MARKS");
    SubLSymbol LIST_OF_STRINGS = makeCycSymbol("LIST-OF-STRINGS");
    SubLSymbol LISTP = makeCycSymbol("LISTP");
    SubLSymbol LIT = makeCycSymbol("LIT");
    SubLSymbol LITERAL = makeCycSymbol("LITERAL");
    SubLSymbol LITERALS = makeCycSymbol("LITERALS");
    SubLSymbol LITERAL_VALUE = makeCycSymbol("LITERAL-VALUE");
    SubLSymbol LITTLE_STRING = makeCycSymbol("LITTLE-STRING");
    SubLSymbol LOCAL_ARGS = makeCycSymbol("LOCAL-ARGS");
    SubLSymbol LOCAL_BINDINGS = makeCycSymbol("LOCAL-BINDINGS");
    SubLSymbol LOCAL_ENVIRONMENT = makeCycSymbol("LOCAL-ENVIRONMENT");
    SubLSymbol LOCALS = makeCycSymbol("LOCALS");
    SubLSymbol LOCK = makeCycSymbol("LOCK");
    SubLSymbol LOCK_HISTORY = makeCycSymbol("LOCK-HISTORY");
    SubLSymbol LOG = makeCycSymbol("LOG");
    SubLSymbol LOG_ENTRY = makeCycSymbol("LOG-ENTRY");
    SubLSymbol LOG_FANCY_ENTRY = makeCycSymbol("LOG-FANCY-ENTRY");
    SubLSymbol LOGICAL_EXPRESSION = makeCycSymbol("LOGICAL-EXPRESSION");
    SubLSymbol LOGICAL_FORM = makeCycSymbol("LOGICAL-FORM");
    SubLSymbol LOGICAL_FORM_INT = makeCycSymbol("LOGICAL-FORM-INT");
    SubLSymbol qLOGICAL_SCHEMA = makeCycSymbol("?LOGICAL-SCHEMA");
    SubLSymbol LOGICAL_SCHEMA = makeCycSymbol("LOGICAL-SCHEMA");
    SubLSymbol LOG_NEWLINE = makeCycSymbol("LOG-NEWLINE");
    SubLSymbol qLONG = makeCycSymbol("?LONG");
    SubLSymbol LONG = makeCycSymbol("LONG");
    SubLSymbol LOOKUP = makeCycSymbol("LOOKUP");
    SubLSymbol LOOKUP_MT = makeCycSymbol("LOOKUP-MT");
    SubLSymbol LOW = makeCycSymbol("LOW");
    SubLSymbol qLS = makeCycSymbol("?LS");
    SubLSymbol qM = makeCycSymbol("?M");
    SubLSymbol M = makeCycSymbol("M");
    SubLSymbol MACHINE = makeCycSymbol("MACHINE");
    SubLSymbol MAIN = makeCycSymbol("MAIN");
    SubLSymbol MAIN_PARSER = makeCycSymbol("MAIN-PARSER");
    SubLSymbol MAIN_VERB = makeCycSymbol("MAIN-VERB");
    SubLSymbol MAIN_VERB_LINK_WORD = makeCycSymbol("MAIN-VERB-LINK-WORD");
    SubLSymbol MAKE_BINARY_FORMULA = makeCycSymbol("MAKE-BINARY-FORMULA");
    SubLSymbol MAKE_DOUBLE_LINK_CELL = makeCycSymbol("MAKE-DOUBLE-LINK-CELL");
    SubLSymbol MAKE_HASH_TABLE = makeCycSymbol("MAKE-HASH-TABLE");
    SubLSymbol MAKE_LIST = makeCycSymbol("MAKE-LIST");
    SubLSymbol MAKE_LOCK = makeCycSymbol("MAKE-LOCK");
    SubLSymbol MAKE_STRING_OUTPUT_STREAM = makeCycSymbol("MAKE-STRING-OUTPUT-STREAM");
    SubLSymbol MAKE_SYMBOL = makeCycSymbol("MAKE-SYMBOL");
    SubLSymbol MAKE_VECTOR = makeCycSymbol("MAKE-VECTOR");
    SubLSymbol qMANAGEMENT_ENCOUNTER = makeCycSymbol("?MANAGEMENT-ENCOUNTER");
    SubLSymbol MAP = makeCycSymbol("MAP");
    SubLSymbol MAPCAR = makeCycSymbol("MAPCAR");
    SubLSymbol MAPPED_PROBLEM_P = makeCycSymbol("MAPPED-PROBLEM-P");
    SubLSymbol MAPPING_MT = makeCycSymbol("MAPPING-MT");
    SubLSymbol MARK = makeCycSymbol("MARK");
    SubLSymbol MARKS = makeCycSymbol("MARKS");
    SubLSymbol MATCH = makeCycSymbol("MATCH");
    SubLSymbol MATRIX = makeCycSymbol("MATRIX");
    SubLSymbol MATRIX_HEAD = makeCycSymbol("MATRIX-HEAD");
    SubLSymbol MAX = makeCycSymbol("MAX");
    SubLSymbol MAX_CANDIDATES = makeCycSymbol("MAX-CANDIDATES");
    SubLSymbol MAX_CONFIDENCE = makeCycSymbol("MAX-CONFIDENCE");
    SubLSymbol MAXIMUM_ACCELERATION = makeCycSymbol("MAXIMUM-ACCELERATION");
    SubLSymbol MAX_NUMBER = makeCycSymbol("MAX-NUMBER");
    SubLSymbol MAX_RANKING_LENGTH = makeCycSymbol("MAX-RANKING-LENGTH");
    SubLSymbol MAX_SCORE = makeCycSymbol("MAX-SCORE");
    SubLSymbol MBIND = makeCycSymbol("MBIND");
    SubLSymbol MBINDING = makeCycSymbol("MBINDING");
    SubLSymbol MBINDINGS = makeCycSymbol("MBINDINGS");
    SubLSymbol MEANING = makeCycSymbol("MEANING");
    SubLSymbol MEANINGS = makeCycSymbol("MEANINGS");
    SubLSymbol qMEDICAL_DIAGNOSIS_OR_FINDING = makeCycSymbol("?MEDICAL-DIAGNOSIS-OR-FINDING");
    SubLSymbol qMEDICAL_EVALUATION = makeCycSymbol("?MEDICAL-EVALUATION");
    SubLSymbol qMEDICALLY_RELATED_EVENT = makeCycSymbol("?MEDICALLY-RELATED-EVENT");
    SubLSymbol qMEDICAL_TEST = makeCycSymbol("?MEDICAL-TEST");
    SubLSymbol qMEMBER = makeCycSymbol("?MEMBER");
    SubLSymbol MEMBER = makeCycSymbol("MEMBER");
    SubLSymbol MEMBERq = makeCycSymbol("MEMBER?");
    SubLSymbol MEMBER_P = makeCycSymbol("MEMBER-P");
    SubLSymbol MEMOIZATION_STATE = makeCycSymbol("MEMOIZATION-STATE");
    SubLSymbol MEMOIZATION_STATE_P = makeCycSymbol("MEMOIZATION-STATE-P");
    SubLSymbol MESSAGE = makeCycSymbol("MESSAGE");
    SubLSymbol MESSAGE_ARGS = makeCycSymbol("MESSAGE-ARGS");
    SubLSymbol MESSAGE_AS_STRING = makeCycSymbol("MESSAGE-AS-STRING");
    SubLSymbol MESSAGE_BROKER = makeCycSymbol("MESSAGE-BROKER");
    SubLSymbol MESSAGE_BROKER_CLASS = makeCycSymbol("MESSAGE-BROKER-CLASS");
    SubLSymbol MESSAGE_FROM = makeCycSymbol("MESSAGE-FROM");
    SubLSymbol MESSAGES = makeCycSymbol("MESSAGES");
    SubLSymbol MESSAGE_TO = makeCycSymbol("MESSAGE-TO");
    SubLSymbol qMETHOD = makeCycSymbol("?METHOD");
    SubLSymbol METHOD = makeCycSymbol("METHOD");
    SubLSymbol METHOD_DEFINITIONS = makeCycSymbol("METHOD-DEFINITIONS");
    SubLSymbol METHOD_NAME = makeCycSymbol("METHOD-NAME");
    SubLSymbol METHODS = makeCycSymbol("METHODS");
    SubLSymbol METRICS = makeCycSymbol("METRICS");
    SubLSymbol MICROTHEORY_P = makeCycSymbol("MICROTHEORY-P");
    SubLSymbol MIN = makeCycSymbol("MIN");
    SubLSymbol MIN_COLS = makeCycSymbol("MIN-COLS");
    SubLSymbol MIN_LIST_LENGTH = makeCycSymbol("MIN-LIST-LENGTH");
    SubLSymbol MINUSP = makeCycSymbol("MINUSP");
    SubLSymbol MISSPELLINGSq = makeCycSymbol("MISSPELLINGS?");
    SubLSymbol MOD = makeCycSymbol("MOD");
    SubLSymbol MOD_CYCL = makeCycSymbol("MOD-CYCL");
    SubLSymbol MOD_CYCLS = makeCycSymbol("MOD-CYCLS");
    SubLSymbol MODE = makeCycSymbol("MODE");
    SubLSymbol MODIFIED = makeCycSymbol("MODIFIED");
    SubLSymbol MODIFIEDS = makeCycSymbol("MODIFIEDS");
    SubLSymbol MODIFIER = makeCycSymbol("MODIFIER");
    SubLSymbol MODIFIERS = makeCycSymbol("MODIFIERS");
    SubLSymbol qMOD_STRING = makeCycSymbol("?MOD-STRING");
    SubLSymbol MODULE = makeCycSymbol("MODULE");
    SubLSymbol MODULES = makeCycSymbol("MODULES");
    SubLSymbol MONITOR = makeCycSymbol("MONITOR");
    SubLSymbol MONITOR_ARGS = makeCycSymbol("MONITOR-ARGS");
    SubLSymbol MONITOR_EXPRESSION = makeCycSymbol("MONITOR-EXPRESSION");
    SubLSymbol MONITORING_P = makeCycSymbol("MONITORING-P");
    SubLSymbol MONITORING_PATTERN = makeCycSymbol("MONITORING-PATTERN");
    SubLSymbol MONITOR_VISITOR = makeCycSymbol("MONITOR-VISITOR");
    SubLSymbol MONTH = makeCycSymbol("MONTH");
    SubLSymbol MORE_SPECIFIC_P = makeCycSymbol("MORE-SPECIFIC-P");
    SubLSymbol MOTHER = makeCycSymbol("MOTHER");
    SubLSymbol MOVED = makeCycSymbol("MOVED");
    SubLSymbol $MT$ = makeCycSymbol("*MT*");
    SubLSymbol qMT = makeCycSymbol("?MT");
    SubLSymbol MT = makeCycSymbol("MT");
    SubLSymbol MT1 = makeCycSymbol("MT1");
    SubLSymbol MT2 = makeCycSymbol("MT2");
    SubLSymbol MT_MT = makeCycSymbol("MT-MT");
    SubLSymbol MT_NODE = makeCycSymbol("MT-NODE");
    SubLSymbol MTS = makeCycSymbol("MTS");
    SubLSymbol MT_SPEC = makeCycSymbol("MT-SPEC");
    SubLSymbol MT_VAR = makeCycSymbol("MT-VAR");
    SubLSymbol MULTIPLE_VALUE_LIST = makeCycSymbol("MULTIPLE-VALUE-LIST");
    SubLSymbol MUMBLE = makeCycSymbol("MUMBLE");
    SubLSymbol MUST = makeCycSymbol("MUST");
    SubLSymbol MY_CYCLS0 = makeCycSymbol("MY-CYCLS0");
    SubLSymbol MY_CYCLS_WITH_MODS = makeCycSymbol("MY-CYCLS-WITH-MODS");
    SubLSymbol MY_INDEX = makeCycSymbol("MY-INDEX");
    SubLSymbol MY_METHOD = makeCycSymbol("MY-METHOD");
    SubLSymbol MY_TERM_LEXICON = makeCycSymbol("MY-TERM-LEXICON");
    SubLSymbol qN = makeCycSymbol("?N");
    SubLSymbol N = makeCycSymbol("N");
    SubLSymbol qNAME = makeCycSymbol("?NAME");
    SubLSymbol NAME = makeCycSymbol("NAME");
    SubLSymbol NAMENT = makeCycSymbol("NAMENT");
    SubLSymbol NAME_TOKENS = makeCycSymbol("NAME-TOKENS");
    SubLSymbol NART = makeCycSymbol("NART");
    SubLSymbol NART_P = makeCycSymbol("NART-P");
    SubLSymbol qNAT = makeCycSymbol("?NAT");
    SubLSymbol NAUT_P = makeCycSymbol("NAUT-P");
    SubLSymbol NCONC = makeCycSymbol("NCONC");
    SubLSymbol NDISTR_COMP_CYCLS = makeCycSymbol("NDISTR-COMP-CYCLS");
    SubLSymbol NEGATIVE_CHOICE = makeCycSymbol("NEGATIVE-CHOICE");
    SubLSymbol NEGATIVE_LITERALS = makeCycSymbol("NEGATIVE-LITERALS");
    SubLSymbol NEG_LITS = makeCycSymbol("NEG-LITS");
    SubLSymbol qNEW = makeCycSymbol("?NEW");
    SubLSymbol NEW = makeCycSymbol("NEW");
    SubLSymbol NEW_ACTION = makeCycSymbol("NEW-ACTION");
    SubLSymbol NEW_ACTION_QUALIFIERS = makeCycSymbol("NEW-ACTION-QUALIFIERS");
    SubLSymbol NEW_ACTIONS = makeCycSymbol("NEW-ACTIONS");
    SubLSymbol NEW_ACTIVATION_PATTERN = makeCycSymbol("NEW-ACTIVATION-PATTERN");
    SubLSymbol NEW_ACTIVE_PROPOSAL = makeCycSymbol("NEW-ACTIVE-PROPOSAL");
    SubLSymbol NEW_ACTIVE_PROPOSALS = makeCycSymbol("NEW-ACTIVE-PROPOSALS");
    SubLSymbol NEW_ACTIVE_STATE = makeCycSymbol("NEW-ACTIVE-STATE");
    SubLSymbol NEW_ACTIVE_STATUS = makeCycSymbol("NEW-ACTIVE-STATUS");
    SubLSymbol NEW_ADDS = makeCycSymbol("NEW-ADDS");
    SubLSymbol NEW_AGENDA = makeCycSymbol("NEW-AGENDA");
    SubLSymbol NEW_AGENDA_CLASS = makeCycSymbol("NEW-AGENDA-CLASS");
    SubLSymbol NEW_APPLICATION = makeCycSymbol("NEW-APPLICATION");
    SubLSymbol NEW_APPLICATION_NAME = makeCycSymbol("NEW-APPLICATION-NAME");
    SubLSymbol NEW_ARG = makeCycSymbol("NEW-ARG");
    SubLSymbol NEW_ARG1 = makeCycSymbol("NEW-ARG1");
    SubLSymbol NEW_ARGN = makeCycSymbol("NEW-ARGN");
    SubLSymbol NEW_ARGS = makeCycSymbol("NEW-ARGS");
    SubLSymbol NEW_ASSISTANT = makeCycSymbol("NEW-ASSISTANT");
    SubLSymbol NEW_ATTRIBUTE = makeCycSymbol("NEW-ATTRIBUTE");
    SubLSymbol NEW_AUTHOR_NAMES = makeCycSymbol("NEW-AUTHOR-NAMES");
    SubLSymbol NEW_BACKCHAIN = makeCycSymbol("NEW-BACKCHAIN");
    SubLSymbol NEW_BACKCHAINS = makeCycSymbol("NEW-BACKCHAINS");
    SubLSymbol NEW_BASE_PANEL = makeCycSymbol("NEW-BASE-PANEL");
    SubLSymbol NEW_BINDING = makeCycSymbol("NEW-BINDING");
    SubLSymbol NEW_BINDING_LIST = makeCycSymbol("NEW-BINDING-LIST");
    SubLSymbol NEW_BINDINGS = makeCycSymbol("NEW-BINDINGS");
    SubLSymbol NEW_BLACKBOARD = makeCycSymbol("NEW-BLACKBOARD");
    SubLSymbol NEW_BLACKBOARD_IDENTIFIER = makeCycSymbol("NEW-BLACKBOARD-IDENTIFIER");
    SubLSymbol NEW_CATEGORIES = makeCycSymbol("NEW-CATEGORIES");
    SubLSymbol NEW_CATEGORY = makeCycSymbol("NEW-CATEGORY");
    SubLSymbol NEW_CATEGORY_NAME = makeCycSymbol("NEW-CATEGORY-NAME");
    SubLSymbol NEW_CHILD = makeCycSymbol("NEW-CHILD");
    SubLSymbol NEW_CLASS = makeCycSymbol("NEW-CLASS");
    SubLSymbol NEW_CLASS_INSTANCE = makeCycSymbol("NEW-CLASS-INSTANCE");
    SubLSymbol NEW_COLLECTION = makeCycSymbol("NEW-COLLECTION");
    SubLSymbol NEW_COMPLEX_FORMULA = makeCycSymbol("NEW-COMPLEX-FORMULA");
    SubLSymbol NEW_CONFIDENCE = makeCycSymbol("NEW-CONFIDENCE");
    SubLSymbol NEW_CONSTANT = makeCycSymbol("NEW-CONSTANT");
    SubLSymbol NEW_CONTENTS = makeCycSymbol("NEW-CONTENTS");
    SubLSymbol NEW_CONTRIBUTIONS = makeCycSymbol("NEW-CONTRIBUTIONS");
    SubLSymbol NEW_COPY = makeCycSymbol("NEW-COPY");
    SubLSymbol NEW_COUNT = makeCycSymbol("NEW-COUNT");
    SubLSymbol NEW_CURRENT_INTERACTION = makeCycSymbol("NEW-CURRENT-INTERACTION");
    SubLSymbol NEW_CYC_QUERY = makeCycSymbol("NEW-CYC-QUERY");
    SubLSymbol NEW_DATATYPE = makeCycSymbol("NEW-DATATYPE");
    SubLSymbol NEW_DATATYPE_BAG = makeCycSymbol("NEW-DATATYPE-BAG");
    SubLSymbol NEW_DEFAULT_VALUE = makeCycSymbol("NEW-DEFAULT-VALUE");
    SubLSymbol NEW_DELETES = makeCycSymbol("NEW-DELETES");
    SubLSymbol NEW_DEPENDENT = makeCycSymbol("NEW-DEPENDENT");
    SubLSymbol NEW_DEPTH = makeCycSymbol("NEW-DEPTH");
    SubLSymbol NEW_DICTIONARY = makeCycSymbol("NEW-DICTIONARY");
    SubLSymbol NEW_DIRECTION = makeCycSymbol("NEW-DIRECTION");
    SubLSymbol NEW_EDGE = makeCycSymbol("NEW-EDGE");
    SubLSymbol NEW_ELEMENT = makeCycSymbol("NEW-ELEMENT");
    SubLSymbol NEW_ELEMENT_COUNT = makeCycSymbol("NEW-ELEMENT-COUNT");
    SubLSymbol NEW_END_POINTER = makeCycSymbol("NEW-END-POINTER");
    SubLSymbol NEW_ENUMERATOR = makeCycSymbol("NEW-ENUMERATOR");
    SubLSymbol NEW_ENVIRONMENT = makeCycSymbol("NEW-ENVIRONMENT");
    SubLSymbol NEW_EXECUTION_MODE = makeCycSymbol("NEW-EXECUTION-MODE");
    SubLSymbol NEW_EXPRESSION = makeCycSymbol("NEW-EXPRESSION");
    SubLSymbol NEW_EXTERNAL_CONNECTION = makeCycSymbol("NEW-EXTERNAL-CONNECTION");
    SubLSymbol NEW_EXTERNAL_MODULE_ID = makeCycSymbol("NEW-EXTERNAL-MODULE-ID");
    SubLSymbol NEW_EXTERNAL_MODULE_NAME = makeCycSymbol("NEW-EXTERNAL-MODULE-NAME");
    SubLSymbol NEW_FIRST_LINK = makeCycSymbol("NEW-FIRST-LINK");
    SubLSymbol NEW_FORMULA = makeCycSymbol("NEW-FORMULA");
    SubLSymbol NEW_FUNCTION = makeCycSymbol("NEW-FUNCTION");
    SubLSymbol NEW_GOAL_PATTERN = makeCycSymbol("NEW-GOAL-PATTERN");
    SubLSymbol NEW_GROWTH_FACTOR = makeCycSymbol("NEW-GROWTH-FACTOR");
    SubLSymbol NEW_GUID = makeCycSymbol("NEW-GUID");
    SubLSymbol NEW_HEAD = makeCycSymbol("NEW-HEAD");
    SubLSymbol NEW_HEURISTIC_EVALUATOR_REGISTRY = makeCycSymbol("NEW-HEURISTIC-EVALUATOR-REGISTRY");
    SubLSymbol NEW_INCOMING_QUEUE = makeCycSymbol("NEW-INCOMING-QUEUE");
    SubLSymbol NEW_INDEX = makeCycSymbol("NEW-INDEX");
    SubLSymbol NEW_INPUT_STREAM = makeCycSymbol("NEW-INPUT-STREAM");
    SubLSymbol NEW_INSTANCE = makeCycSymbol("NEW-INSTANCE");
    SubLSymbol NEW_INTERNAL_STORAGE = makeCycSymbol("NEW-INTERNAL-STORAGE");
    SubLSymbol NEW_IO_MONITOR = makeCycSymbol("NEW-IO-MONITOR");
    SubLSymbol NEW_KEY_FUNCTION = makeCycSymbol("NEW-KEY-FUNCTION");
    SubLSymbol NEW_KNOWLEDGE_SOURCE = makeCycSymbol("NEW-KNOWLEDGE-SOURCE");
    SubLSymbol NEW_KNOWLEDGE_SOURCE_BATTERY = makeCycSymbol("NEW-KNOWLEDGE-SOURCE-BATTERY");
    SubLSymbol NEW_KS = makeCycSymbol("NEW-KS");
    SubLSymbol NEW_KS_CLASS = makeCycSymbol("NEW-KS-CLASS");
    SubLSymbol NEW_KSI = makeCycSymbol("NEW-KSI");
    SubLSymbol NEW_KSI_CLASS = makeCycSymbol("NEW-KSI-CLASS");
    SubLSymbol NEW_KS_ROOT_NAME = makeCycSymbol("NEW-KS-ROOT-NAME");
    SubLSymbol NEW_LARGEST_INDEX = makeCycSymbol("NEW-LARGEST-INDEX");
    SubLSymbol NEW_LAST_LINK = makeCycSymbol("NEW-LAST-LINK");
    SubLSymbol NEW_LEXES = makeCycSymbol("NEW-LEXES");
    SubLSymbol NEW_LF_LITERAL = makeCycSymbol("NEW-LF-LITERAL");
    SubLSymbol $NEW_LINE_STRING$ = makeCycSymbol("*NEW-LINE-STRING*");
    SubLSymbol NEW_LIST = makeCycSymbol("NEW-LIST");
    SubLSymbol NEW_LOCAL_BINDINGS = makeCycSymbol("NEW-LOCAL-BINDINGS");
    SubLSymbol NEW_LOCAL_ENVIRONMENT = makeCycSymbol("NEW-LOCAL-ENVIRONMENT");
    SubLSymbol NEW_LOGICAL_EXPRESSION = makeCycSymbol("NEW-LOGICAL-EXPRESSION");
    SubLSymbol NEW_LOGICAL_FORM = makeCycSymbol("NEW-LOGICAL-FORM");
    SubLSymbol NEW_MARKS = makeCycSymbol("NEW-MARKS");
    SubLSymbol NEW_MAX = makeCycSymbol("NEW-MAX");
    SubLSymbol NEW_MAX_FUTILE_CYCLES = makeCycSymbol("NEW-MAX-FUTILE-CYCLES");
    SubLSymbol NEW_MBINDINGS = makeCycSymbol("NEW-MBINDINGS");
    SubLSymbol NEW_MESSAGE = makeCycSymbol("NEW-MESSAGE");
    SubLSymbol NEW_MESSAGE_BROKER = makeCycSymbol("NEW-MESSAGE-BROKER");
    SubLSymbol NEW_MESSAGES = makeCycSymbol("NEW-MESSAGES");
    SubLSymbol NEW_METHOD_DEFINITION = makeCycSymbol("NEW-METHOD-DEFINITION");
    SubLSymbol NEW_MIN = makeCycSymbol("NEW-MIN");
    SubLSymbol NEW_MONITORING_PATTERN = makeCycSymbol("NEW-MONITORING-PATTERN");
    SubLSymbol NEW_MT = makeCycSymbol("NEW-MT");
    SubLSymbol NEW_NAME = makeCycSymbol("NEW-NAME");
    SubLSymbol NEW_NODE = makeCycSymbol("NEW-NODE");
    SubLSymbol NEW_NODES = makeCycSymbol("NEW-NODES");
    SubLSymbol NEW_NUMBER = makeCycSymbol("NEW-NUMBER");
    SubLSymbol NEW_OBJECT_INSTANCE = makeCycSymbol("NEW-OBJECT-INSTANCE");
    SubLSymbol NEW_ON_SHUTDOWN_EXPRESSION = makeCycSymbol("NEW-ON-SHUTDOWN-EXPRESSION");
    SubLSymbol NEW_ON_STARTUP_EXPRESSION = makeCycSymbol("NEW-ON-STARTUP-EXPRESSION");
    SubLSymbol NEW_ORD = makeCycSymbol("NEW-ORD");
    SubLSymbol NEW_OUTGOING_MESSAGE_QUEUE = makeCycSymbol("NEW-OUTGOING-MESSAGE-QUEUE");
    SubLSymbol NEW_OUTGOING_QUEUE = makeCycSymbol("NEW-OUTGOING-QUEUE");
    SubLSymbol NEW_OUTPUT_STREAM = makeCycSymbol("NEW-OUTPUT-STREAM");
    SubLSymbol NEW_PANEL = makeCycSymbol("NEW-PANEL");
    SubLSymbol NEW_PANEL_CLASS = makeCycSymbol("NEW-PANEL-CLASS");
    SubLSymbol NEW_PANEL_TYPE = makeCycSymbol("NEW-PANEL-TYPE");
    SubLSymbol NEW_PARENT = makeCycSymbol("NEW-PARENT");
    SubLSymbol NEW_PARENT_LINK = makeCycSymbol("NEW-PARENT-LINK");
    SubLSymbol NEW_PARENT_LINKS = makeCycSymbol("NEW-PARENT-LINKS");
    SubLSymbol NEW_PARENT_SLICE = makeCycSymbol("NEW-PARENT-SLICE");
    SubLSymbol NEW_PARSED_BODY = makeCycSymbol("NEW-PARSED-BODY");
    SubLSymbol NEW_PARSER = makeCycSymbol("NEW-PARSER");
    SubLSymbol NEW_PARSE_TREE = makeCycSymbol("NEW-PARSE-TREE");
    SubLSymbol NEW_PLAN = makeCycSymbol("NEW-PLAN");
    SubLSymbol NEW_PLAN_STATE = makeCycSymbol("NEW-PLAN-STATE");
    SubLSymbol NEW_POINTER = makeCycSymbol("NEW-POINTER");
    SubLSymbol NEW_PORT = makeCycSymbol("NEW-PORT");
    SubLSymbol NEW_PORT_ID = makeCycSymbol("NEW-PORT-ID");
    SubLSymbol NEW_PORT_MANAGER = makeCycSymbol("NEW-PORT-MANAGER");
    SubLSymbol NEW_POSTING = makeCycSymbol("NEW-POSTING");
    SubLSymbol NEW_POSTING_CLASS = makeCycSymbol("NEW-POSTING-CLASS");
    SubLSymbol NEW_POSTING_DAEMON = makeCycSymbol("NEW-POSTING-DAEMON");
    SubLSymbol NEW_POSTING_TYPE = makeCycSymbol("NEW-POSTING-TYPE");
    SubLSymbol NEW_PRECONDITION_PATTERN = makeCycSymbol("NEW-PRECONDITION-PATTERN");
    SubLSymbol NEW_PREDICATE = makeCycSymbol("NEW-PREDICATE");
    SubLSymbol NEW_PREDICATOR = makeCycSymbol("NEW-PREDICATOR");
    SubLSymbol NEW_PRIORITIZER = makeCycSymbol("NEW-PRIORITIZER");
    SubLSymbol NEW_PRIORITY = makeCycSymbol("NEW-PRIORITY");
    SubLSymbol NEW_PROBLEM = makeCycSymbol("NEW-PROBLEM");
    SubLSymbol NEW_PROCESSING_STAGE = makeCycSymbol("NEW-PROCESSING-STAGE");
    SubLSymbol NEW_PROCESS_SCHEDULER = makeCycSymbol("NEW-PROCESS-SCHEDULER");
    SubLSymbol NEW_PROPERTY_VALUE = makeCycSymbol("NEW-PROPERTY-VALUE");
    SubLSymbol NEW_PROPID = makeCycSymbol("NEW-PROPID");
    SubLSymbol NEW_PROPOSAL = makeCycSymbol("NEW-PROPOSAL");
    SubLSymbol NEW_PROPOSAL_CLASS = makeCycSymbol("NEW-PROPOSAL-CLASS");
    SubLSymbol NEW_QUEUE = makeCycSymbol("NEW-QUEUE");
    SubLSymbol NEW_RANGE = makeCycSymbol("NEW-RANGE");
    SubLSymbol NEW_REASONS = makeCycSymbol("NEW-REASONS");
    SubLSymbol NEW_RESULT = makeCycSymbol("NEW-RESULT");
    SubLSymbol NEW_RM = makeCycSymbol("NEW-RM");
    SubLSymbol NEW_ROBOT = makeCycSymbol("NEW-ROBOT");
    SubLSymbol NEW_ROOT_PANELS = makeCycSymbol("NEW-ROOT-PANELS");
    SubLSymbol NEW_SATISFACTION_TYPE = makeCycSymbol("NEW-SATISFACTION-TYPE");
    SubLSymbol NEW_SCHEDULER = makeCycSymbol("NEW-SCHEDULER");
    SubLSymbol NEW_SENTENCE = makeCycSymbol("NEW-SENTENCE");
    SubLSymbol NEW_SESSION_ID = makeCycSymbol("NEW-SESSION-ID");
    SubLSymbol NEW_SET = makeCycSymbol("NEW-SET");
    SubLSymbol NEW_SLICE = makeCycSymbol("NEW-SLICE");
    SubLSymbol NEW_SLOT_DECLARATION = makeCycSymbol("NEW-SLOT-DECLARATION");
    SubLSymbol NEW_SLOTS = makeCycSymbol("NEW-SLOTS");
    SubLSymbol NEW_SOURCE = makeCycSymbol("NEW-SOURCE");
    SubLSymbol NEW_STATE = makeCycSymbol("NEW-STATE");
    SubLSymbol NEW_STATE1 = makeCycSymbol("NEW-STATE1");
    SubLSymbol NEW_STATE2 = makeCycSymbol("NEW-STATE2");
    SubLSymbol NEW_STATE_CHANGE_LISTENER = makeCycSymbol("NEW-STATE-CHANGE-LISTENER");
    SubLSymbol NEW_STATES = makeCycSymbol("NEW-STATES");
    SubLSymbol NEW_STATUS = makeCycSymbol("NEW-STATUS");
    SubLSymbol NEW_STIMULATION_TYPE = makeCycSymbol("NEW-STIMULATION-TYPE");
    SubLSymbol NEW_STORAGE_SIZE = makeCycSymbol("NEW-STORAGE-SIZE");
    SubLSymbol NEW_STRENGTH = makeCycSymbol("NEW-STRENGTH");
    SubLSymbol NEW_SUB_PANEL = makeCycSymbol("NEW-SUB-PANEL");
    SubLSymbol NEW_SUBTYPES = makeCycSymbol("NEW-SUBTYPES");
    SubLSymbol NEW_SUITE = makeCycSymbol("NEW-SUITE");
    SubLSymbol NEW_SUPER_KS_ROOT_NAME = makeCycSymbol("NEW-SUPER-KS-ROOT-NAME");
    SubLSymbol NEW_SUPER_PANEL = makeCycSymbol("NEW-SUPER-PANEL");
    SubLSymbol NEW_SUPERTYPES = makeCycSymbol("NEW-SUPERTYPES");
    SubLSymbol NEW_SUPPORT_TYPE = makeCycSymbol("NEW-SUPPORT-TYPE");
    SubLSymbol NEW_SUSPENDED_PROPOSALS = makeCycSymbol("NEW-SUSPENDED-PROPOSALS");
    SubLSymbol NEW_TAG = makeCycSymbol("NEW-TAG");
    SubLSymbol NEW_TASK = makeCycSymbol("NEW-TASK");
    SubLSymbol NEW_TASKS = makeCycSymbol("NEW-TASKS");
    SubLSymbol NEW_TERM = makeCycSymbol("NEW-TERM");
    SubLSymbol NEW_TEST_CASE = makeCycSymbol("NEW-TEST-CASE");
    SubLSymbol NEW_TEXT_ANSWER = makeCycSymbol("NEW-TEXT-ANSWER");
    SubLSymbol NEW_TIME = makeCycSymbol("NEW-TIME");
    SubLSymbol NEW_TIMESTAMP = makeCycSymbol("NEW-TIMESTAMP");
    SubLSymbol NEW_TOKEN = makeCycSymbol("NEW-TOKEN");
    SubLSymbol NEW_TRANSACTION_ID = makeCycSymbol("NEW-TRANSACTION-ID");
    SubLSymbol NEW_TYPE = makeCycSymbol("NEW-TYPE");
    SubLSymbol NEW_TYPE_STRING = makeCycSymbol("NEW-TYPE-STRING");
    SubLSymbol NEW_USAGE = makeCycSymbol("NEW-USAGE");
    SubLSymbol NEW_VAL = makeCycSymbol("NEW-VAL");
    SubLSymbol NEW_VALUE = makeCycSymbol("NEW-VALUE");
    SubLSymbol NEW_VARIABLE = makeCycSymbol("NEW-VARIABLE");
    SubLSymbol NEW_WORLD_STATE = makeCycSymbol("NEW-WORLD-STATE");
    SubLSymbol NEXT = makeCycSymbol("NEXT");
    SubLSymbol NEXT_INTERACTION = makeCycSymbol("NEXT-INTERACTION");
    SubLSymbol NEXT_STATE = makeCycSymbol("NEXT-STATE");
    SubLSymbol NEXT_STATES = makeCycSymbol("NEXT-STATES");
    SubLSymbol NEXT_TOKEN = makeCycSymbol("NEXT-TOKEN");
    SubLSymbol NIL_OR = makeCycSymbol("NIL-OR");
    SubLSymbol NL_GENERATION_CACHE_METHOD = makeCycSymbol("NL-GENERATION-CACHE-METHOD");
    SubLSymbol NL_MT = makeCycSymbol("NL-MT");
    SubLSymbol NL_PREDS = makeCycSymbol("NL-PREDS");
    SubLSymbol $NL_TRIE_ACCESSOR_DEFAULT_CASE_SENSITIVITY$ = makeCycSymbol("*NL-TRIE-ACCESSOR-DEFAULT-CASE-SENSITIVITY*");
    SubLSymbol NL_TRIE_ENTRY = makeCycSymbol("NL-TRIE-ENTRY");
    SubLSymbol NL_TRIE_ENTRY_DENOTS = makeCycSymbol("NL-TRIE-ENTRY-DENOTS");
    SubLSymbol NL_TRIE_ENTRY_SEMANTIC_PRED = makeCycSymbol("NL-TRIE-ENTRY-SEMANTIC-PRED");
    SubLSymbol NL_TRIE_NAME = makeCycSymbol("NL-TRIE-NAME");
    SubLSymbol NODE = makeCycSymbol("NODE");
    SubLSymbol NODE_ID = makeCycSymbol("NODE-ID");
    SubLSymbol NODES = makeCycSymbol("NODES");
    SubLSymbol NOMINAL_PHRASE_TREE_P = makeCycSymbol("NOMINAL-PHRASE-TREE-P");
    SubLSymbol NOMINAL_TREE_P = makeCycSymbol("NOMINAL-TREE-P");
    SubLSymbol NON_DISTRIBUTING = makeCycSymbol("NON-DISTRIBUTING");
    SubLSymbol NON_DOTTED_LIST_P = makeCycSymbol("NON-DOTTED-LIST-P");
    SubLSymbol qNONE = makeCycSymbol("?NONE");
    SubLSymbol NONE = makeCycSymbol("NONE");
    SubLSymbol NON_EMPTY_STRINGq = makeCycSymbol("NON-EMPTY-STRING?");
    SubLSymbol NON_HL_PREDICATE_P = makeCycSymbol("NON-HL-PREDICATE-P");
    SubLSymbol NON_NEGATIVE_INTEGER_P = makeCycSymbol("NON-NEGATIVE-INTEGER-P");
    SubLSymbol NON_NEGATIVE_NUMBER_P = makeCycSymbol("NON-NEGATIVE-NUMBER-P");
    SubLSymbol NON_NULL_ANSWER_TO_SINGLETON = makeCycSymbol("NON-NULL-ANSWER-TO-SINGLETON");
    SubLSymbol NO_NOTABLE_INSTANCES_OF_REFINED_TAGq = makeCycSymbol("NO-NOTABLE-INSTANCES-OF-REFINED-TAG?");
    SubLSymbol NOTE_PERCENT_PROGRESS = makeCycSymbol("NOTE-PERCENT-PROGRESS");
    SubLSymbol NOT_EQ = makeCycSymbol("NOT-EQ");
    SubLSymbol NOTHING_TO_DOq = makeCycSymbol("NOTHING-TO-DO?");
    SubLSymbol NOTIFICATION_FN = makeCycSymbol("NOTIFICATION-FN");
    SubLSymbol NOTIFY_CLIENT = makeCycSymbol("NOTIFY-CLIENT");
    SubLSymbol NOTING_PERCENT_PROGRESS = makeCycSymbol("NOTING-PERCENT-PROGRESS");
    SubLSymbol NOUN = makeCycSymbol("NOUN");
    SubLSymbol NOUN_LINK_WORD = makeCycSymbol("NOUN-LINK-WORD");
    SubLSymbol NOUN_OBJECT = makeCycSymbol("NOUN-OBJECT");
    SubLSymbol NOUN_RELEVANCE_COUNT_THRESHOLD = makeCycSymbol("NOUN-RELEVANCE-COUNT-THRESHOLD");
    SubLSymbol NOUNS = makeCycSymbol("NOUNS");
    SubLSymbol NOUN_STRING = makeCycSymbol("NOUN-STRING");
    SubLSymbol NP = makeCycSymbol("NP");
    SubLSymbol NREVERSE = makeCycSymbol("NREVERSE");
    SubLSymbol NTH = makeCycSymbol("NTH");
    SubLSymbol NTHCDR = makeCycSymbol("NTHCDR");
    SubLSymbol NTH_VALUE = makeCycSymbol("NTH-VALUE");
    SubLSymbol NULL = makeCycSymbol("NULL");
    SubLSymbol $NULL_OUTPUT$ = makeCycSymbol("*NULL-OUTPUT*");
    SubLSymbol qNUM = makeCycSymbol("?NUM");
    SubLSymbol NUM = makeCycSymbol("NUM");
    SubLSymbol NUM1 = makeCycSymbol("NUM1");
    SubLSymbol NUM2 = makeCycSymbol("NUM2");
    SubLSymbol NUM_BACKCHAINS = makeCycSymbol("NUM-BACKCHAINS");
    SubLSymbol NUMBER = makeCycSymbol("NUMBER");
    SubLSymbol NUMBER_LEARN = makeCycSymbol("NUMBER-LEARN");
    SubLSymbol NUMBER_OF_EXPANSIONS = makeCycSymbol("NUMBER-OF-EXPANSIONS");
    SubLSymbol NUMBER_OF_INFERENCES = makeCycSymbol("NUMBER-OF-INFERENCES");
    SubLSymbol NUMBER_OF_SLOTS = makeCycSymbol("NUMBER-OF-SLOTS");
    SubLSymbol NUMBERP = makeCycSymbol("NUMBERP");
    SubLSymbol NUMBERS = makeCycSymbol("NUMBERS");
    SubLSymbol NUMBER_STRING = makeCycSymbol("NUMBER-STRING");
    SubLSymbol NUMERATOR = makeCycSymbol("NUMERATOR");
    SubLSymbol NUM_INDEX = makeCycSymbol("NUM-INDEX");
    SubLSymbol O = makeCycSymbol("O");
    SubLSymbol qOBJ = makeCycSymbol("?OBJ");
    SubLSymbol OBJ = makeCycSymbol("OBJ");
    SubLSymbol OBJ1 = makeCycSymbol("OBJ1");
    SubLSymbol OBJ2 = makeCycSymbol("OBJ2");
    SubLSymbol OBJECT = makeCycSymbol("OBJECT");
    SubLSymbol OBJECT1 = makeCycSymbol("OBJECT1");
    SubLSymbol OBJECT2 = makeCycSymbol("OBJECT2");
    SubLSymbol OBJECT3 = makeCycSymbol("OBJECT3");
    SubLSymbol OBJECT_CONTROLLER_P = makeCycSymbol("OBJECT-CONTROLLER-P");
    SubLSymbol OBJECT_ID = makeCycSymbol("OBJECT-ID");
    SubLSymbol OBJECT_MONITOR = makeCycSymbol("OBJECT-MONITOR");
    SubLSymbol OBJECTS = makeCycSymbol("OBJECTS");
    SubLSymbol OBLIQUE_OBJECT = makeCycSymbol("OBLIQUE-OBJECT");
    SubLSymbol OBL_OBJ = makeCycSymbol("OBL-OBJ");
    SubLSymbol OBL_OBJ_HEAD = makeCycSymbol("OBL-OBJ-HEAD");
    SubLSymbol qOF = makeCycSymbol("?OF");
    SubLSymbol OFFSET = makeCycSymbol("OFFSET");
    SubLSymbol OFFSETS = makeCycSymbol("OFFSETS");
    SubLSymbol OLD = makeCycSymbol("OLD");
    SubLSymbol OLD_ACTIVE_PROPOSAL = makeCycSymbol("OLD-ACTIVE-PROPOSAL");
    SubLSymbol OLD_CATEGORY = makeCycSymbol("OLD-CATEGORY");
    SubLSymbol OLD_DEPENDENT = makeCycSymbol("OLD-DEPENDENT");
    SubLSymbol OLD_ELEMENT = makeCycSymbol("OLD-ELEMENT");
    SubLSymbol OLD_ENUMERATOR = makeCycSymbol("OLD-ENUMERATOR");
    SubLSymbol OLD_PANEL = makeCycSymbol("OLD-PANEL");
    SubLSymbol OLD_PARENT_LINK = makeCycSymbol("OLD-PARENT-LINK");
    SubLSymbol OLD_POSTING_DAEMON = makeCycSymbol("OLD-POSTING-DAEMON");
    SubLSymbol OLD_SUB_PANEL = makeCycSymbol("OLD-SUB-PANEL");
    SubLSymbol OLD_SUITE = makeCycSymbol("OLD-SUITE");
    SubLSymbol OLD_SUPER_PANEL = makeCycSymbol("OLD-SUPER-PANEL");
    SubLSymbol OLD_SUSPENDED_PROPOSAL = makeCycSymbol("OLD-SUSPENDED-PROPOSAL");
    SubLSymbol OLD_TEST_CASE = makeCycSymbol("OLD-TEST-CASE");
    SubLSymbol OLD_VAR = makeCycSymbol("OLD-VAR");
    SubLSymbol ON_ACTIVATE = makeCycSymbol("ON-ACTIVATE");
    SubLSymbol ON_ADD = makeCycSymbol("ON-ADD");
    SubLSymbol ON_ADD_FIRST_KNOWLEDGE_SOURCE = makeCycSymbol("ON-ADD-FIRST-KNOWLEDGE-SOURCE");
    SubLSymbol ON_DELETE = makeCycSymbol("ON-DELETE");
    SubLSymbol ONE = makeCycSymbol("ONE");
    SubLSymbol ON_EMPTY_AGENDA = makeCycSymbol("ON-EMPTY-AGENDA");
    SubLSymbol ON_EMPTY_AGENDA_EXPRESSION = makeCycSymbol("ON-EMPTY-AGENDA-EXPRESSION");
    SubLSymbol ON_ENQUEUE = makeCycSymbol("ON-ENQUEUE");
    SubLSymbol ON_POST = makeCycSymbol("ON-POST");
    SubLSymbol ON_PROPOSE_BODY = makeCycSymbol("ON-PROPOSE-BODY");
    SubLSymbol ON_PROPOSE_EXPRESSION = makeCycSymbol("ON-PROPOSE-EXPRESSION");
    SubLSymbol ON_PROPOSE_EXPRESSIONS = makeCycSymbol("ON-PROPOSE-EXPRESSIONS");
    SubLSymbol ON_QUIESCENCE = makeCycSymbol("ON-QUIESCENCE");
    SubLSymbol ON_QUIESCENCE_EXPRESSION = makeCycSymbol("ON-QUIESCENCE-EXPRESSION");
    SubLSymbol ON_REMOVE_LAST_KNOWLEDGE_SOURCE = makeCycSymbol("ON-REMOVE-LAST-KNOWLEDGE-SOURCE");
    SubLSymbol ON_SHUTDOWN = makeCycSymbol("ON-SHUTDOWN");
    SubLSymbol ON_SHUTDOWN_EXPRESSION = makeCycSymbol("ON-SHUTDOWN-EXPRESSION");
    SubLSymbol ON_STARTUP = makeCycSymbol("ON-STARTUP");
    SubLSymbol ON_STARTUP_EXPRESSION = makeCycSymbol("ON-STARTUP-EXPRESSION");
    SubLSymbol qOP = makeCycSymbol("?OP");
    SubLSymbol OP = makeCycSymbol("OP");
    SubLSymbol OPEN_NODES = makeCycSymbol("OPEN-NODES");
    SubLSymbol OPEN_TEXT = makeCycSymbol("OPEN-TEXT");
    SubLSymbol OPEN_VARIABLES = makeCycSymbol("OPEN-VARIABLES");
    SubLSymbol qOPERATION = makeCycSymbol("?OPERATION");
    SubLSymbol OPERATOR = makeCycSymbol("OPERATOR");
    SubLSymbol OPERATORS = makeCycSymbol("OPERATORS");
    SubLSymbol OPTIMIZE_FUNCALL = makeCycSymbol("OPTIMIZE-FUNCALL");
    SubLSymbol aOPTIONAL = makeCycSymbol("&OPTIONAL");
    SubLSymbol OPTIONS = makeCycSymbol("OPTIONS");
    SubLSymbol OR = makeCycSymbol("OR");
    SubLSymbol ORD = makeCycSymbol("ORD");
    SubLSymbol ORDER = makeCycSymbol("ORDER");
    SubLSymbol ORDERED_CONTENTS = makeCycSymbol("ORDERED-CONTENTS");
    SubLSymbol ORDERED_INDICES = makeCycSymbol("ORDERED-INDICES");
    SubLSymbol ORDERED_SUB_SLICES = makeCycSymbol("ORDERED-SUB-SLICES");
    SubLSymbol OTHER = makeCycSymbol("OTHER");
    SubLSymbol OTHER_DATATYPE = makeCycSymbol("OTHER-DATATYPE");
    SubLSymbol OTHER_ENVIRONMENT = makeCycSymbol("OTHER-ENVIRONMENT");
    SubLSymbol OTHER_INDEX = makeCycSymbol("OTHER-INDEX");
    SubLSymbol OTHER_LIST = makeCycSymbol("OTHER-LIST");
    SubLSymbol OTHER_RANGE = makeCycSymbol("OTHER-RANGE");
    SubLSymbol OTHER_UNIT = makeCycSymbol("OTHER-UNIT");
    SubLSymbol OTHERWISE = makeCycSymbol("OTHERWISE");
    SubLSymbol OUT_CYCL = makeCycSymbol("OUT-CYCL");
    SubLSymbol OUTER_SCOPE = makeCycSymbol("OUTER-SCOPE");
    SubLSymbol OUTGOING_MESSAGE_QUEUE = makeCycSymbol("OUTGOING-MESSAGE-QUEUE");
    SubLSymbol OUTGOING_POSTING_P = makeCycSymbol("OUTGOING-POSTING-P");
    SubLSymbol OUTGOING_POSTING_QUEUE = makeCycSymbol("OUTGOING-POSTING-QUEUE");
    SubLSymbol OUTGOING_RAW_QUEUE = makeCycSymbol("OUTGOING-RAW-QUEUE");
    SubLSymbol OUT_OF_RANGE_VALUE = makeCycSymbol("OUT-OF-RANGE-VALUE");
    SubLSymbol OUTPUT = makeCycSymbol("OUTPUT");
    SubLSymbol OUTPUT_FORMAT = makeCycSymbol("OUTPUT-FORMAT");
    SubLSymbol OUTPUT_MESSAGE = makeCycSymbol("OUTPUT-MESSAGE");
    SubLSymbol OUTPUT_STREAM = makeCycSymbol("OUTPUT-STREAM");
    SubLSymbol OUTPUT_STREAM_P = makeCycSymbol("OUTPUT-STREAM-P");
    SubLSymbol OUT_STREAM = makeCycSymbol("OUT-STREAM");
    SubLSymbol OUTSTREAM = makeCycSymbol("OUTSTREAM");
    SubLSymbol OWNER = makeCycSymbol("OWNER");
    SubLSymbol OWNING_METHOD_NAME = makeCycSymbol("OWNING-METHOD-NAME");
    SubLSymbol P = makeCycSymbol("P");
    SubLSymbol PANEL = makeCycSymbol("PANEL");
    SubLSymbol PANEL_CLASS = makeCycSymbol("PANEL-CLASS");
    SubLSymbol PANEL_CLASS_ASSOCIATIONS = makeCycSymbol("PANEL-CLASS-ASSOCIATIONS");
    SubLSymbol PANEL_DICTIONARY = makeCycSymbol("PANEL-DICTIONARY");
    SubLSymbol PANEL_EXPRESSION = makeCycSymbol("PANEL-EXPRESSION");
    SubLSymbol PANELS = makeCycSymbol("PANELS");
    SubLSymbol PARAGRAPH = makeCycSymbol("PARAGRAPH");
    SubLSymbol PARAM = makeCycSymbol("PARAM");
    SubLSymbol PARAMETER = makeCycSymbol("PARAMETER");
    SubLSymbol PARAMETERS = makeCycSymbol("PARAMETERS");
    SubLSymbol PARAMS = makeCycSymbol("PARAMS");
    SubLSymbol PARAPHRASE = makeCycSymbol("PARAPHRASE");
    SubLSymbol PARENT = makeCycSymbol("PARENT");
    SubLSymbol PARENT_INDEX = makeCycSymbol("PARENT-INDEX");
    SubLSymbol PARENT_LIST = makeCycSymbol("PARENT-LIST");
    SubLSymbol PARENT_SLICE = makeCycSymbol("PARENT-SLICE");
    SubLSymbol PARSE = makeCycSymbol("PARSE");
    SubLSymbol PARSE_ARGS = makeCycSymbol("PARSE-ARGS");
    SubLSymbol PARSED_ARG1 = makeCycSymbol("PARSED-ARG1");
    SubLSymbol PARSED_ARG2 = makeCycSymbol("PARSED-ARG2");
    SubLSymbol PARSED_ARGS = makeCycSymbol("PARSED-ARGS");
    SubLSymbol PARSED_BINDING_LIST = makeCycSymbol("PARSED-BINDING-LIST");
    SubLSymbol PARSED_BODY = makeCycSymbol("PARSED-BODY");
    SubLSymbol PARSE_EXPRESSION = makeCycSymbol("PARSE-EXPRESSION");
    SubLSymbol PARSE_MORPHOLOGICALLY = makeCycSymbol("PARSE-MORPHOLOGICALLY");
    SubLSymbol PARSER = makeCycSymbol("PARSER");
    SubLSymbol PARSER_CLASS = makeCycSymbol("PARSER-CLASS");
    SubLSymbol PARSER_TYPE = makeCycSymbol("PARSER-TYPE");
    SubLSymbol PARSES = makeCycSymbol("PARSES");
    SubLSymbol PARSE_TREE = makeCycSymbol("PARSE-TREE");
    SubLSymbol PARSE_TREE_CONTEXT = makeCycSymbol("PARSE-TREE-CONTEXT");
    SubLSymbol PARSE_TREE_P = makeCycSymbol("PARSE-TREE-P");
    SubLSymbol PARSE_TREES = makeCycSymbol("PARSE-TREES");
    SubLSymbol PARSING_DISPATCH_TABLE = makeCycSymbol("PARSING-DISPATCH-TABLE");
    SubLSymbol PARSING_MT = makeCycSymbol("PARSING-MT");
    SubLSymbol PARTIAL_PLAN = makeCycSymbol("PARTIAL-PLAN");
    SubLSymbol PARTICLE_FILTER_LEXES = makeCycSymbol("PARTICLE-FILTER-LEXES");
    SubLSymbol PARTITION_SEMANTIC_COMPLEMENTS = makeCycSymbol("PARTITION-SEMANTIC-COMPLEMENTS");
    SubLSymbol PART_OF_SPEECH = makeCycSymbol("PART-OF-SPEECH");
    SubLSymbol qPART_TYPE = makeCycSymbol("?PART-TYPE");
    SubLSymbol PASSAGE = makeCycSymbol("PASSAGE");
    SubLSymbol PASSAGES = makeCycSymbol("PASSAGES");
    SubLSymbol PASSAGE_TREE = makeCycSymbol("PASSAGE-TREE");
    SubLSymbol PASSIVE_P = makeCycSymbol("PASSIVE-P");
    SubLSymbol PATH = makeCycSymbol("PATH");
    SubLSymbol PATHNAME = makeCycSymbol("PATHNAME");
    SubLSymbol qPATIENT = makeCycSymbol("?PATIENT");
    SubLSymbol PATTERN = makeCycSymbol("PATTERN");
    SubLSymbol PAYLOAD = makeCycSymbol("PAYLOAD");
    SubLSymbol PCASE = makeCycSymbol("PCASE");
    SubLSymbol PCOND = makeCycSymbol("PCOND");
    SubLSymbol PEEK = makeCycSymbol("PEEK");
    SubLSymbol qPEG = makeCycSymbol("?PEG");
    SubLSymbol PENDING_ACTIONS = makeCycSymbol("PENDING-ACTIONS");
    SubLSymbol PENN = makeCycSymbol("PENN");
    SubLSymbol PENN_TAGS = makeCycSymbol("PENN-TAGS");
    SubLSymbol PERFORM_ACTION = makeCycSymbol("PERFORM-ACTION");
    SubLSymbol qPERSON = makeCycSymbol("?PERSON");
    SubLSymbol PERSON = makeCycSymbol("PERSON");
    SubLSymbol PHRASE = makeCycSymbol("PHRASE");
    SubLSymbol PHRASES = makeCycSymbol("PHRASES");
    SubLSymbol PHRASE_TREE_P = makeCycSymbol("PHRASE-TREE-P");
    SubLSymbol PHRASE_WORDS = makeCycSymbol("PHRASE-WORDS");
    SubLSymbol PHYSICAL_INDEX = makeCycSymbol("PHYSICAL-INDEX");
    SubLSymbol PHYSICAL_SCHEMA = makeCycSymbol("PHYSICAL-SCHEMA");
    SubLSymbol PIF = makeCycSymbol("PIF");
    SubLSymbol PIF_FEATURE = makeCycSymbol("PIF-FEATURE");
    SubLSymbol qPLACE = makeCycSymbol("?PLACE");
    SubLSymbol PLACE = makeCycSymbol("PLACE");
    SubLSymbol PLAN = makeCycSymbol("PLAN");
    SubLSymbol PLAN_DISPLAYER = makeCycSymbol("PLAN-DISPLAYER");
    SubLSymbol PLANNER = makeCycSymbol("PLANNER");
    SubLSymbol PLANNER_RULE = makeCycSymbol("PLANNER-RULE");
    SubLSymbol PLANNER_RULES = makeCycSymbol("PLANNER-RULES");
    SubLSymbol PLAN_NUMBER_TO_CUTOFF = makeCycSymbol("PLAN-NUMBER-TO-CUTOFF");
    SubLSymbol PLANS = makeCycSymbol("PLANS");
    SubLSymbol PLANS_FOUND = makeCycSymbol("PLANS-FOUND");
    SubLSymbol PLAN_STATE = makeCycSymbol("PLAN-STATE");
    SubLSymbol PLIST = makeCycSymbol("PLIST");
    SubLSymbol PLISTIFIED_CONTENT = makeCycSymbol("PLISTIFIED-CONTENT");
    SubLSymbol PLISTIFY = makeCycSymbol("PLISTIFY");
    SubLSymbol PLURAL_P = makeCycSymbol("PLURAL-P");
    SubLSymbol PLUSP = makeCycSymbol("PLUSP");
    SubLSymbol POINT_INFO = makeCycSymbol("POINT-INFO");
    SubLSymbol POP = makeCycSymbol("POP");
    SubLSymbol PORT = makeCycSymbol("PORT");
    SubLSymbol PORT_ID = makeCycSymbol("PORT-ID");
    SubLSymbol PORT_MANAGER = makeCycSymbol("PORT-MANAGER");
    SubLSymbol PORTS = makeCycSymbol("PORTS");
    SubLSymbol qPOS = makeCycSymbol("?POS");
    SubLSymbol POS = makeCycSymbol("POS");
    SubLSymbol POS_FILTER_LEXES = makeCycSymbol("POS-FILTER-LEXES");
    SubLSymbol POSITION = makeCycSymbol("POSITION");
    SubLSymbol POSITIVE_CHOICE = makeCycSymbol("POSITIVE-CHOICE");
    SubLSymbol POSITIVE_INTEGER_P = makeCycSymbol("POSITIVE-INTEGER-P");
    SubLSymbol POSITIVE_LITERALS = makeCycSymbol("POSITIVE-LITERALS");
    SubLSymbol POSITIVE_NUMBER_P = makeCycSymbol("POSITIVE-NUMBER-P");
    SubLSymbol POS_LITS = makeCycSymbol("POS-LITS");
    SubLSymbol POS_PRED = makeCycSymbol("POS-PRED");
    SubLSymbol POSSESSED = makeCycSymbol("POSSESSED");
    SubLSymbol POSSESSOR = makeCycSymbol("POSSESSOR");
    SubLSymbol POSSIBLY_BIND_TEMPORAL_INDEXICAL_IN_OBJECT = makeCycSymbol("POSSIBLY-BIND-TEMPORAL-INDEXICAL-IN-OBJECT");
    SubLSymbol POSSIBLY_CYCL_FORMULA_P = makeCycSymbol("POSSIBLY-CYCL-FORMULA-P");
    SubLSymbol POSSIBLY_HLMT_P = makeCycSymbol("POSSIBLY-HLMT-P");
    SubLSymbol POSSIBLY_IN_MT = makeCycSymbol("POSSIBLY-IN-MT");
    SubLSymbol POSSIBLY_MT_P = makeCycSymbol("POSSIBLY-MT-P");
    SubLSymbol POSSIBLY_SENTENCE_P = makeCycSymbol("POSSIBLY-SENTENCE-P");
    SubLSymbol POSSIBLY_WITH_INFERENCE_MT_RELEVANCE = makeCycSymbol("POSSIBLY-WITH-INFERENCE-MT-RELEVANCE");
    SubLSymbol POSS_RM = makeCycSymbol("POSS-RM");
    SubLSymbol POST = makeCycSymbol("POST");
    SubLSymbol POST_AT_WILL = makeCycSymbol("POST-AT-WILL");
    SubLSymbol POSTING = makeCycSymbol("POSTING");
    SubLSymbol POSTING_CLASS = makeCycSymbol("POSTING-CLASS");
    SubLSymbol POSTING_CLASS_ASSOCIATIONS = makeCycSymbol("POSTING-CLASS-ASSOCIATIONS");
    SubLSymbol POSTING_DAEMON = makeCycSymbol("POSTING-DAEMON");
    SubLSymbol POSTING_DAEMONS = makeCycSymbol("POSTING-DAEMONS");
    SubLSymbol POSTING_DATATYPE = makeCycSymbol("POSTING-DATATYPE");
    SubLSymbol POSTING_EXPRESSION = makeCycSymbol("POSTING-EXPRESSION");
    SubLSymbol POSTING_EXPRESSIONS = makeCycSymbol("POSTING-EXPRESSIONS");
    SubLSymbol POSTING_ID = makeCycSymbol("POSTING-ID");
    SubLSymbol POSTING_REFERENCE_EXPRESSION = makeCycSymbol("POSTING-REFERENCE-EXPRESSION");
    SubLSymbol POSTINGS = makeCycSymbol("POSTINGS");
    SubLSymbol POSTING_TO_RAW_FUNCTION = makeCycSymbol("POSTING-TO-RAW-FUNCTION");
    SubLSymbol POSTING_TYPE = makeCycSymbol("POSTING-TYPE");
    SubLSymbol POSTING_VALUE = makeCycSymbol("POSTING-VALUE");
    SubLSymbol POSTING_VAR = makeCycSymbol("POSTING-VAR");
    SubLSymbol POSTING_VISITOR = makeCycSymbol("POSTING-VISITOR");
    SubLSymbol POST_ORDERING = makeCycSymbol("POST-ORDERING");
    SubLSymbol PP = makeCycSymbol("PP");
    SubLSymbol PP_COMP_FILTER_LEXES = makeCycSymbol("PP-COMP-FILTER-LEXES");
    SubLSymbol $PPH_DOMAIN_MT$ = makeCycSymbol("*PPH-DOMAIN-MT*");
    SubLSymbol PP_HEAD = makeCycSymbol("PP-HEAD");
    SubLSymbol PP_HEAD_STRING = makeCycSymbol("PP-HEAD-STRING");
    SubLSymbol $PPH_LANGUAGE_MT$ = makeCycSymbol("*PPH-LANGUAGE-MT*");
    SubLSymbol PPH_NOTE = makeCycSymbol("PPH-NOTE");
    SubLSymbol PPH_PHRASE_OUTPUT_LIST_P = makeCycSymbol("PPH-PHRASE-OUTPUT-LIST-P");
    SubLSymbol PPH_PRECISION_P = makeCycSymbol("PPH-PRECISION-P");
    SubLSymbol $PPH_VAR_TYPES$ = makeCycSymbol("*PPH-VAR-TYPES*");
    SubLSymbol PPS = makeCycSymbol("PPS");
    SubLSymbol P_QUEUE = makeCycSymbol("P-QUEUE");
    SubLSymbol PRAGMATICS = makeCycSymbol("PRAGMATICS");
    SubLSymbol PRE = makeCycSymbol("PRE");
    SubLSymbol PRECOND = makeCycSymbol("PRECOND");
    SubLSymbol PRECONDITION = makeCycSymbol("PRECONDITION");
    SubLSymbol PRECONDITION_DATATYPES = makeCycSymbol("PRECONDITION-DATATYPES");
    SubLSymbol PRECONDITION_PATTERN = makeCycSymbol("PRECONDITION-PATTERN");
    SubLSymbol PRECONDITIONS = makeCycSymbol("PRECONDITIONS");
    SubLSymbol PRECONDS = makeCycSymbol("PRECONDS");
    SubLSymbol qPRED = makeCycSymbol("?PRED");
    SubLSymbol PRED = makeCycSymbol("PRED");
    SubLSymbol PREDICATE = makeCycSymbol("PREDICATE");
    SubLSymbol PREDICATE_P = makeCycSymbol("PREDICATE-P");
    SubLSymbol PREDICATES = makeCycSymbol("PREDICATES");
    SubLSymbol PREDICATOR = makeCycSymbol("PREDICATOR");
    SubLSymbol PREDICATOR_IS_METHOD = makeCycSymbol("PREDICATOR-IS-METHOD");
    SubLSymbol PREDICATOR_METHOD = makeCycSymbol("PREDICATOR-METHOD");
    SubLSymbol PREDS = makeCycSymbol("PREDS");
    SubLSymbol PRED_SPEC = makeCycSymbol("PRED-SPEC");
    SubLSymbol PRED_VAR = makeCycSymbol("PRED-VAR");
    SubLSymbol PREFIX = makeCycSymbol("PREFIX");
    SubLSymbol PRE_ORDERING = makeCycSymbol("PRE-ORDERING");
    SubLSymbol PREPOSITION = makeCycSymbol("PREPOSITION");
    SubLSymbol PREPOSITION_LINK_WORD = makeCycSymbol("PREPOSITION-LINK-WORD");
    SubLSymbol PREP_STRING = makeCycSymbol("PREP-STRING");
    SubLSymbol PREVIOUS = makeCycSymbol("PREVIOUS");
    SubLSymbol PREV_NE = makeCycSymbol("PREV-NE");
    SubLSymbol PRIMITIVE_FORM = makeCycSymbol("PRIMITIVE-FORM");
    SubLSymbol PRIN1 = makeCycSymbol("PRIN1");
    SubLSymbol PRIN1_TO_STRING = makeCycSymbol("PRIN1-TO-STRING");
    SubLSymbol PRINC = makeCycSymbol("PRINC");
    SubLSymbol PRINC_TO_STRING = makeCycSymbol("PRINC-TO-STRING");
    SubLSymbol PRINT = makeCycSymbol("PRINT");
    SubLSymbol PRINT_OPERATOR = makeCycSymbol("PRINT-OPERATOR");
    SubLSymbol PRINT_TAIL_PART = makeCycSymbol("PRINT-TAIL-PART");
    SubLSymbol PRIORITIZER = makeCycSymbol("PRIORITIZER");
    SubLSymbol PRIORITY = makeCycSymbol("PRIORITY");
    SubLSymbol PRIVATE = makeCycSymbol("PRIVATE");
    SubLSymbol PROBABILITY = makeCycSymbol("PROBABILITY");
    SubLSymbol PROBE_FILE = makeCycSymbol("PROBE-FILE");
    SubLSymbol PROBLEM = makeCycSymbol("PROBLEM");
    SubLSymbol PROBLEM_CODE = makeCycSymbol("PROBLEM-CODE");
    SubLSymbol PROBLEM_LINK_P = makeCycSymbol("PROBLEM-LINK-P");
    SubLSymbol PROBLEM_NAME = makeCycSymbol("PROBLEM-NAME");
    SubLSymbol PROBLEM_P = makeCycSymbol("PROBLEM-P");
    SubLSymbol PROBLEM_STORE_ID = makeCycSymbol("PROBLEM-STORE-ID");
    SubLSymbol PROBLEM_STORE_P = makeCycSymbol("PROBLEM-STORE-P");
    SubLSymbol PROBLEM_SUID = makeCycSymbol("PROBLEM-SUID");
    SubLSymbol PROCESS = makeCycSymbol("PROCESS");
    SubLSymbol PROCESSED_ITEMS = makeCycSymbol("PROCESSED-ITEMS");
    SubLSymbol PROCESSING_STAGE = makeCycSymbol("PROCESSING-STAGE");
    SubLSymbol PROCESSP = makeCycSymbol("PROCESSP");
    SubLSymbol PROCESS_QUEUE = makeCycSymbol("PROCESS-QUEUE");
    SubLSymbol PROCESS_SCHEDULER = makeCycSymbol("PROCESS-SCHEDULER");
    SubLSymbol PROCESS_STATUS_UPDATE = makeCycSymbol("PROCESS-STATUS-UPDATE");
    SubLSymbol PRODUCT = makeCycSymbol("PRODUCT");
    SubLSymbol PRODUCTIVITY = makeCycSymbol("PRODUCTIVITY");
    SubLSymbol PRODUCT_NAME = makeCycSymbol("PRODUCT-NAME");
    SubLSymbol PROFILE_MT = makeCycSymbol("PROFILE-MT");
    SubLSymbol PROGN = makeCycSymbol("PROGN");
    SubLSymbol PROGRESS_MESSAGE = makeCycSymbol("PROGRESS-MESSAGE");
    SubLSymbol $PROGRESS_SOFAR$ = makeCycSymbol("*PROGRESS-SOFAR*");
    SubLSymbol $PROGRESS_TOTAL$ = makeCycSymbol("*PROGRESS-TOTAL*");
    SubLSymbol qPROJECT = makeCycSymbol("?PROJECT");
    SubLSymbol PROMPT = makeCycSymbol("PROMPT");
    SubLSymbol PRONOMIAL_RMS = makeCycSymbol("PRONOMIAL-RMS");
    SubLSymbol PROOF = makeCycSymbol("PROOF");
    SubLSymbol PROOF_P = makeCycSymbol("PROOF-P");
    SubLSymbol PROPER_LIST_P = makeCycSymbol("PROPER-LIST-P");
    SubLSymbol PROPER_NOUN_LINK_WORD = makeCycSymbol("PROPER-NOUN-LINK-WORD");
    SubLSymbol PROPERTIES = makeCycSymbol("PROPERTIES");
    SubLSymbol PROPERTY = makeCycSymbol("PROPERTY");
    SubLSymbol PROPERTY_KEYS = makeCycSymbol("PROPERTY-KEYS");
    SubLSymbol PROPERTY_LIST_P = makeCycSymbol("PROPERTY-LIST-P");
    SubLSymbol PROPID = makeCycSymbol("PROPID");
    SubLSymbol PROPOSAL = makeCycSymbol("PROPOSAL");
    SubLSymbol PROPOSAL_CLASS = makeCycSymbol("PROPOSAL-CLASS");
    SubLSymbol PROPOSAL_GUID = makeCycSymbol("PROPOSAL-GUID");
    SubLSymbol PROPOSAL_ID = makeCycSymbol("PROPOSAL-ID");
    SubLSymbol PROPOSAL_MESSAGE = makeCycSymbol("PROPOSAL-MESSAGE");
    SubLSymbol PROPOSAL_NAME = makeCycSymbol("PROPOSAL-NAME");
    SubLSymbol PROPOSALS_VAR = makeCycSymbol("PROPOSALS-VAR");
    SubLSymbol PROPOSAL_VAR = makeCycSymbol("PROPOSAL-VAR");
    SubLSymbol PROPOSE = makeCycSymbol("PROPOSE");
    SubLSymbol PROPOSED_CONTRIBUTIONS = makeCycSymbol("PROPOSED-CONTRIBUTIONS");
    SubLSymbol PROPOSED_REMOVALS = makeCycSymbol("PROPOSED-REMOVALS");
    SubLSymbol PROTECTED = makeCycSymbol("PROTECTED");
    SubLSymbol PROTECTED_FORM = makeCycSymbol("PROTECTED-FORM");
    SubLSymbol PROXY = makeCycSymbol("PROXY");
    SubLSymbol P_SEMAPHORE = makeCycSymbol("P-SEMAPHORE");
    SubLSymbol PUNCTUATION_LINK_WORD = makeCycSymbol("PUNCTUATION-LINK-WORD");
    SubLSymbol PUNCTUATION_WORD_TREE = makeCycSymbol("PUNCTUATION-WORD-TREE");
    SubLSymbol PUNLESS = makeCycSymbol("PUNLESS");
    SubLSymbol PUSH = makeCycSymbol("PUSH");
    SubLSymbol PUTF = makeCycSymbol("PUTF");
    SubLSymbol PWHEN = makeCycSymbol("PWHEN");
    SubLSymbol PWHEN_FEATURE = makeCycSymbol("PWHEN-FEATURE");
    SubLSymbol Q = makeCycSymbol("Q");
    SubLSymbol QUALIFIER = makeCycSymbol("QUALIFIER");
    SubLSymbol QUA_LIST_ELEMENT_PARENT_LINKS = makeCycSymbol("QUA-LIST-ELEMENT-PARENT-LINKS");
    SubLSymbol QUA_LIST_ELEMENT_SELF_DELETION_MODE = makeCycSymbol("QUA-LIST-ELEMENT-SELF-DELETION-MODE");
    SubLSymbol QUANT = makeCycSymbol("QUANT");
    SubLSymbol QUANTIFIER = makeCycSymbol("QUANTIFIER");
    SubLSymbol QUANTIFIER0 = makeCycSymbol("QUANTIFIER0");
    SubLSymbol QUANTIFIER_LINK_WORD = makeCycSymbol("QUANTIFIER-LINK-WORD");
    SubLSymbol qQUANTITY = makeCycSymbol("?QUANTITY");
    SubLSymbol qQUANTITY_2 = makeCycSymbol("?QUANTITY-2");
    SubLSymbol QUERIES = makeCycSymbol("QUERIES");
    SubLSymbol QUERIFY = makeCycSymbol("QUERIFY");
    SubLSymbol qQUERY = makeCycSymbol("?QUERY");
    SubLSymbol QUERY = makeCycSymbol("QUERY");
    SubLSymbol QUERY_LANGUAGE_ATTR = makeCycSymbol("QUERY-LANGUAGE-ATTR");
    SubLSymbol QUERY_POSTING = makeCycSymbol("QUERY-POSTING");
    SubLSymbol QUERY_PROPERTIES = makeCycSymbol("QUERY-PROPERTIES");
    SubLSymbol QUERY_PROPERTIES_P = makeCycSymbol("QUERY-PROPERTIES-P");
    SubLSymbol QUERY_PROPERTY_P = makeCycSymbol("QUERY-PROPERTY-P");
    SubLSymbol QUERY_SENTENCE = makeCycSymbol("QUERY-SENTENCE");
    SubLSymbol QUERY_SPEC = makeCycSymbol("QUERY-SPEC");
    SubLSymbol QUERY_TAG = makeCycSymbol("QUERY-TAG");
    SubLSymbol QUERY_TEMPLATE = makeCycSymbol("QUERY-TEMPLATE");
    SubLSymbol QUERY_TYPE_ATTR = makeCycSymbol("QUERY-TYPE-ATTR");
    SubLSymbol QUESTION = makeCycSymbol("QUESTION");
    SubLSymbol QUESTION_ANSWERING_AGENT_CLASS = makeCycSymbol("QUESTION-ANSWERING-AGENT-CLASS");
    SubLSymbol QUESTION_TYPE = makeCycSymbol("QUESTION-TYPE");
    SubLSymbol QUEUE = makeCycSymbol("QUEUE");
    SubLSymbol QUEUE_ELEMENT_INTERFACE_P = makeCycSymbol("QUEUE-ELEMENT-INTERFACE-P");
    SubLSymbol QUEUE_EMPTY_P = makeCycSymbol("QUEUE-EMPTY-P");
    SubLSymbol QUEUE_LIST = makeCycSymbol("QUEUE-LIST");
    SubLSymbol QUEUE_P = makeCycSymbol("QUEUE-P");
    SubLSymbol QUOTE = makeCycSymbol("QUOTE");
    SubLSymbol RANGE = makeCycSymbol("RANGE");
    SubLSymbol RANGE_TUPLE = makeCycSymbol("RANGE-TUPLE");
    SubLSymbol RANK = makeCycSymbol("RANK");
    SubLSymbol RANKING = makeCycSymbol("RANKING");
    SubLSymbol RAW_CYCLIFICATIONS = makeCycSymbol("RAW-CYCLIFICATIONS");
    SubLSymbol RAW_INPUT = makeCycSymbol("RAW-INPUT");
    SubLSymbol RAW_TO_POSTING_FUNCTION = makeCycSymbol("RAW-TO-POSTING-FUNCTION");
    SubLSymbol READ_FROM_STRING = makeCycSymbol("READ-FROM-STRING");
    SubLSymbol READ_FROM_STRING_IGNORING_ERRORS = makeCycSymbol("READ-FROM-STRING-IGNORING-ERRORS");
    SubLSymbol REASON = makeCycSymbol("REASON");
    SubLSymbol REASONS = makeCycSymbol("REASONS");
    SubLSymbol RECALCULATE_IF_EXISTSq = makeCycSymbol("RECALCULATE-IF-EXISTS?");
    SubLSymbol RECOMPUTE_CONFIDENCE = makeCycSymbol("RECOMPUTE-CONFIDENCE");
    SubLSymbol RECORD_INDEX = makeCycSymbol("RECORD-INDEX");
    SubLSymbol RECORD_LENGTH = makeCycSymbol("RECORD-LENGTH");
    SubLSymbol RECORD_USE = makeCycSymbol("RECORD-USE");
    SubLSymbol REF = makeCycSymbol("REF");
    SubLSymbol REFERENCE = makeCycSymbol("REFERENCE");
    SubLSymbol REFERENCE_HASHTABLE = makeCycSymbol("REFERENCE-HASHTABLE");
    SubLSymbol REFINED_TAG = makeCycSymbol("REFINED-TAG");
    SubLSymbol REFS = makeCycSymbol("REFS");
    SubLSymbol REGEX_PATTERN_P = makeCycSymbol("REGEX-PATTERN-P");
    SubLSymbol REGISTER_PARSER = makeCycSymbol("REGISTER-PARSER");
    SubLSymbol REGULAR_EXPRESSION = makeCycSymbol("REGULAR-EXPRESSION");
    SubLSymbol REJECTED = makeCycSymbol("REJECTED");
    SubLSymbol REL = makeCycSymbol("REL");
    SubLSymbol RELATION = makeCycSymbol("RELATION");
    SubLSymbol RELATIONAL_NOUN_P = makeCycSymbol("RELATIONAL-NOUN-P");
    SubLSymbol RELATIONS = makeCycSymbol("RELATIONS");
    SubLSymbol RELEVANT_MTq = makeCycSymbol("RELEVANT-MT?");
    SubLSymbol RELEVANT_MT_IS_ANY_MT = makeCycSymbol("RELEVANT-MT-IS-ANY-MT");
    SubLSymbol RELEVANT_MT_IS_EQ = makeCycSymbol("RELEVANT-MT-IS-EQ");
    SubLSymbol RELEVANT_MT_IS_EVERYTHING = makeCycSymbol("RELEVANT-MT-IS-EVERYTHING");
    SubLSymbol RELEVANT_MT_IS_GENL_MT = makeCycSymbol("RELEVANT-MT-IS-GENL-MT");
    SubLSymbol RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER = makeCycSymbol("RELEVANT-MT-IS-GENL-MT-OF-LIST-MEMBER");
    SubLSymbol RELEVANT_MT_IS_IN_LIST = makeCycSymbol("RELEVANT-MT-IS-IN-LIST");
    SubLSymbol RELEVANT_PRED_IS_EQ = makeCycSymbol("RELEVANT-PRED-IS-EQ");
    SubLSymbol RELEVANT_PRED_IS_SPEC_INVERSE = makeCycSymbol("RELEVANT-PRED-IS-SPEC-INVERSE");
    SubLSymbol RELEVANT_PRED_IS_SPEC_PRED = makeCycSymbol("RELEVANT-PRED-IS-SPEC-PRED");
    SubLSymbol RELEVANT_SBHL_TV_IS_GENERAL_TV = makeCycSymbol("RELEVANT-SBHL-TV-IS-GENERAL-TV");
    SubLSymbol RELN = makeCycSymbol("RELN");
    SubLSymbol REMOVAL_FRACTION_WITH_MEASURE_POS_CHECK = makeCycSymbol("REMOVAL-FRACTION-WITH-MEASURE-POS-CHECK");
    SubLSymbol REMOVAL_ISA_SUBCOLLECTION_UNIFY_EXPAND = makeCycSymbol("REMOVAL-ISA-SUBCOLLECTION-UNIFY-EXPAND");
    SubLSymbol REMOVAL_TERM_PHRASES_REQUIRED = makeCycSymbol("REMOVAL-TERM-PHRASES-REQUIRED");
    SubLSymbol REMOVE = makeCycSymbol("REMOVE");
    SubLSymbol REMOVE_ALL_DEPENDENTS = makeCycSymbol("REMOVE-ALL-DEPENDENTS");
    SubLSymbol REMOVE_ALL_KNOWLEDGE_SOURCES = makeCycSymbol("REMOVE-ALL-KNOWLEDGE-SOURCES");
    SubLSymbol REMOVE_DEPENDENT = makeCycSymbol("REMOVE-DEPENDENT");
    SubLSymbol REMOVE_DIRECT_KNOWLEDGE_SOURCE = makeCycSymbol("REMOVE-DIRECT-KNOWLEDGE-SOURCE");
    SubLSymbol REMOVE_DIRECT_KNOWLEDGE_SOURCES = makeCycSymbol("REMOVE-DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol REMOVE_DIRECT_POSTING = makeCycSymbol("REMOVE-DIRECT-POSTING");
    SubLSymbol REMOVE_DIRECT_POSTINGS = makeCycSymbol("REMOVE-DIRECT-POSTINGS");
    SubLSymbol REMOVE_DUPLICATES = makeCycSymbol("REMOVE-DUPLICATES");
    SubLSymbol REMOVE_EVENT_ROOT_POSTING_PROPOSAL = makeCycSymbol("REMOVE-EVENT-ROOT-POSTING-PROPOSAL");
    SubLSymbol REMOVE_MARK = makeCycSymbol("REMOVE-MARK");
    SubLSymbol REMOVE_NOTIFY = makeCycSymbol("REMOVE-NOTIFY");
    SubLSymbol REMOVE_PANELS_AT_WILL = makeCycSymbol("REMOVE-PANELS-AT-WILL");
    SubLSymbol REMOVE_POSTING = makeCycSymbol("REMOVE-POSTING");
    SubLSymbol REMOVE_POSTING_DAEMON = makeCycSymbol("REMOVE-POSTING-DAEMON");
    SubLSymbol REMOVE_SUB_PANEL = makeCycSymbol("REMOVE-SUB-PANEL");
    SubLSymbol REMOVE_SUPER_PANEL = makeCycSymbol("REMOVE-SUPER-PANEL");
    SubLSymbol REMOVE_SUPPORT_NOTIFY = makeCycSymbol("REMOVE-SUPPORT-NOTIFY");
    SubLSymbol qREMOVE_TERM = makeCycSymbol("?REMOVE-TERM");
    SubLSymbol RENAMED0 = makeCycSymbol("RENAMED0");
    SubLSymbol RENAMING = makeCycSymbol("RENAMING");
    SubLSymbol RENAMINGS = makeCycSymbol("RENAMINGS");
    SubLSymbol RENAMINGS_DISJ = makeCycSymbol("RENAMINGS-DISJ");
    SubLSymbol REORDER_CONTENTS = makeCycSymbol("REORDER-CONTENTS");
    SubLSymbol REPEAT = makeCycSymbol("REPEAT");
    SubLSymbol REPORT_CONTENTS_MESSAGE = makeCycSymbol("REPORT-CONTENTS-MESSAGE");
    SubLSymbol REQUEST = makeCycSymbol("REQUEST");
    SubLSymbol REQUEST_CONTENTS_MESSAGE = makeCycSymbol("REQUEST-CONTENTS-MESSAGE");
    SubLSymbol REQUEST_STRING = makeCycSymbol("REQUEST-STRING");
    SubLSymbol REQUIRED_KEYWORDS = makeCycSymbol("REQUIRED-KEYWORDS");
    SubLSymbol REQUIRE_PERCENTAGE = makeCycSymbol("REQUIRE-PERCENTAGE");
    SubLSymbol REQUIRE_SIMILARITY = makeCycSymbol("REQUIRE-SIMILARITY");
    SubLSymbol RES = makeCycSymbol("RES");
    SubLSymbol RESET = makeCycSymbol("RESET");
    SubLSymbol RESOLVE_METHOD = makeCycSymbol("RESOLVE-METHOD");
    SubLSymbol RESOLVE_TERM = makeCycSymbol("RESOLVE-TERM");
    SubLSymbol RESPONSE = makeCycSymbol("RESPONSE");
    SubLSymbol RESPONSES = makeCycSymbol("RESPONSES");
    SubLSymbol aREST = makeCycSymbol("&REST");
    SubLSymbol REST = makeCycSymbol("REST");
    SubLSymbol RESULT = makeCycSymbol("RESULT");
    SubLSymbol RESULTS = makeCycSymbol("RESULTS");
    SubLSymbol RESULT_VAR = makeCycSymbol("RESULT-VAR");
    SubLSymbol RET = makeCycSymbol("RET");
    SubLSymbol RETRACT = makeCycSymbol("RETRACT");
    SubLSymbol RETRIEVE_COLLECTION_CONTENTS = makeCycSymbol("RETRIEVE-COLLECTION-CONTENTS");
    SubLSymbol RETURN_VALUE = makeCycSymbol("RETURN-VALUE");
    SubLSymbol REVERSE = makeCycSymbol("REVERSE");
    SubLSymbol REVERSE_LINK = makeCycSymbol("REVERSE-LINK");
    SubLSymbol RIGHT_LINKS = makeCycSymbol("RIGHT-LINKS");
    SubLSymbol RKF_UTTRDR_USE_TEMPLATE_PARSER = makeCycSymbol("RKF-UTTRDR-USE-TEMPLATE-PARSER");
    SubLSymbol RLE = makeCycSymbol("RLE");
    SubLSymbol RLE_LEX = makeCycSymbol("RLE-LEX");
    SubLSymbol RLE_SET_CONFIDENCE = makeCycSymbol("RLE-SET-CONFIDENCE");
    SubLSymbol RM = makeCycSymbol("RM");
    SubLSymbol RM_FORMULA = makeCycSymbol("RM-FORMULA");
    SubLSymbol RM_RESULTS = makeCycSymbol("RM-RESULTS");
    SubLSymbol RMS = makeCycSymbol("RMS");
    SubLSymbol qROLE = makeCycSymbol("?ROLE");
    SubLSymbol ROOT_DATATYPE_NAME = makeCycSymbol("ROOT-DATATYPE-NAME");
    SubLSymbol ROOT_MT = makeCycSymbol("ROOT-MT");
    SubLSymbol ROOT_P = makeCycSymbol("ROOT-P");
    SubLSymbol ROOT_PANELS = makeCycSymbol("ROOT-PANELS");
    SubLSymbol ROOT_SLICES = makeCycSymbol("ROOT-SLICES");
    SubLSymbol ROOT_TERM = makeCycSymbol("ROOT-TERM");
    SubLSymbol RPLACA = makeCycSymbol("RPLACA");
    SubLSymbol RPLACD = makeCycSymbol("RPLACD");
    SubLSymbol RS = makeCycSymbol("RS");
    SubLSymbol qRULE = makeCycSymbol("?RULE");
    SubLSymbol RULE = makeCycSymbol("RULE");
    SubLSymbol RULE_ASSERTIONq = makeCycSymbol("RULE-ASSERTION?");
    SubLSymbol RULES = makeCycSymbol("RULES");
    SubLSymbol RUN = makeCycSymbol("RUN");
    SubLSymbol RUN_TIME = makeCycSymbol("RUN-TIME");
    SubLSymbol S = makeCycSymbol("S");
    SubLSymbol SALIENT_QUERIES = makeCycSymbol("SALIENT-QUERIES");
    SubLSymbol SATISFACTION_EXPRESSION = makeCycSymbol("SATISFACTION-EXPRESSION");
    SubLSymbol SATISFACTION_TYPE = makeCycSymbol("SATISFACTION-TYPE");
    SubLSymbol SATISFIED_ELEMENTS = makeCycSymbol("SATISFIED-ELEMENTS");
    SubLSymbol SATISFIED_P = makeCycSymbol("SATISFIED-P");
    SubLSymbol SBHL_MODULE_P = makeCycSymbol("SBHL-MODULE-P");
    SubLSymbol SBHL_TIME_INFERENCE_ARG_P = makeCycSymbol("SBHL-TIME-INFERENCE-ARG-P");
    SubLSymbol SBHL_TRUE_TV_P = makeCycSymbol("SBHL-TRUE-TV-P");
    SubLSymbol SCENARIO = makeCycSymbol("SCENARIO");
    SubLSymbol SCOPE = makeCycSymbol("SCOPE");
    SubLSymbol SCORE = makeCycSymbol("SCORE");
    SubLSymbol SCORE_FUNCTION = makeCycSymbol("SCORE-FUNCTION");
    SubLSymbol SCRATCHPAD = makeCycSymbol("SCRATCHPAD");
    SubLSymbol SCRIPT = makeCycSymbol("SCRIPT");
    SubLSymbol SCYCLS = makeCycSymbol("SCYCLS");
    SubLSymbol SEARCH = makeCycSymbol("SEARCH");
    SubLSymbol SEARCH_DIRECTIVE_TAG = makeCycSymbol("SEARCH-DIRECTIVE-TAG");
    SubLSymbol SEARCH_STRING = makeCycSymbol("SEARCH-STRING");
    SubLSymbol SEARCH_TYPE = makeCycSymbol("SEARCH-TYPE");
    SubLSymbol qSECOND = makeCycSymbol("?SECOND");
    SubLSymbol SECOND = makeCycSymbol("SECOND");
    SubLSymbol SELECT = makeCycSymbol("SELECT");
    SubLSymbol SELECTED = makeCycSymbol("SELECTED");
    SubLSymbol SELECTIVENESS = makeCycSymbol("SELECTIVENESS");
    SubLSymbol SELECT_KEYWORD = makeCycSymbol("SELECT-KEYWORD");
    SubLSymbol SELF = makeCycSymbol("SELF");
    SubLSymbol SEMANTICS = makeCycSymbol("SEMANTICS");
    SubLSymbol SEMAPHORE = makeCycSymbol("SEMAPHORE");
    SubLSymbol SEMAPHORE_NAME = makeCycSymbol("SEMAPHORE-NAME");
    SubLSymbol SEMTRANS = makeCycSymbol("SEMTRANS");
    SubLSymbol SEMTRANSES = makeCycSymbol("SEMTRANSES");
    SubLSymbol SEMTRANS_LEXICON = makeCycSymbol("SEMTRANS-LEXICON");
    SubLSymbol SENSE = makeCycSymbol("SENSE");
    SubLSymbol SENSE_CYCLS = makeCycSymbol("SENSE-CYCLS");
    SubLSymbol SENSE_P = makeCycSymbol("SENSE-P");
    SubLSymbol qSENTENCE = makeCycSymbol("?SENTENCE");
    SubLSymbol SENTENCE = makeCycSymbol("SENTENCE");
    SubLSymbol SENTENCE_ID = makeCycSymbol("SENTENCE-ID");
    SubLSymbol SENTENCE_NUMBER = makeCycSymbol("SENTENCE-NUMBER");
    SubLSymbol SENTENCE_P = makeCycSymbol("SENTENCE-P");
    SubLSymbol SENTENCE_PARTICLE = makeCycSymbol("SENTENCE-PARTICLE");
    SubLSymbol SENTENCE_PARTICLE_HEAD = makeCycSymbol("SENTENCE-PARTICLE-HEAD");
    SubLSymbol SENTENCES = makeCycSymbol("SENTENCES");
    SubLSymbol SEQUENCE = makeCycSymbol("SEQUENCE");
    SubLSymbol SEQUENCE_CLASS = makeCycSymbol("SEQUENCE-CLASS");
    SubLSymbol SEQUENCEP = makeCycSymbol("SEQUENCEP");
    SubLSymbol SEQVAR_HANDLING = makeCycSymbol("SEQVAR-HANDLING");
    SubLSymbol SERIALIZED_EVENT = makeCycSymbol("SERIALIZED-EVENT");
    SubLSymbol SERVER = makeCycSymbol("SERVER");
    SubLSymbol SESSION = makeCycSymbol("SESSION");
    SubLSymbol SESSION_CONNECTION = makeCycSymbol("SESSION-CONNECTION");
    SubLSymbol SESSION_ID = makeCycSymbol("SESSION-ID");
    SubLSymbol SESSION_MT = makeCycSymbol("SESSION-MT");
    SubLSymbol SESSION_PARAMETERS = makeCycSymbol("SESSION-PARAMETERS");
    SubLSymbol qSET = makeCycSymbol("?SET");
    SubLSymbol SET = makeCycSymbol("SET");
    SubLSymbol SET_ACTIVATION_PATTERN = makeCycSymbol("SET-ACTIVATION-PATTERN");
    SubLSymbol SET_ACTIVE = makeCycSymbol("SET-ACTIVE");
    SubLSymbol SET_ADD = makeCycSymbol("SET-ADD");
    SubLSymbol SET_ANSWER = makeCycSymbol("SET-ANSWER");
    SubLSymbol SET_APPLICATION = makeCycSymbol("SET-APPLICATION");
    SubLSymbol SET_APPLICATION_NAME = makeCycSymbol("SET-APPLICATION-NAME");
    SubLSymbol SET_AREF = makeCycSymbol("SET-AREF");
    SubLSymbol SET_ARG1 = makeCycSymbol("SET-ARG1");
    SubLSymbol SET_ARG2 = makeCycSymbol("SET-ARG2");
    SubLSymbol SET_ARGN = makeCycSymbol("SET-ARGN");
    SubLSymbol SET_ARGS = makeCycSymbol("SET-ARGS");
    SubLSymbol SET_BINDING_LIST = makeCycSymbol("SET-BINDING-LIST");
    SubLSymbol SET_CASE_SENSITIVITY = makeCycSymbol("SET-CASE-SENSITIVITY");
    SubLSymbol SET_CONFIDENCE = makeCycSymbol("SET-CONFIDENCE");
    SubLSymbol SET_CONTENTS = makeCycSymbol("SET-CONTENTS");
    SubLSymbol SET_CONTENTS_POINTER = makeCycSymbol("SET-CONTENTS-POINTER");
    SubLSymbol SET_DATATYPE = makeCycSymbol("SET-DATATYPE");
    SubLSymbol SET_DICTIONARY = makeCycSymbol("SET-DICTIONARY");
    SubLSymbol SET_DIFFERENCE = makeCycSymbol("SET-DIFFERENCE");
    SubLSymbol SET_DIRECTION = makeCycSymbol("SET-DIRECTION");
    SubLSymbol SET_DIRECT_KNOWLEDGE_SOURCES = makeCycSymbol("SET-DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol SET_ELEMENT_COUNT = makeCycSymbol("SET-ELEMENT-COUNT");
    SubLSymbol SET_ELEMENT_EQUALITY_PREDICATE = makeCycSymbol("SET-ELEMENT-EQUALITY-PREDICATE");
    SubLSymbol SET_END_POINTER = makeCycSymbol("SET-END-POINTER");
    SubLSymbol SET_EXECUTION_ERROR_MESSAGE = makeCycSymbol("SET-EXECUTION-ERROR-MESSAGE");
    SubLSymbol SET_EXECUTION_MODE = makeCycSymbol("SET-EXECUTION-MODE");
    SubLSymbol SET_EXTERNAL_MODULE_ID = makeCycSymbol("SET-EXTERNAL-MODULE-ID");
    SubLSymbol SET_EXTERNAL_MODULE_NAME = makeCycSymbol("SET-EXTERNAL-MODULE-NAME");
    SubLSymbol SET_FIRST = makeCycSymbol("SET-FIRST");
    SubLSymbol SET_FIRST_CONS = makeCycSymbol("SET-FIRST-CONS");
    SubLSymbol SET_FIRST_LINK = makeCycSymbol("SET-FIRST-LINK");
    SubLSymbol SETHASH = makeCycSymbol("SETHASH");
    SubLSymbol SET_INITIAL_STATE = makeCycSymbol("SET-INITIAL-STATE");
    SubLSymbol SET_INTERACTION = makeCycSymbol("SET-INTERACTION");
    SubLSymbol SET_INTERNAL_STORAGE = makeCycSymbol("SET-INTERNAL-STORAGE");
    SubLSymbol SET_KEYWORD = makeCycSymbol("SET-KEYWORD");
    SubLSymbol SET_KNOWLEDGE_SOURCE = makeCycSymbol("SET-KNOWLEDGE-SOURCE");
    SubLSymbol SET_KSI = makeCycSymbol("SET-KSI");
    SubLSymbol SET_KSI_INDEX = makeCycSymbol("SET-KSI-INDEX");
    SubLSymbol SET_LAST_LINK = makeCycSymbol("SET-LAST-LINK");
    SubLSymbol SET_LEXICON = makeCycSymbol("SET-LEXICON");
    SubLSymbol SET_LIST_INTERNAL = makeCycSymbol("SET-LIST-INTERNAL");
    SubLSymbol SET_LOCAL_BINDINGS = makeCycSymbol("SET-LOCAL-BINDINGS");
    SubLSymbol SET_LOGICAL_FORM = makeCycSymbol("SET-LOGICAL-FORM");
    SubLSymbol SET_MARKS_INTERNAL = makeCycSymbol("SET-MARKS-INTERNAL");
    SubLSymbol SET_MEMBERq = makeCycSymbol("SET-MEMBER?");
    SubLSymbol SET_MESSAGE_BROKER = makeCycSymbol("SET-MESSAGE-BROKER");
    SubLSymbol SET_MESSAGE_KEY = makeCycSymbol("SET-MESSAGE-KEY");
    SubLSymbol SET_MT = makeCycSymbol("SET-MT");
    SubLSymbol SET_NAME = makeCycSymbol("SET-NAME");
    SubLSymbol SET_NTH = makeCycSymbol("SET-NTH");
    SubLSymbol SET_OUTER_SCOPE = makeCycSymbol("SET-OUTER-SCOPE");
    SubLSymbol SET_P = makeCycSymbol("SET-P");
    SubLSymbol SET_PANEL = makeCycSymbol("SET-PANEL");
    SubLSymbol SET_PARENT = makeCycSymbol("SET-PARENT");
    SubLSymbol SET_PARENT_LINKS = makeCycSymbol("SET-PARENT-LINKS");
    SubLSymbol SET_PASSIVE = makeCycSymbol("SET-PASSIVE");
    SubLSymbol SET_PORT_ID = makeCycSymbol("SET-PORT-ID");
    SubLSymbol SET_POST_AT_WILL = makeCycSymbol("SET-POST-AT-WILL");
    SubLSymbol SET_PRECONDITION_PATTERN = makeCycSymbol("SET-PRECONDITION-PATTERN");
    SubLSymbol SET_PRIORITIZER = makeCycSymbol("SET-PRIORITIZER");
    SubLSymbol SET_PRIORITIZER_INTERNAL = makeCycSymbol("SET-PRIORITIZER-INTERNAL");
    SubLSymbol SET_PROPID = makeCycSymbol("SET-PROPID");
    SubLSymbol SET_PROPOSAL = makeCycSymbol("SET-PROPOSAL");
    SubLSymbol SET_PROPOSAL_CLASS = makeCycSymbol("SET-PROPOSAL-CLASS");
    SubLSymbol SET_PROPOSAL_INDEX = makeCycSymbol("SET-PROPOSAL-INDEX");
    SubLSymbol SET_PROPOSED_CONTRIBUTIONS = makeCycSymbol("SET-PROPOSED-CONTRIBUTIONS");
    SubLSymbol SET_REASONS = makeCycSymbol("SET-REASONS");
    SubLSymbol SET_RESULT = makeCycSymbol("SET-RESULT");
    SubLSymbol SET_SECOND = makeCycSymbol("SET-SECOND");
    SubLSymbol SET_SELF_DELETION_MODE = makeCycSymbol("SET-SELF-DELETION-MODE");
    SubLSymbol SETS_EQUALq = makeCycSymbol("SETS-EQUAL?");
    SubLSymbol SET_SESSION_ID = makeCycSymbol("SET-SESSION-ID");
    SubLSymbol SET_SLOT = makeCycSymbol("SET-SLOT");
    SubLSymbol SET_SOURCE = makeCycSymbol("SET-SOURCE");
    SubLSymbol SET_STATES = makeCycSymbol("SET-STATES");
    SubLSymbol SET_STREAM = makeCycSymbol("SET-STREAM");
    SubLSymbol SET_TIMESTAMP = makeCycSymbol("SET-TIMESTAMP");
    SubLSymbol SET_TRACE_STATE = makeCycSymbol("SET-TRACE-STATE");
    SubLSymbol SET_TRANSACTION_ID = makeCycSymbol("SET-TRANSACTION-ID");
    SubLSymbol SET_TYPE_STRING = makeCycSymbol("SET-TYPE-STRING");
    SubLSymbol SET_UNIFICATION_ROBOT_CLASS = makeCycSymbol("SET-UNIFICATION-ROBOT-CLASS");
    SubLSymbol SET_UNPARSED_PATTERN = makeCycSymbol("SET-UNPARSED-PATTERN");
    SubLSymbol SETUP = makeCycSymbol("SETUP");
    SubLSymbol SET_VALUE = makeCycSymbol("SET-VALUE");
    SubLSymbol SHARED_STORAGE = makeCycSymbol("SHARED-STORAGE");
    SubLSymbol SHOP_BASIC_CONDITIONAL_EFFECT = makeCycSymbol("SHOP-BASIC-CONDITIONAL-EFFECT");
    SubLSymbol SHOP_BASIC_OPERATOR = makeCycSymbol("SHOP-BASIC-OPERATOR");
    SubLSymbol SHOP_BASIC_PLANNER_THREAD = makeCycSymbol("SHOP-BASIC-PLANNER-THREAD");
    SubLSymbol SHOP_BASIC_PLAN_STATE = makeCycSymbol("SHOP-BASIC-PLAN-STATE");
    SubLSymbol SHOP_BASIC_PROBLEM = makeCycSymbol("SHOP-BASIC-PROBLEM");
    SubLSymbol SHOP_BASIC_WORLD_STATE = makeCycSymbol("SHOP-BASIC-WORLD-STATE");
    SubLSymbol SHOP_CYC_DOMAIN = makeCycSymbol("SHOP-CYC-DOMAIN");
    SubLSymbol SHOP_MT_WORLD_STATE = makeCycSymbol("SHOP-MT-WORLD-STATE");
    SubLSymbol SHOP_STATISTIC_MANAGER = makeCycSymbol("SHOP-STATISTIC-MANAGER");
    SubLSymbol SHOP_UNIFY = makeCycSymbol("SHOP-UNIFY");
    SubLSymbol SHOP_UNIFY_FAILEDq = makeCycSymbol("SHOP-UNIFY-FAILED?");
    SubLSymbol SHOP_VARIABLE_MANAGER = makeCycSymbol("SHOP-VARIABLE-MANAGER");
    SubLSymbol SHORT_DESC = makeCycSymbol("SHORT-DESC");
    SubLSymbol SHOW_DEBUG_INFO = makeCycSymbol("SHOW-DEBUG-INFO");
    SubLSymbol SIGNIFICAND = makeCycSymbol("SIGNIFICAND");
    SubLSymbol $SILENT_PROGRESSq$ = makeCycSymbol("*SILENT-PROGRESS?*");
    SubLSymbol SIMPLE_FORMULAS = makeCycSymbol("SIMPLE-FORMULAS");
    SubLSymbol SIMPLE_MBINDING = makeCycSymbol("SIMPLE-MBINDING");
    SubLSymbol SIMPLE_NOUN = makeCycSymbol("SIMPLE-NOUN");
    SubLSymbol SIMPLE_NOUN_STRING = makeCycSymbol("SIMPLE-NOUN-STRING");
    SubLSymbol SINGLETONq = makeCycSymbol("SINGLETON?");
    SubLSymbol SINGULAR_P = makeCycSymbol("SINGULAR-P");
    SubLSymbol SISTER = makeCycSymbol("SISTER");
    SubLSymbol SIZE = makeCycSymbol("SIZE");
    SubLSymbol SKIP = makeCycSymbol("SKIP");
    SubLSymbol SKIPq = makeCycSymbol("SKIP?");
    SubLSymbol SKS = makeCycSymbol("SKS");
    SubLSymbol SLEEP = makeCycSymbol("SLEEP");
    SubLSymbol SLICE = makeCycSymbol("SLICE");
    SubLSymbol SLOT = makeCycSymbol("SLOT");
    SubLSymbol SLOT_INITIALIZATIONS = makeCycSymbol("SLOT-INITIALIZATIONS");
    SubLSymbol SLOT_KEY = makeCycSymbol("SLOT-KEY");
    SubLSymbol SLOT_NAME = makeCycSymbol("SLOT-NAME");
    SubLSymbol SLOT_NAME_LITERAL = makeCycSymbol("SLOT-NAME-LITERAL");
    SubLSymbol SLOTS = makeCycSymbol("SLOTS");
    SubLSymbol SLOT_VALUE = makeCycSymbol("SLOT-VALUE");
    SubLSymbol SME_LEXIFICATION_WIZARD = makeCycSymbol("SME-LEXIFICATION-WIZARD");
    SubLSymbol $SME_LEXWIZ_VERBOSEq$ = makeCycSymbol("*SME-LEXWIZ-VERBOSE?*");
    SubLSymbol SME_STATE = makeCycSymbol("SME-STATE");
    SubLSymbol SOLUTION = makeCycSymbol("SOLUTION");
    SubLSymbol SOLUTIONS = makeCycSymbol("SOLUTIONS");
    SubLSymbol SORT = makeCycSymbol("SORT");
    SubLSymbol SORT_PREDICATE = makeCycSymbol("SORT-PREDICATE");
    SubLSymbol SOURCE = makeCycSymbol("SOURCE");
    SubLSymbol SPAN = makeCycSymbol("SPAN");
    SubLSymbol SPARSE_SPATIAL_INDEX = makeCycSymbol("SPARSE-SPATIAL-INDEX");
    SubLSymbol SPARSE_SPATIAL_SLICE = makeCycSymbol("SPARSE-SPATIAL-SLICE");
    SubLSymbol SPATIAL_ELEMENT = makeCycSymbol("SPATIAL-ELEMENT");
    SubLSymbol SPATIAL_INDEX = makeCycSymbol("SPATIAL-INDEX");
    SubLSymbol SPAWN_CONNECTION_FUNCTION = makeCycSymbol("SPAWN-CONNECTION-FUNCTION");
    SubLSymbol qSPEC = makeCycSymbol("?SPEC");
    SubLSymbol SPEC = makeCycSymbol("SPEC");
    SubLSymbol SPECq = makeCycSymbol("SPEC?");
    SubLSymbol qSPEC_MT = makeCycSymbol("?SPEC-MT");
    SubLSymbol SPEC_PRED = makeCycSymbol("SPEC-PRED");
    SubLSymbol SPECS = makeCycSymbol("SPECS");
    SubLSymbol SPEECH_PART = makeCycSymbol("SPEECH-PART");
    SubLSymbol SPEECH_PARTq = makeCycSymbol("SPEECH-PART?");
    SubLSymbol SPEECH_PART_PREDq = makeCycSymbol("SPEECH-PART-PRED?");
    SubLSymbol SPELLING_CORRECTIONS = makeCycSymbol("SPELLING-CORRECTIONS");
    SubLSymbol SQLRS_GET_OBJECT = makeCycSymbol("SQLRS-GET-OBJECT");
    SubLSymbol SRC = makeCycSymbol("SRC");
    SubLSymbol STACK = makeCycSymbol("STACK");
    SubLSymbol STACK_POP = makeCycSymbol("STACK-POP");
    SubLSymbol STACK_PUSH = makeCycSymbol("STACK-PUSH");
    SubLSymbol $STANDARD_OUTPUT$ = makeCycSymbol("*STANDARD-OUTPUT*");
    SubLSymbol STANFORD_NER = makeCycSymbol("STANFORD-NER");
    SubLSymbol STANFORD_NER_LEARN = makeCycSymbol("STANFORD-NER-LEARN");
    SubLSymbol START = makeCycSymbol("START");
    SubLSymbol START1 = makeCycSymbol("START1");
    SubLSymbol START2 = makeCycSymbol("START2");
    SubLSymbol START_INDEX = makeCycSymbol("START-INDEX");
    SubLSymbol STARTS_WITH_ONE_OF_BY_TEST = makeCycSymbol("STARTS-WITH-ONE-OF-BY-TEST");
    SubLSymbol START_TAG = makeCycSymbol("START-TAG");
    SubLSymbol START_TIME = makeCycSymbol("START-TIME");
    SubLSymbol STATE = makeCycSymbol("STATE");
    SubLSymbol STATE_CHANGE_LISTENER = makeCycSymbol("STATE-CHANGE-LISTENER");
    SubLSymbol STATE_CHANGE_LISTENER_CLASS = makeCycSymbol("STATE-CHANGE-LISTENER-CLASS");
    SubLSymbol STATE_CHANGE_MESSAGE = makeCycSymbol("STATE-CHANGE-MESSAGE");
    SubLSymbol STATE_ID_STRING = makeCycSymbol("STATE-ID-STRING");
    SubLSymbol STATE_SEQUENCE = makeCycSymbol("STATE-SEQUENCE");
    SubLSymbol STATE_STACK = makeCycSymbol("STATE-STACK");
    SubLSymbol STATE_UNIFIERS = makeCycSymbol("STATE-UNIFIERS");
    SubLSymbol STATS_MANAGER = makeCycSymbol("STATS-MANAGER");
    SubLSymbol STATUS = makeCycSymbol("STATUS");
    SubLSymbol STATUS_IN_CYC = makeCycSymbol("STATUS-IN-CYC");
    SubLSymbol STEP = makeCycSymbol("STEP");
    SubLSymbol STIMULATE = makeCycSymbol("STIMULATE");
    SubLSymbol STIMULATE_ALL_KNOWLEDGE_SOURCES = makeCycSymbol("STIMULATE-ALL-KNOWLEDGE-SOURCES");
    SubLSymbol STIMULATE_ALL_MONITORS = makeCycSymbol("STIMULATE-ALL-MONITORS");
    SubLSymbol STIMULATE_ALL_POSTING_DAEMONS = makeCycSymbol("STIMULATE-ALL-POSTING-DAEMONS");
    SubLSymbol STIMULATE_MESSAGE = makeCycSymbol("STIMULATE-MESSAGE");
    SubLSymbol STIMULATION_COND = makeCycSymbol("STIMULATION-COND");
    SubLSymbol STIMULATION_TYPE = makeCycSymbol("STIMULATION-TYPE");
    SubLSymbol STOP = makeCycSymbol("STOP");
    SubLSymbol STOP_WORDS = makeCycSymbol("STOP-WORDS");
    SubLSymbol STORAGE = makeCycSymbol("STORAGE");
    SubLSymbol STORAGE_SIZE = makeCycSymbol("STORAGE-SIZE");
    SubLSymbol STORE = makeCycSymbol("STORE");
    SubLSymbol STORE_ID_STRING = makeCycSymbol("STORE-ID-STRING");
    SubLSymbol STR = makeCycSymbol("STR");
    SubLSymbol STRATEGEM_P = makeCycSymbol("STRATEGEM-P");
    SubLSymbol STRATEGY = makeCycSymbol("STRATEGY");
    SubLSymbol STREAM = makeCycSymbol("STREAM");
    SubLSymbol STREAMP = makeCycSymbol("STREAMP");
    SubLSymbol STRENGTH = makeCycSymbol("STRENGTH");
    SubLSymbol qSTRING = makeCycSymbol("?STRING");
    SubLSymbol STRING = makeCycSymbol("STRING");
    SubLSymbol STRING1 = makeCycSymbol("STRING1");
    SubLSymbol STRING2 = makeCycSymbol("STRING2");
    SubLSymbol STRING_COMPARE = makeCycSymbol("STRING-COMPARE");
    SubLSymbol STRING_DOWNCASE = makeCycSymbol("STRING-DOWNCASE");
    SubLSymbol STRING_EQUAL = makeCycSymbol("STRING-EQUAL");
    SubLSymbol STRINGIFY_GUIDS = makeCycSymbol("STRINGIFY-GUIDS");
    SubLSymbol STRING_LESSP = makeCycSymbol("STRING-LESSP");
    SubLSymbol STRINGP = makeCycSymbol("STRINGP");
    SubLSymbol STRINGS = makeCycSymbol("STRINGS");
    SubLSymbol qSTRONG = makeCycSymbol("?STRONG");
    SubLSymbol STYLE = makeCycSymbol("STYLE");
    SubLSymbol STYLE_ARGS = makeCycSymbol("STYLE-ARGS");
    SubLSymbol SUBCATEGORIES = makeCycSymbol("SUBCATEGORIES");
    SubLSymbol SUBCLASSP = makeCycSymbol("SUBCLASSP");
    SubLSymbol SUBCYCLIFIER_CYCLIFY = makeCycSymbol("SUBCYCLIFIER-CYCLIFY");
    SubLSymbol SUBCYCLIFIER_POOL = makeCycSymbol("SUBCYCLIFIER-POOL");
    SubLSymbol SUBDRS = makeCycSymbol("SUBDRS");
    SubLSymbol SUBFORMULA = makeCycSymbol("SUBFORMULA");
    SubLSymbol SUBINDEX = makeCycSymbol("SUBINDEX");
    SubLSymbol SUBJ_CYCLS = makeCycSymbol("SUBJ-CYCLS");
    SubLSymbol SUBJECT = makeCycSymbol("SUBJECT");
    SubLSymbol SUBJECT_CONTROLLER_P = makeCycSymbol("SUBJECT-CONTROLLER-P");
    SubLSymbol SUBJECTS = makeCycSymbol("SUBJECTS");
    SubLSymbol SUBJ_VP_CYCLS = makeCycSymbol("SUBJ-VP-CYCLS");
    SubLSymbol qSUB_KS = makeCycSymbol("?SUB-KS");
    SubLSymbol SUBL = makeCycSymbol("SUBL");
    SubLSymbol SUBL_DIRECTIVE_TAG = makeCycSymbol("SUBL-DIRECTIVE-TAG");
    SubLSymbol SUBLIS = makeCycSymbol("SUBLIS");
    SubLSymbol SUB_LIST = makeCycSymbol("SUB-LIST");
    SubLSymbol SUBLOOP_PRIVATE_PAIR = makeCycSymbol("SUBLOOP-PRIVATE-PAIR");
    SubLSymbol SUBLOOP_PRIVATE_PAIR_P = makeCycSymbol("SUBLOOP-PRIVATE-PAIR-P");
    SubLSymbol SUBLOOP_PROCESS = makeCycSymbol("SUBLOOP-PROCESS");
    SubLSymbol SUBLOOP_PROCESS_NAME = makeCycSymbol("SUBLOOP-PROCESS-NAME");
    SubLSymbol SUBPANEL = makeCycSymbol("SUBPANEL");
    SubLSymbol SUB_PANELS = makeCycSymbol("SUB-PANELS");
    SubLSymbol SUBPROTOCOL = makeCycSymbol("SUBPROTOCOL");
    SubLSymbol SUBSET = makeCycSymbol("SUBSET");
    SubLSymbol SUBSETP = makeCycSymbol("SUBSETP");
    SubLSymbol SUBST_BINDINGS = makeCycSymbol("SUBST-BINDINGS");
    SubLSymbol SUBSTITUTE = makeCycSymbol("SUBSTITUTE");
    SubLSymbol SUBSTRING = makeCycSymbol("SUBSTRING");
    SubLSymbol SUBSTRINGq = makeCycSymbol("SUBSTRING?");
    SubLSymbol SUBTREE = makeCycSymbol("SUBTREE");
    SubLSymbol SUBTYPE = makeCycSymbol("SUBTYPE");
    SubLSymbol SUBTYPE_P = makeCycSymbol("SUBTYPE-P");
    SubLSymbol SUBTYPE_RELATION_TREE = makeCycSymbol("SUBTYPE-RELATION-TREE");
    SubLSymbol SUBTYPES = makeCycSymbol("SUBTYPES");
    SubLSymbol SUCCESS = makeCycSymbol("SUCCESS");
    SubLSymbol SUCCESSq = makeCycSymbol("SUCCESS?");
    SubLSymbol SUFFICIENCIES = makeCycSymbol("SUFFICIENCIES");
    SubLSymbol SUFFIX = makeCycSymbol("SUFFIX");
    SubLSymbol SUID = makeCycSymbol("SUID");
    SubLSymbol SUITES = makeCycSymbol("SUITES");
    SubLSymbol SUPER = makeCycSymbol("SUPER");
    SubLSymbol SUPERCATEGORIES = makeCycSymbol("SUPERCATEGORIES");
    SubLSymbol SUPER_CLASS = makeCycSymbol("SUPER-CLASS");
    SubLSymbol SUPER_DRS = makeCycSymbol("SUPER-DRS");
    SubLSymbol SUPERIOR = makeCycSymbol("SUPERIOR");
    SubLSymbol SUPER_KSI_NAME = makeCycSymbol("SUPER-KSI-NAME");
    SubLSymbol SUPER_KS_NAME = makeCycSymbol("SUPER-KS-NAME");
    SubLSymbol SUPERPANEL = makeCycSymbol("SUPERPANEL");
    SubLSymbol SUPER_PANELS = makeCycSymbol("SUPER-PANELS");
    SubLSymbol SUPERTYPE = makeCycSymbol("SUPERTYPE");
    SubLSymbol SUPERTYPES = makeCycSymbol("SUPERTYPES");
    SubLSymbol SUPPORT = makeCycSymbol("SUPPORT");
    SubLSymbol SUPPORT_MT = makeCycSymbol("SUPPORT-MT");
    SubLSymbol SUPPORT_P = makeCycSymbol("SUPPORT-P");
    SubLSymbol SUPPORTS = makeCycSymbol("SUPPORTS");
    SubLSymbol SUPPORT_SENTENCE = makeCycSymbol("SUPPORT-SENTENCE");
    SubLSymbol SUPPORT_TYPE = makeCycSymbol("SUPPORT-TYPE");
    SubLSymbol qSURGICAL_PROCEDURE = makeCycSymbol("?SURGICAL-PROCEDURE");
    SubLSymbol qSURG_PROC = makeCycSymbol("?SURG-PROC");
    SubLSymbol SUSPENDED_PROPOSALS = makeCycSymbol("SUSPENDED-PROPOSALS");
    SubLSymbol SWAP = makeCycSymbol("SWAP");
    SubLSymbol SYMBOL = makeCycSymbol("SYMBOL");
    SubLSymbol SYMBOL_FUNCTION = makeCycSymbol("SYMBOL-FUNCTION");
    SubLSymbol SYMBOLIC_CLASS_NAME = makeCycSymbol("SYMBOLIC-CLASS-NAME");
    SubLSymbol SYMBOLIC_EXPRESSIONS = makeCycSymbol("SYMBOLIC-EXPRESSIONS");
    SubLSymbol SYMBOLIC_REP = makeCycSymbol("SYMBOLIC-REP");
    SubLSymbol SYMBOL_NAME = makeCycSymbol("SYMBOL-NAME");
    SubLSymbol SYMBOLP = makeCycSymbol("SYMBOLP");
    SubLSymbol qSYMPTOM = makeCycSymbol("?SYMPTOM");
    SubLSymbol SYNSET = makeCycSymbol("SYNSET");
    SubLSymbol SYNSETS = makeCycSymbol("SYNSETS");
    SubLSymbol SYSTEM = makeCycSymbol("SYSTEM");
    SubLSymbol TAB = makeCycSymbol("TAB");
    SubLSymbol TABLE = makeCycSymbol("TABLE");
    SubLSymbol TACTIC = makeCycSymbol("TACTIC");
    SubLSymbol TACTIC_P = makeCycSymbol("TACTIC-P");
    SubLSymbol TAG = makeCycSymbol("TAG");
    SubLSymbol TAGGER = makeCycSymbol("TAGGER");
    SubLSymbol TARGET = makeCycSymbol("TARGET");
    SubLSymbol TARGET_BINDING = makeCycSymbol("TARGET-BINDING");
    SubLSymbol TARGET_INSTANCE = makeCycSymbol("TARGET-INSTANCE");
    SubLSymbol TARGET_METHOD = makeCycSymbol("TARGET-METHOD");
    SubLSymbol TARGET_MT = makeCycSymbol("TARGET-MT");
    SubLSymbol TARGET_PANEL = makeCycSymbol("TARGET-PANEL");
    SubLSymbol qTARGET_POSTING = makeCycSymbol("?TARGET-POSTING");
    SubLSymbol TARGET_POSTING = makeCycSymbol("TARGET-POSTING");
    SubLSymbol TARGET_SLOT = makeCycSymbol("TARGET-SLOT");
    SubLSymbol TARGET_TERM = makeCycSymbol("TARGET-TERM");
    SubLSymbol TARGET_TYPE = makeCycSymbol("TARGET-TYPE");
    SubLSymbol TARGET_VAR = makeCycSymbol("TARGET-VAR");
    SubLSymbol TASK = makeCycSymbol("TASK");
    SubLSymbol TASK_LIST = makeCycSymbol("TASK-LIST");
    SubLSymbol TASKLIST = makeCycSymbol("TASKLIST");
    SubLSymbol TASK_MT = makeCycSymbol("TASK-MT");
    SubLSymbol TASKS = makeCycSymbol("TASKS");
    SubLSymbol TASK_STRUC = makeCycSymbol("TASK-STRUC");
    SubLSymbol TASK_STRUCS = makeCycSymbol("TASK-STRUCS");
    SubLSymbol TASK_UNIFIER = makeCycSymbol("TASK-UNIFIER");
    SubLSymbol qTEMPLATE = makeCycSymbol("?TEMPLATE");
    SubLSymbol TEMPLATE = makeCycSymbol("TEMPLATE");
    SubLSymbol TEMPLATE_ACTIVATE_PROPOSALS = makeCycSymbol("TEMPLATE-ACTIVATE-PROPOSALS");
    SubLSymbol TEMPLATE_ACTIVE_PROPOSALS = makeCycSymbol("TEMPLATE-ACTIVE-PROPOSALS");
    SubLSymbol TEMPLATE_AFTER_LINK = makeCycSymbol("TEMPLATE-AFTER-LINK");
    SubLSymbol TEMPLATE_AGENDA = makeCycSymbol("TEMPLATE-AGENDA");
    SubLSymbol TEMPLATE_ALL_ACTIVE_POSTINGS = makeCycSymbol("TEMPLATE-ALL-ACTIVE-POSTINGS");
    SubLSymbol TEMPLATE_ALL_KNOWLEDGE_SOURCES = makeCycSymbol("TEMPLATE-ALL-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_ALL_POSTINGS = makeCycSymbol("TEMPLATE-ALL-POSTINGS");
    SubLSymbol TEMPLATE_APPLICATION = makeCycSymbol("TEMPLATE-APPLICATION");
    SubLSymbol TEMPLATE_BAG_LIST = makeCycSymbol("TEMPLATE-BAG-LIST");
    SubLSymbol TEMPLATE_BASE_PANEL = makeCycSymbol("TEMPLATE-BASE-PANEL");
    SubLSymbol TEMPLATE_BEFORE_LINK = makeCycSymbol("TEMPLATE-BEFORE-LINK");
    SubLSymbol TEMPLATE_BINDING = makeCycSymbol("TEMPLATE-BINDING");
    SubLSymbol TEMPLATE_BLACKBOARD = makeCycSymbol("TEMPLATE-BLACKBOARD");
    SubLSymbol TEMPLATE_COLLECTIONS = makeCycSymbol("TEMPLATE-COLLECTIONS");
    SubLSymbol TEMPLATE_CONTENT = makeCycSymbol("TEMPLATE-CONTENT");
    SubLSymbol TEMPLATE_CONTENTS = makeCycSymbol("TEMPLATE-CONTENTS");
    SubLSymbol TEMPLATE_CONTENTS_POINTER = makeCycSymbol("TEMPLATE-CONTENTS-POINTER");
    SubLSymbol TEMPLATE_CONTENTS_SUBLIST = makeCycSymbol("TEMPLATE-CONTENTS-SUBLIST");
    SubLSymbol TEMPLATE_COUNT = makeCycSymbol("TEMPLATE-COUNT");
    SubLSymbol TEMPLATE_CURRENT_CONS = makeCycSymbol("TEMPLATE-CURRENT-CONS");
    SubLSymbol TEMPLATE_CURRENT_ELEMENT = makeCycSymbol("TEMPLATE-CURRENT-ELEMENT");
    SubLSymbol TEMPLATE_CURRENT_ITEM = makeCycSymbol("TEMPLATE-CURRENT-ITEM");
    SubLSymbol TEMPLATE_CURRENT_LINK = makeCycSymbol("TEMPLATE-CURRENT-LINK");
    SubLSymbol TEMPLATE_CURRENT_PANEL = makeCycSymbol("TEMPLATE-CURRENT-PANEL");
    SubLSymbol TEMPLATE_DAEMON = makeCycSymbol("TEMPLATE-DAEMON");
    SubLSymbol TEMPLATE_DATATYPE = makeCycSymbol("TEMPLATE-DATATYPE");
    SubLSymbol TEMPLATE_DATATYPE_DICTIONARY = makeCycSymbol("TEMPLATE-DATATYPE-DICTIONARY");
    SubLSymbol TEMPLATE_DATATYPES = makeCycSymbol("TEMPLATE-DATATYPES");
    SubLSymbol TEMPLATE_DEFAULT_VALUE = makeCycSymbol("TEMPLATE-DEFAULT-VALUE");
    SubLSymbol TEMPLATE_DICTIONARY = makeCycSymbol("TEMPLATE-DICTIONARY");
    SubLSymbol TEMPLATE_DIRECT_KNOWLEDGE_SOURCES = makeCycSymbol("TEMPLATE-DIRECT-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_ELEMENT = makeCycSymbol("TEMPLATE-ELEMENT");
    SubLSymbol TEMPLATE_END_POINTER = makeCycSymbol("TEMPLATE-END-POINTER");
    SubLSymbol TEMPLATE_ENUMERATOR = makeCycSymbol("TEMPLATE-ENUMERATOR");
    SubLSymbol TEMPLATE_FIRST_LINK = makeCycSymbol("TEMPLATE-FIRST-LINK");
    SubLSymbol TEMPLATE_INDEX = makeCycSymbol("TEMPLATE-INDEX");
    SubLSymbol TEMPLATE_INSTANCE = makeCycSymbol("TEMPLATE-INSTANCE");
    SubLSymbol TEMPLATE_INTERNAL_STORAGE = makeCycSymbol("TEMPLATE-INTERNAL-STORAGE");
    SubLSymbol TEMPLATE_KNOWLEDGE_SOURCE = makeCycSymbol("TEMPLATE-KNOWLEDGE-SOURCE");
    SubLSymbol TEMPLATE_KNOWLEDGE_SOURCES = makeCycSymbol("TEMPLATE-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_KS = makeCycSymbol("TEMPLATE-KS");
    SubLSymbol TEMPLATE_KSB = makeCycSymbol("TEMPLATE-KSB");
    SubLSymbol TEMPLATE_LAST_LINK = makeCycSymbol("TEMPLATE-LAST-LINK");
    SubLSymbol TEMPLATE_LENGTH = makeCycSymbol("TEMPLATE-LENGTH");
    SubLSymbol TEMPLATE_LINK = makeCycSymbol("TEMPLATE-LINK");
    SubLSymbol TEMPLATE_LINKS = makeCycSymbol("TEMPLATE-LINKS");
    SubLSymbol TEMPLATE_LIST = makeCycSymbol("TEMPLATE-LIST");
    SubLSymbol TEMPLATE_LOCK = makeCycSymbol("TEMPLATE-LOCK");
    SubLSymbol TEMPLATE_MATCHES = makeCycSymbol("TEMPLATE-MATCHES");
    SubLSymbol TEMPLATE_MONITORS = makeCycSymbol("TEMPLATE-MONITORS");
    SubLSymbol TEMPLATE_NEW_KNOWLEDGE_SOURCES = makeCycSymbol("TEMPLATE-NEW-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_NEW_LINK = makeCycSymbol("TEMPLATE-NEW-LINK");
    SubLSymbol TEMPLATE_NEW_STORAGE = makeCycSymbol("TEMPLATE-NEW-STORAGE");
    SubLSymbol TEMPLATE_NEXT = makeCycSymbol("TEMPLATE-NEXT");
    SubLSymbol TEMPLATE_NEXT_LINK = makeCycSymbol("TEMPLATE-NEXT-LINK");
    SubLSymbol TEMPLATE_NOT_FINISHED = makeCycSymbol("TEMPLATE-NOT-FINISHED");
    SubLSymbol TEMPLATE_ORD = makeCycSymbol("TEMPLATE-ORD");
    SubLSymbol TEMPLATE_PANEL = makeCycSymbol("TEMPLATE-PANEL");
    SubLSymbol TEMPLATE_PANEL_QUEUE = makeCycSymbol("TEMPLATE-PANEL-QUEUE");
    SubLSymbol TEMPLATE_PANELS = makeCycSymbol("TEMPLATE-PANELS");
    SubLSymbol TEMPLATE_PANEL_TYPE = makeCycSymbol("TEMPLATE-PANEL-TYPE");
    SubLSymbol TEMPLATE_PARENT_LINK = makeCycSymbol("TEMPLATE-PARENT-LINK");
    SubLSymbol TEMPLATE_PARENT_LINKS = makeCycSymbol("TEMPLATE-PARENT-LINKS");
    SubLSymbol TEMPLATE_PARSER = makeCycSymbol("TEMPLATE-PARSER");
    SubLSymbol TEMPLATE_POSTING = makeCycSymbol("TEMPLATE-POSTING");
    SubLSymbol TEMPLATE_POSTING_DAEMONS = makeCycSymbol("TEMPLATE-POSTING-DAEMONS");
    SubLSymbol TEMPLATE_PREVIOUS = makeCycSymbol("TEMPLATE-PREVIOUS");
    SubLSymbol TEMPLATE_PREVIOUS_CONS = makeCycSymbol("TEMPLATE-PREVIOUS-CONS");
    SubLSymbol TEMPLATE_PRIORITIZER = makeCycSymbol("TEMPLATE-PRIORITIZER");
    SubLSymbol TEMPLATE_QUEUE = makeCycSymbol("TEMPLATE-QUEUE");
    SubLSymbol TEMPLATE_RESOLVED_LIST = makeCycSymbol("TEMPLATE-RESOLVED-LIST");
    SubLSymbol TEMPLATE_RESULT = makeCycSymbol("TEMPLATE-RESULT");
    SubLSymbol TEMPLATE_RESULTS = makeCycSymbol("TEMPLATE-RESULTS");
    SubLSymbol TEMPLATE_SECOND_LINK = makeCycSymbol("TEMPLATE-SECOND-LINK");
    SubLSymbol TEMPLATE_STORAGE = makeCycSymbol("TEMPLATE-STORAGE");
    SubLSymbol TEMPLATE_SUBLINKS = makeCycSymbol("TEMPLATE-SUBLINKS");
    SubLSymbol TEMPLATE_SUBLIST = makeCycSymbol("TEMPLATE-SUBLIST");
    SubLSymbol TEMPLATE_SUPER_PANELS = makeCycSymbol("TEMPLATE-SUPER-PANELS");
    SubLSymbol TEMPLATE_SUSPENDED_PROPOSALS = makeCycSymbol("TEMPLATE-SUSPENDED-PROPOSALS");
    SubLSymbol TEMPLATE_TARGET_LINK = makeCycSymbol("TEMPLATE-TARGET-LINK");
    SubLSymbol TEMPLATE_THE_POSTING = makeCycSymbol("TEMPLATE-THE-POSTING");
    SubLSymbol TEMPLATE_TYPES_BAG = makeCycSymbol("TEMPLATE-TYPES-BAG");
    SubLSymbol TEMPLATE_UNLINKED_KNOWLEDGE_SOURCES = makeCycSymbol("TEMPLATE-UNLINKED-KNOWLEDGE-SOURCES");
    SubLSymbol TEMPLATE_VISITED_PANEL = makeCycSymbol("TEMPLATE-VISITED-PANEL");
    SubLSymbol TEMPLATE_VISITED_PANELS = makeCycSymbol("TEMPLATE-VISITED-PANELS");
    SubLSymbol TEMPLATE_VISITOR = makeCycSymbol("TEMPLATE-VISITOR");
    SubLSymbol TEMPORAL_THING = makeCycSymbol("TEMPORAL-THING");
    SubLSymbol TEMPORAL_THING1 = makeCycSymbol("TEMPORAL-THING1");
    SubLSymbol TEMPORAL_THING2 = makeCycSymbol("TEMPORAL-THING2");
    SubLSymbol TEMPORAL_TREE_P = makeCycSymbol("TEMPORAL-TREE-P");
    SubLSymbol qTERM = makeCycSymbol("?TERM");
    SubLSymbol TERM = makeCycSymbol("TERM");
    SubLSymbol TERM1 = makeCycSymbol("TERM1");
    SubLSymbol TERM2 = makeCycSymbol("TERM2");
    SubLSymbol TERM_DESC = makeCycSymbol("TERM-DESC");
    SubLSymbol TERMINATE = makeCycSymbol("TERMINATE");
    SubLSymbol TERM_LABEL = makeCycSymbol("TERM-LABEL");
    SubLSymbol TERM_LEXICON = makeCycSymbol("TERM-LEXICON");
    SubLSymbol TERMS = makeCycSymbol("TERMS");
    SubLSymbol TERN_PRED = makeCycSymbol("TERN-PRED");
    SubLSymbol TERPRI = makeCycSymbol("TERPRI");
    SubLSymbol TEST = makeCycSymbol("TEST");
    SubLSymbol TEST1 = makeCycSymbol("TEST1");
    SubLSymbol TEST2 = makeCycSymbol("TEST2");
    SubLSymbol TEST3 = makeCycSymbol("TEST3");
    SubLSymbol TEST4 = makeCycSymbol("TEST4");
    SubLSymbol TEST5 = makeCycSymbol("TEST5");
    SubLSymbol TEST6 = makeCycSymbol("TEST6");
    SubLSymbol TEST_CASE = makeCycSymbol("TEST-CASE");
    SubLSymbol TEST_CASES = makeCycSymbol("TEST-CASES");
    SubLSymbol TEST_METHOD = makeCycSymbol("TEST-METHOD");
    SubLSymbol TEST_METHODS = makeCycSymbol("TEST-METHODS");
    SubLSymbol TEST_SUITE_P = makeCycSymbol("TEST-SUITE-P");
    SubLSymbol qTEXT = makeCycSymbol("?TEXT");
    SubLSymbol TEXT = makeCycSymbol("TEXT");
    SubLSymbol TEXT_LINES = makeCycSymbol("TEXT-LINES");
    SubLSymbol TEXTRACT_LEMMA_STRING = makeCycSymbol("TEXTRACT-LEMMA-STRING");
    SubLSymbol THE = makeCycSymbol("THE");
    SubLSymbol $THE_CYCLIST$ = makeCycSymbol("*THE-CYCLIST*");
    SubLSymbol qTHE_POSTING = makeCycSymbol("?THE-POSTING");
    SubLSymbol THE_POSTING = makeCycSymbol("THE-POSTING");
    SubLSymbol THESAURUS = makeCycSymbol("THESAURUS");
    SubLSymbol THESAURUS_NAME = makeCycSymbol("THESAURUS-NAME");
    SubLSymbol qTHING = makeCycSymbol("?THING");
    SubLSymbol THIRD = makeCycSymbol("THIRD");
    SubLSymbol THIRD_ELEMENT = makeCycSymbol("THIRD-ELEMENT");
    SubLSymbol THIS_AND_MODS = makeCycSymbol("THIS-AND-MODS");
    SubLSymbol THREAD = makeCycSymbol("THREAD");
    SubLSymbol THRESHOLD1 = makeCycSymbol("THRESHOLD1");
    SubLSymbol THRESHOLD2 = makeCycSymbol("THRESHOLD2");
    SubLSymbol TID = makeCycSymbol("TID");
    SubLSymbol qTIME = makeCycSymbol("?TIME");
    SubLSymbol TIME = makeCycSymbol("TIME");
    SubLSymbol TIME_CUTOFF = makeCycSymbol("TIME-CUTOFF");
    SubLSymbol TIMEOUT = makeCycSymbol("TIMEOUT");
    SubLSymbol TIMEOUTq = makeCycSymbol("TIMEOUT?");
    SubLSymbol TIMESTAMP = makeCycSymbol("TIMESTAMP");
    SubLSymbol TIMINGq = makeCycSymbol("TIMING?");
    SubLSymbol TIP = makeCycSymbol("TIP");
    SubLSymbol qTITLE = makeCycSymbol("?TITLE");
    SubLSymbol TITLE = makeCycSymbol("TITLE");
    SubLSymbol TO = makeCycSymbol("TO");
    SubLSymbol TOKEN = makeCycSymbol("TOKEN");
    SubLSymbol TOKEN_CLASSIFIER = makeCycSymbol("TOKEN-CLASSIFIER");
    SubLSymbol TOKEN_READER = makeCycSymbol("TOKEN-READER");
    SubLSymbol TOKENS = makeCycSymbol("TOKENS");
    SubLSymbol TO_LIST = makeCycSymbol("TO-LIST");
    SubLSymbol TO_NODE = makeCycSymbol("TO-NODE");
    SubLSymbol TOOL = makeCycSymbol("TOOL");
    SubLSymbol qTOPIC = makeCycSymbol("?TOPIC");
    SubLSymbol TOPIC = makeCycSymbol("TOPIC");
    SubLSymbol TO_REVERSED_LIST = makeCycSymbol("TO-REVERSED-LIST");
    SubLSymbol TO_STRING = makeCycSymbol("TO-STRING");
    SubLSymbol TOTAL = makeCycSymbol("TOTAL");
    SubLSymbol TOTAL_COUNT = makeCycSymbol("TOTAL-COUNT");
    SubLSymbol TOTAL_COUNT_AS_WHOLE_NOUN = makeCycSymbol("TOTAL-COUNT-AS-WHOLE-NOUN");
    SubLSymbol TOTAL_NUM = makeCycSymbol("TOTAL-NUM");
    SubLSymbol TP_ENTRY = makeCycSymbol("TP-ENTRY");
    SubLSymbol TRACE_BASIC_METHODS = makeCycSymbol("TRACE-BASIC-METHODS");
    SubLSymbol TRACE_INTERFACE_METHOD = makeCycSymbol("TRACE-INTERFACE-METHOD");
    SubLSymbol TRACE_P = makeCycSymbol("TRACE-P");
    SubLSymbol TRANSACTION_ID = makeCycSymbol("TRANSACTION-ID");
    SubLSymbol TRANSFER_QUEUE = makeCycSymbol("TRANSFER-QUEUE");
    SubLSymbol TRANSFER_SELF = makeCycSymbol("TRANSFER-SELF");
    SubLSymbol TRANSMIT = makeCycSymbol("TRANSMIT");
    SubLSymbol TRANSMIT_STATE_CHANGE = makeCycSymbol("TRANSMIT-STATE-CHANGE");
    SubLSymbol TRANSMIT_STATE_CHANGE_INTERNAL = makeCycSymbol("TRANSMIT-STATE-CHANGE-INTERNAL");
    SubLSymbol TRANS_PRED = makeCycSymbol("TRANS-PRED");
    SubLSymbol TREE = makeCycSymbol("TREE");
    SubLSymbol TREE_KEYWORD_EQ_CLASSES = makeCycSymbol("TREE-KEYWORD-EQ-CLASSES");
    SubLSymbol TRIE = makeCycSymbol("TRIE");
    SubLSymbol TRIE_ENTRY = makeCycSymbol("TRIE-ENTRY");
    SubLSymbol TRIGGER_VALUE_LOWER_BOUND = makeCycSymbol("TRIGGER-VALUE-LOWER-BOUND");
    SubLSymbol TRIGGER_VALUE_UPPER_BOUND = makeCycSymbol("TRIGGER-VALUE-UPPER-BOUND");
    SubLSymbol TRUE = makeCycSymbol("TRUE");
    SubLSymbol TRUTH = makeCycSymbol("TRUTH");
    SubLSymbol TRUTH_P = makeCycSymbol("TRUTH-P");
    SubLSymbol TV = makeCycSymbol("TV");
    SubLSymbol TV_VAR = makeCycSymbol("TV-VAR");
    SubLSymbol qTYPE = makeCycSymbol("?TYPE");
    SubLSymbol TYPE = makeCycSymbol("TYPE");
    SubLSymbol TYPE_DECLARATIONS = makeCycSymbol("TYPE-DECLARATIONS");
    SubLSymbol TYPE_EXPRESSION = makeCycSymbol("TYPE-EXPRESSION");
    SubLSymbol TYPE_GRAPH_DECLS = makeCycSymbol("TYPE-GRAPH-DECLS");
    SubLSymbol TYPE_GRAPH_EXPRESSION = makeCycSymbol("TYPE-GRAPH-EXPRESSION");
    SubLSymbol TYPENAME = makeCycSymbol("TYPENAME");
    SubLSymbol TYPE_NAME_STRING = makeCycSymbol("TYPE-NAME-STRING");
    SubLSymbol qTYPE_OF_THING = makeCycSymbol("?TYPE-OF-THING");
    SubLSymbol TYPES = makeCycSymbol("TYPES");
    SubLSymbol TYPE_STRING = makeCycSymbol("TYPE-STRING");
    SubLSymbol TYPE_STRINGS = makeCycSymbol("TYPE-STRINGS");
    SubLSymbol TYPE_TO_PANEL_CLASS_MAP = makeCycSymbol("TYPE-TO-PANEL-CLASS-MAP");
    SubLSymbol TYPE_TO_PANEL_CLASS_MAP_DECLS = makeCycSymbol("TYPE-TO-PANEL-CLASS-MAP-DECLS");
    SubLSymbol TYPE_TO_POSTING_CLASS_MAP = makeCycSymbol("TYPE-TO-POSTING-CLASS-MAP");
    SubLSymbol TYPICAL = makeCycSymbol("TYPICAL");
    SubLSymbol TYPICAL_INSTANCE = makeCycSymbol("TYPICAL-INSTANCE");
    SubLSymbol TYPICALITY_SUM_BY_COLLECTION = makeCycSymbol("TYPICALITY-SUM-BY-COLLECTION");
    SubLSymbol U = makeCycSymbol("U");
    SubLSymbol UI_AGENDA = makeCycSymbol("UI-AGENDA");
    SubLSymbol UI_ID = makeCycSymbol("UI-ID");
    SubLSymbol UNBOUND_BINDINGS = makeCycSymbol("UNBOUND-BINDINGS");
    SubLSymbol UNCOMPILED_PRECONDITION_PATTERN = makeCycSymbol("UNCOMPILED-PRECONDITION-PATTERN");
    SubLSymbol UNIFICATION_ROBOT = makeCycSymbol("UNIFICATION-ROBOT");
    SubLSymbol UNIFICATION_ROBOT_CLASS = makeCycSymbol("UNIFICATION-ROBOT-CLASS");
    SubLSymbol UNIFICATION_TYPES = makeCycSymbol("UNIFICATION-TYPES");
    SubLSymbol UNIFIER = makeCycSymbol("UNIFIER");
    SubLSymbol UNIFY = makeCycSymbol("UNIFY");
    SubLSymbol UNINSTALL = makeCycSymbol("UNINSTALL");
    SubLSymbol UNION = makeCycSymbol("UNION");
    SubLSymbol UNIQUE_BINDINGS = makeCycSymbol("UNIQUE-BINDINGS");
    SubLSymbol UNIQUE_DATATYPES = makeCycSymbol("UNIQUE-DATATYPES");
    SubLSymbol UNIQUE_ELEMENTS = makeCycSymbol("UNIQUE-ELEMENTS");
    SubLSymbol UNIQUE_LOCAL_BINDINGS = makeCycSymbol("UNIQUE-LOCAL-BINDINGS");
    SubLSymbol UNIT = makeCycSymbol("UNIT");
    SubLSymbol UNIVERSAL_DATE = makeCycSymbol("UNIVERSAL-DATE");
    SubLSymbol UNIVERSAL_DATE_P = makeCycSymbol("UNIVERSAL-DATE-P");
    SubLSymbol UNIVERSAL_SECOND_P = makeCycSymbol("UNIVERSAL-SECOND-P");
    SubLSymbol UNIVERSAL_TIME = makeCycSymbol("UNIVERSAL-TIME");
    SubLSymbol UNIVERSAL_TIME_P = makeCycSymbol("UNIVERSAL-TIME-P");
    SubLSymbol UNLESS_CYBLACK_TYPE_CHECKING_ON = makeCycSymbol("UNLESS-CYBLACK-TYPE-CHECKING-ON");
    SubLSymbol UNMONITOR = makeCycSymbol("UNMONITOR");
    SubLSymbol UNTIL = makeCycSymbol("UNTIL");
    SubLSymbol UPDATE = makeCycSymbol("UPDATE");
    SubLSymbol UPPER_CASE_P = makeCycSymbol("UPPER-CASE-P");
    SubLSymbol URL = makeCycSymbol("URL");
    SubLSymbol USAGE = makeCycSymbol("USAGE");
    SubLSymbol USER = makeCycSymbol("USER");
    SubLSymbol USER_INTERACTION_P = makeCycSymbol("USER-INTERACTION-P");
    SubLSymbol USER_ON_SHUTDOWN = makeCycSymbol("USER-ON-SHUTDOWN");
    SubLSymbol USER_ON_STARTUP = makeCycSymbol("USER-ON-STARTUP");
    SubLSymbol USER_PROFILE_MT = makeCycSymbol("USER-PROFILE-MT");
    SubLSymbol UTTERANCE_PEG = makeCycSymbol("UTTERANCE-PEG");
    SubLSymbol qV = makeCycSymbol("?V");
    SubLSymbol V = makeCycSymbol("V");
    SubLSymbol VAL = makeCycSymbol("VAL");
    SubLSymbol VALID = makeCycSymbol("VALID");
    SubLSymbol VALID_ASSERTION = makeCycSymbol("VALID-ASSERTION");
    SubLSymbol VALID_CONSTANTq = makeCycSymbol("VALID-CONSTANT?");
    SubLSymbol VALID_CONSTANT_NAME_CHAR_P = makeCycSymbol("VALID-CONSTANT-NAME-CHAR-P");
    SubLSymbol VALID_CONSTANT_NAME_P = makeCycSymbol("VALID-CONSTANT-NAME-P");
    SubLSymbol VALID_EXTERNAL_PPH_NL_PREDSq = makeCycSymbol("VALID-EXTERNAL-PPH-NL-PREDS?");
    SubLSymbol VALID_FORTq = makeCycSymbol("VALID-FORT?");
    SubLSymbol VALID_HASH_TEST_P = makeCycSymbol("VALID-HASH-TEST-P");
    SubLSymbol VALID_P = makeCycSymbol("VALID-P");
    SubLSymbol VALID_PPH_DEMERIT_CUTOFF_P = makeCycSymbol("VALID-PPH-DEMERIT-CUTOFF-P");
    SubLSymbol VAL_STACK = makeCycSymbol("VAL-STACK");
    SubLSymbol VAL_TEST = makeCycSymbol("VAL-TEST");
    SubLSymbol qVALUE = makeCycSymbol("?VALUE");
    SubLSymbol VALUE = makeCycSymbol("VALUE");
    SubLSymbol VALUE1 = makeCycSymbol("VALUE1");
    SubLSymbol VALUE2 = makeCycSymbol("VALUE2");
    SubLSymbol VALUE_EXPRESSION_LIST = makeCycSymbol("VALUE-EXPRESSION-LIST");
    SubLSymbol VALUES = makeCycSymbol("VALUES");
    SubLSymbol VALUE_TEST = makeCycSymbol("VALUE-TEST");
    SubLSymbol qVALVE_PROSTHESIS = makeCycSymbol("?VALVE-PROSTHESIS");
    SubLSymbol qVAR = makeCycSymbol("?VAR");
    SubLSymbol VAR = makeCycSymbol("VAR");
    SubLSymbol qVAR0 = makeCycSymbol("?VAR0");
    SubLSymbol qVAR1 = makeCycSymbol("?VAR1");
    SubLSymbol VAR1 = makeCycSymbol("VAR1");
    SubLSymbol qVAR10 = makeCycSymbol("?VAR10");
    SubLSymbol qVAR2 = makeCycSymbol("?VAR2");
    SubLSymbol qVAR3 = makeCycSymbol("?VAR3");
    SubLSymbol qVAR4 = makeCycSymbol("?VAR4");
    SubLSymbol qVAR5 = makeCycSymbol("?VAR5");
    SubLSymbol qVAR6 = makeCycSymbol("?VAR6");
    SubLSymbol qVAR7 = makeCycSymbol("?VAR7");
    SubLSymbol qVAR8 = makeCycSymbol("?VAR8");
    SubLSymbol qVAR9 = makeCycSymbol("?VAR9");
    SubLSymbol VARIABLE = makeCycSymbol("VARIABLE");
    SubLSymbol VARIABLE_MANAGER = makeCycSymbol("VARIABLE-MANAGER");
    SubLSymbol VARIABLE_MAP = makeCycSymbol("VARIABLE-MAP");
    SubLSymbol VARIABLE_NAME = makeCycSymbol("VARIABLE-NAME");
    SubLSymbol VARIABLE_P = makeCycSymbol("VARIABLE-P");
    SubLSymbol VARIABLE_REFERENCE = makeCycSymbol("VARIABLE-REFERENCE");
    SubLSymbol VARIABLES = makeCycSymbol("VARIABLES");
    SubLSymbol VARIANTS = makeCycSymbol("VARIANTS");
    SubLSymbol VAR_MANAGER = makeCycSymbol("VAR-MANAGER");
    SubLSymbol VARS = makeCycSymbol("VARS");
    SubLSymbol VECTOR = makeCycSymbol("VECTOR");
    SubLSymbol VECTORP = makeCycSymbol("VECTORP");
    SubLSymbol VERB = makeCycSymbol("VERB");
    SubLSymbol VERBAL_COMPLEMENT = makeCycSymbol("VERBAL-COMPLEMENT");
    SubLSymbol VERBAL_PHRASE_TREE_P = makeCycSymbol("VERBAL-PHRASE-TREE-P");
    SubLSymbol VERBAL_TREE_P = makeCycSymbol("VERBAL-TREE-P");
    SubLSymbol VERBAL_WORD_P = makeCycSymbol("VERBAL-WORD-P");
    SubLSymbol VERB_LINK_WORD = makeCycSymbol("VERB-LINK-WORD");
    SubLSymbol VERB_LINK_WORD_P = makeCycSymbol("VERB-LINK-WORD-P");
    SubLSymbol VERBOSE = makeCycSymbol("VERBOSE");
    SubLSymbol VERBOSITY = makeCycSymbol("VERBOSITY");
    SubLSymbol VERB_WITH_SUFFIX = makeCycSymbol("VERB-WITH-SUFFIX");
    SubLSymbol VERIFIED = makeCycSymbol("VERIFIED");
    SubLSymbol VERIFY_MESSAGE = makeCycSymbol("VERIFY-MESSAGE");
    SubLSymbol VERSION = makeCycSymbol("VERSION");
    SubLSymbol VIA = makeCycSymbol("VIA");
    SubLSymbol VISIT = makeCycSymbol("VISIT");
    SubLSymbol VP = makeCycSymbol("VP");
    SubLSymbol VP_COORDINATE_PHRASE_P = makeCycSymbol("VP-COORDINATE-PHRASE-P");
    SubLSymbol VP_CYCLS = makeCycSymbol("VP-CYCLS");
    SubLSymbol qW = makeCycSymbol("?W");
    SubLSymbol WAITING_ON_LINK_CALLBACK = makeCycSymbol("WAITING-ON-LINK-CALLBACK");
    SubLSymbol WARN = makeCycSymbol("WARN");
    SubLSymbol WARNING = makeCycSymbol("WARNING");
    SubLSymbol WEIGHT = makeCycSymbol("WEIGHT");
    SubLSymbol WEIGHT_SUMMANDS_BY_SELECTIVENESSq = makeCycSymbol("WEIGHT-SUMMANDS-BY-SELECTIVENESS?");
    SubLSymbol WFF_CHECKq = makeCycSymbol("WFF-CHECK?");
    SubLSymbol qWHAT = makeCycSymbol("?WHAT");
    SubLSymbol WHEN = makeCycSymbol("WHEN");
    SubLSymbol WHEN_CYBLACK_TYPE_CHECKING_ON = makeCycSymbol("WHEN-CYBLACK-TYPE-CHECKING-ON");
    SubLSymbol WHEN_VERBOSE = makeCycSymbol("WHEN-VERBOSE");
    SubLSymbol qWHERE = makeCycSymbol("?WHERE");
    SubLSymbol WHERE = makeCycSymbol("WHERE");
    SubLSymbol WHICH_PLANS = makeCycSymbol("WHICH-PLANS");
    SubLSymbol WHILE = makeCycSymbol("WHILE");
    SubLSymbol WHITESPACEP = makeCycSymbol("WHITESPACEP");
    SubLSymbol qWHO = makeCycSymbol("?WHO");
    SubLSymbol WHOLE = makeCycSymbol("WHOLE");
    SubLSymbol WHOLE_NOUN_STRING = makeCycSymbol("WHOLE-NOUN-STRING");
    SubLSymbol qWHOLE_TYPE = makeCycSymbol("?WHOLE-TYPE");
    SubLSymbol WH_QUESTION = makeCycSymbol("WH-QUESTION");
    SubLSymbol WH_TREE_P = makeCycSymbol("WH-TREE-P");
    SubLSymbol WIDTH = makeCycSymbol("WIDTH");
    SubLSymbol WITH_ALL_MTS = makeCycSymbol("WITH-ALL-MTS");
    SubLSymbol WITH_CLASS = makeCycSymbol("WITH-CLASS");
    SubLSymbol WITH_INFERENCE_MT_RELEVANCE = makeCycSymbol("WITH-INFERENCE-MT-RELEVANCE");
    SubLSymbol WITH_LOCK_HELD = makeCycSymbol("WITH-LOCK-HELD");
    SubLSymbol WITH_MEMOIZATION_STATE = makeCycSymbol("WITH-MEMOIZATION-STATE");
    SubLSymbol WITH_MT = makeCycSymbol("WITH-MT");
    SubLSymbol WITH_MT_LIST = makeCycSymbol("WITH-MT-LIST");
    SubLSymbol WITHOUT_DUPLICATE_CYCLIFICATION = makeCycSymbol("WITHOUT-DUPLICATE-CYCLIFICATION");
    SubLSymbol WITHOUT_RECURSIVE_CYCLIFICATION = makeCycSymbol("WITHOUT-RECURSIVE-CYCLIFICATION");
    SubLSymbol WITH_PRIVATE_BINARY_FILE = makeCycSymbol("WITH-PRIVATE-BINARY-FILE");
    SubLSymbol WITH_PRIVATE_TEXT_FILE = makeCycSymbol("WITH-PRIVATE-TEXT-FILE");
    SubLSymbol WITH_TCP_CONNECTION = makeCycSymbol("WITH-TCP-CONNECTION");
    SubLSymbol WITH_TEXT_FILE = makeCycSymbol("WITH-TEXT-FILE");
    SubLSymbol WITH_TIMEOUT = makeCycSymbol("WITH-TIMEOUT");
    SubLSymbol WORD = makeCycSymbol("WORD");
    SubLSymbol WORDFORM = makeCycSymbol("WORDFORM");
    SubLSymbol WORD_LISTS = makeCycSymbol("WORD-LISTS");
    SubLSymbol WORD_POS_PRED = makeCycSymbol("WORD-POS-PRED");
    SubLSymbol WORDS = makeCycSymbol("WORDS");
    SubLSymbol WORD_STRING = makeCycSymbol("WORD-STRING");
    SubLSymbol WORD_TREE_P = makeCycSymbol("WORD-TREE-P");
    SubLSymbol WORD_TYPE = makeCycSymbol("WORD-TYPE");
    SubLSymbol WORD_UNIT = makeCycSymbol("WORD-UNIT");
    SubLSymbol WORKINGq = makeCycSymbol("WORKING?");
    SubLSymbol WORLD_STATE = makeCycSymbol("WORLD-STATE");
    SubLSymbol WRITE_CHAR = makeCycSymbol("WRITE-CHAR");
    SubLSymbol WRITE_LINE = makeCycSymbol("WRITE-LINE");
    SubLSymbol WRITE_STRING = makeCycSymbol("WRITE-STRING");
    SubLSymbol WRITE_TO_STRING = makeCycSymbol("WRITE-TO-STRING");
    SubLSymbol qWU = makeCycSymbol("?WU");
    SubLSymbol WU = makeCycSymbol("WU");
    SubLSymbol qX = makeCycSymbol("?X");
    SubLSymbol X = makeCycSymbol("X");
    SubLSymbol XML = makeCycSymbol("XML");
    SubLSymbol XML_PRINT = makeCycSymbol("XML-PRINT");
    SubLSymbol $XML_STREAM$ = makeCycSymbol("*XML-STREAM*");
    SubLSymbol XML_TAG = makeCycSymbol("XML-TAG");
    SubLSymbol XML_WRITER = makeCycSymbol("XML-WRITER");
    SubLSymbol qY = makeCycSymbol("?Y");
    SubLSymbol Y = makeCycSymbol("Y");
    SubLSymbol YEAR = makeCycSymbol("YEAR");
    SubLSymbol YIELD = makeCycSymbol("YIELD");
    SubLSymbol qZ = makeCycSymbol("?Z");
    SubLSymbol ZEROP = makeCycSymbol("ZEROP");
    Object __EXIT_MAKE_COMMON_CYC_SYMBOLS__ = SubLPackage.setCurrentPackage(__init_package__);

    /**
     * TODO Describe the purpose of this method.
     * @param string3
     * @return
     */
    static SubLSymbol makeCycSymbol(String sn) {
	SubLPackage initSubLpackage = SubLPackage.getCurrentPackage();
	try {
	    SubLPackage.setCurrentPackage("CYC");
	    SubLSymbol s = makeSymbol(sn);
	    return s;
	} finally {
	    SubLPackage.setCurrentPackage(initSubLpackage);
	}
    }
}
