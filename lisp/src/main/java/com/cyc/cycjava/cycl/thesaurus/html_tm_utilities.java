/**
 * Copyright (c) 1995 - 2019 Cycorp, Inc.  All rights reserved.
 */
package com.cyc.cycjava.cycl.thesaurus;


import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters.CHAR_greater;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters.CHAR_hyphen;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters.CHAR_newline;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters.CHAR_quotation;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters.CHAR_space;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow.append;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow.cons;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow.list;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow.nth;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Dynamic.bind;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Dynamic.currentBinding;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Dynamic.rebind;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Equality.eql;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Equality.equal;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Functions.funcall;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Hashtables.gethash;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Hashtables.hash_table_count;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers.add;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers.integerDivide;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers.max;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers.min;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers.numE;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers.numL;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers.subtract;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.PrintLow.format;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences.cconcatenate;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences.elt;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences.find;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences.find_if;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences.length;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences.remove;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences.remove_duplicates;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences.remove_if;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences.reverse;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols.symbol_function;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Threads.$is_thread_performing_cleanupP$;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Threads.sleep;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Time.get_universal_time;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Types.processp;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values.values;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Vectors.aref;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Vectors.make_vector;
import static com.cyc.tool.subl.jrtl.nativeCode.subLisp.Vectors.set_aref;
import static com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory.makeBoolean;
import static com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory.makeInteger;
import static com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory.makeKeyword;
import static com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory.makeString;
import static com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory.makeSymbol;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.cdestructuring_bind.cdestructuring_bind_error;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.cdestructuring_bind.destructuring_bind_must_consp;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high.assoc;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high.cadr;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high.copy_list;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high.second;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high.set_difference;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high.seventh;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high.sixth;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high.third;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.reader.read_from_string_ignoring_errors;
import static com.cyc.tool.subl.jrtl.translatedCode.sublisp.streams_high.close;
import static com.cyc.tool.subl.util.SubLFiles.declareFunction;
import static com.cyc.tool.subl.util.SubLFiles.defparameter;

import com.cyc.cycjava.cycl.V02;
import com.cyc.cycjava.cycl.bookkeeping_store;
import com.cyc.cycjava.cycl.cb_utilities;
import com.cyc.cycjava.cycl.constant_handles;
import com.cyc.cycjava.cycl.constants_high;
import com.cyc.cycjava.cycl.control_vars;
import com.cyc.cycjava.cycl.file_utilities;
import com.cyc.cycjava.cycl.forts;
import com.cyc.cycjava.cycl.hash_table_utilities;
import com.cyc.cycjava.cycl.html_macros;
import com.cyc.cycjava.cycl.html_utilities;
import com.cyc.cycjava.cycl.kb_indexing;
import com.cyc.cycjava.cycl.list_utilities;
import com.cyc.cycjava.cycl.numeric_date_utilities;
import com.cyc.cycjava.cycl.operation_communication;
import com.cyc.cycjava.cycl.operation_queues;
import com.cyc.cycjava.cycl.pph_methods_formulas;
import com.cyc.cycjava.cycl.process_utilities;
import com.cyc.cycjava.cycl.string_utilities;
import com.cyc.cycjava.cycl.subl_promotions;
import com.cyc.cycjava.cycl.system_info;
import com.cyc.cycjava.cycl.system_parameters;
import com.cyc.cycjava.cycl.transcript_utilities;
import com.cyc.cycjava.cycl.utilities_macros;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Errors;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Filesys;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Mapping;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sort;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.StreamsLow;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Strings;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLString;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLInteger;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.compatibility;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;


/**
 * Copyright (c) 1995 - 2019 Cycorp, Inc.  All rights reserved.
 *  module:      HTML-TM-UTILITIES
 *  source file: /cyc/top/cycl/thesaurus/html-tm-utilities.lisp
 *  created:     2019/07/03 17:38:30
 */
public final class html_tm_utilities extends SubLTranslatedFile implements V02 {
    // // Constructor
    private html_tm_utilities() {
    }

    public static final SubLFile me = new html_tm_utilities();

    public static final String myName = "com.cyc.cycjava.cycl.thesaurus.html_tm_utilities";

    // // Definitions
    /**
     * The main thesaurus utilities page
     */
    public static final SubLObject tm_utilities_page(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Thesaurus_Utilities);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_1 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_2 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_3 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_3, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_2, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Thesaurus_Utilities);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Thesaurus_Utilities);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $str_alt1$advanced_user)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt3$tm_utilities_page);
                                    html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                    html_utilities.html_markup(html_macros.$html_unordered_list_head$.getGlobalValue());
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_4 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            if (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $str_alt1$advanced_user)) {
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_5 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                        html_utilities.html_princ($str_alt5$tm_output_thesaurus);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_6 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_princ($$$Output_Thesaurus);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_6, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                        html_utilities.html_br();
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_5, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                            }
                                            if (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $str_alt1$advanced_user)) {
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_7 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                        html_utilities.html_princ($str_alt7$tm_output_filter_page);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_8 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_princ($$$Filters);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_8, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                        html_utilities.html_br();
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_7, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                            }
                                            if ((NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)) && (NIL != tm_internals.editing_allowedP())) {
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_9 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                        html_utilities.html_princ($str_alt10$tm_load_thesaurus);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_10 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_princ($$$Load_Thesaurus);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_10, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_9, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_11 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                        html_utilities.html_princ($str_alt12$tm_update_load_page);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_12 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_princ($$$Begin_Update_Load_Analysis);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_12, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_11, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                if (NIL != tm_io.tm_update_load_state()) {
                                                    html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_13 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_princ($$$Decide_Update_Load_Changes);
                                                            html_utilities.html_markup(html_macros.$html_unordered_list_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_14 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    {
                                                                        SubLObject cdolist_list_var = tm_io.tm_update_load_state();
                                                                        SubLObject load_state = NIL;
                                                                        for (load_state = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , load_state = cdolist_list_var.first()) {
                                                                            html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_15 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    html_utilities.html_princ($str_alt15$For_thesaurus__);
                                                                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt16$tm_decide_update_load_changes__A, cb_utilities.cb_fort_identifier(load_state.first()));
                                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                    {
                                                                                        SubLObject _prev_bind_0_16 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                        try {
                                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                                            html_utilities.html_princ(tm_internals.thesaurus_name(load_state.first()));
                                                                                        } finally {
                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_16, thread);
                                                                                        }
                                                                                    }
                                                                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_15, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                                        }
                                                                    }
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_14, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_unordered_list_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_13, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                }
                                            }
                                            if (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)) {
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_17 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_thesaurus.tm_link($STOPLIST_MANAGER, $$$Stoplist_Manager, UNPROVIDED, UNPROVIDED);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_17, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                            }
                                            if (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)) {
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_18 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                        html_utilities.html_princ($str_alt19$tm_memory_snapshot);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_19 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_princ($$$Quick_State_Snapshot);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_19, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_18, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                            }
                                            if (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)) {
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_20 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        {
                                                            SubLObject text = format(NIL, $str_alt21$Backup__a_aInfo_to_File, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) (tm_control_vars.$application_name$.getDynamicValue(thread))) : $str_alt22$, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) ($str_alt23$_)) : $str_alt22$);
                                                            SubLObject active_backup = tm_thinking.tm_active_thinking_tasks_of_type($BACKUP_THESAURI);
                                                            if (NIL != active_backup) {
                                                                html_utilities.html_princ(text);
                                                                html_utilities.html_princ($str_alt25$__in_progress);
                                                                if (tm_datastructures.$tm_user$.getDynamicValue(thread).equalp(tm_thinking.tm_thinking_user(active_backup))) {
                                                                    html_utilities.html_princ($str_alt26$___see_Status_page_);
                                                                } else {
                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt27$__by__A_, tm_thinking.tm_thinking_user(active_backup));
                                                                }
                                                            } else {
                                                                html_thesaurus.tm_link($DUMP_THESAURUS, text, UNPROVIDED, UNPROVIDED);
                                                            }
                                                        }
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_20, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                            }
                                            if (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $str_alt1$advanced_user)) {
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_21 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_princ($$$Reports);
                                                        html_utilities.html_markup(html_macros.$html_unordered_list_head$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_22 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                if (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $str_alt1$advanced_user)) {
                                                                    html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_23 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                                            html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                                            html_utilities.html_princ($str_alt30$tm_list_reports);
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_24 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    html_utilities.html_princ($$$List_Reports);
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_24, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_23, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                                }
                                                                if (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)) {
                                                                    html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_25 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            html_utilities.html_princ($$$Generate_Reports);
                                                                            html_utilities.html_markup(html_macros.$html_unordered_list_head$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_26 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    {
                                                                                        SubLObject thinking = tm_thinking.tm_active_thinking_tasks_of_type($GENERATE_THESAURI_REPORT).first();
                                                                                        html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                        {
                                                                                            SubLObject _prev_bind_0_27 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                if (NIL != thinking) {
                                                                                                    html_utilities.html_princ($str_alt34$Generate_Thesaurus_Statistics__in);
                                                                                                    if (tm_datastructures.$tm_user$.getDynamicValue(thread).equalp(tm_thinking.tm_thinking_user(thinking))) {
                                                                                                        html_utilities.html_princ($str_alt26$___see_Status_page_);
                                                                                                    } else {
                                                                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt27$__by__A_, tm_thinking.tm_thinking_user(thinking));
                                                                                                    }
                                                                                                } else {
                                                                                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                                                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                                                                    html_utilities.html_princ($str_alt35$tm_generate_thesauri_report);
                                                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                    {
                                                                                                        SubLObject _prev_bind_0_28 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                        try {
                                                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                                                            html_utilities.html_princ($$$Generate_Thesaurus_Statistics);
                                                                                                        } finally {
                                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_28, thread);
                                                                                                        }
                                                                                                    }
                                                                                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                                                                }
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_27, thread);
                                                                                            }
                                                                                        }
                                                                                        html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                                                        html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                        {
                                                                                            SubLObject _prev_bind_0_29 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                                                                html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                                                                html_utilities.html_princ($str_alt37$tm_generate_user_report);
                                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_30 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                                        html_utilities.html_princ($$$Generate_User_Statistics);
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_30, thread);
                                                                                                    }
                                                                                                }
                                                                                                html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_29, thread);
                                                                                            }
                                                                                        }
                                                                                        html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                                                        html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                        {
                                                                                            SubLObject _prev_bind_0_31 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                                                                html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt39$tm_generate_ops_report);
                                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_32 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Generate_Operations_Report);
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_32, thread);
                                                                                                    }
                                                                                                }
                                                                                                html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_31, thread);
                                                                                            }
                                                                                        }
                                                                                        html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                                                        html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                        {
                                                                                            SubLObject _prev_bind_0_33 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                                                                html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt41$tm_generate_tmap_report);
                                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_34 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Generate_TMAP_Report);
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_34, thread);
                                                                                                    }
                                                                                                }
                                                                                                html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_33, thread);
                                                                                            }
                                                                                        }
                                                                                        html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                                                    }
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_26, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_unordered_list_tail$.getGlobalValue());
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_25, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                                }
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_22, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_unordered_list_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_21, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                            }
                                            if (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)) {
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_35 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                        html_utilities.html_princ($str_alt43$tm_manage_users);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_36 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_princ($$$Manage_Users);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_36, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_35, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_37 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                        html_utilities.html_princ($str_alt45$tm_manage_apps);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_38 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_princ($$$Manage_Applications);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_38, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_37, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_39 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                        html_utilities.html_princ($str_alt47$tm_manage_tmap);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_40 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_princ($$$Manage_Access_Protocol_Server);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_40, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_39, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_41 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                        html_utilities.html_princ($str_alt49$tm_system_info);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_42 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_princ($$$System_Information);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_42, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_41, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                            }
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_4, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_unordered_list_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_1, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_manage_stoplists(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Stoplist_Manager);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_43 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_44 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_45 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_45, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_44, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Stoplist_Manager);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Stoplist_Manager);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt52$tm_manage_stoplists);
                                    tm_stoplist_manager_guts();
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_43, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_stoplist_manager_guts() {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
            if (NIL != tm_internals.editing_allowedP()) {
                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                if (true) {
                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    html_utilities.html_markup(ZERO_INTEGER);
                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                }
                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_46 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                    html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_47 = html_macros.$html_safe_print$.currentBinding(thread);
                                    SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                    SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_macros.$within_html_form$.bind(T, thread);
                                        html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                        html_utilities.html_hidden_input($str_alt54$tm_handle_add_stoplist_word, T, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_48 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_princ($str_alt55$Add_new_stoplist_word__);
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_48, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_49 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_text_input($str_alt56$add_word, NIL, TWENTY_INTEGER);
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_49, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_50 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_submit_input($$$Add, UNPROVIDED, UNPROVIDED);
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_50, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                        html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                    } finally {
                                        html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                        html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_47, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_46, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_51 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                    html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_52 = html_macros.$html_safe_print$.currentBinding(thread);
                                    SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                    SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_macros.$within_html_form$.bind(T, thread);
                                        html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                        html_utilities.html_hidden_input($str_alt58$tm_handle_remove_stoplist_word, T, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_53 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_princ($str_alt59$Remove_word_from_stoplist__);
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_53, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_54 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_text_input($str_alt60$remove_word, NIL, TWENTY_INTEGER);
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_54, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_55 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_submit_input($$$Remove, UNPROVIDED, UNPROVIDED);
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_55, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                        html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                    } finally {
                                        html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                        html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_52, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_51, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
            }
            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
            html_utilities.html_princ($str_alt62$Current_Stoplist_);
            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_blockquote_head$.getGlobalValue());
            {
                SubLObject cdolist_list_var = tm_datastructures.tm_stoplist_words();
                SubLObject word = NIL;
                for (word = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , word = cdolist_list_var.first()) {
                    html_utilities.html_br();
                    html_utilities.html_princ(word);
                }
            }
            html_utilities.html_markup(html_macros.$html_blockquote_tail$.getGlobalValue());
            return NIL;
        }
    }

    public static final SubLObject tm_handle_add_stoplist_word(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject word = html_utilities.html_extract_input($str_alt56$add_word, args);
                if (word.isString()) {
                    word = string_utilities.trim_whitespace(word);
                    if (NIL != find_if(symbol_function(WHITESPACEP), word, UNPROVIDED, UNPROVIDED, UNPROVIDED)) {
                        html_thesaurus.tm_error($str_alt64$Invalid_stoplist_word___s_contain, word, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                    } else {
                        {
                            SubLObject op = tm_datastructures.get_tm_op();
                            SubLObject ops = NIL;
                            SubLObject op_56 = op;
                            tm_datastructures._csetf_tm_op_opcode(op_56, $ADD);
                            tm_datastructures._csetf_tm_op_relation(op_56, $$tmStoplistWord);
                            tm_datastructures._csetf_tm_op_inverseP(op_56, NIL);
                            tm_datastructures._csetf_tm_op_args(op_56, list(word));
                            tm_datastructures._csetf_tm_op_thesaurus(op_56, tm_datastructures.$tm_mt$.getGlobalValue());
                            tm_datastructures._csetf_tm_op_status(op_56, NIL);
                            tm_datastructures._csetf_tm_op_verifyP(op_56, NIL);
                            tm_datastructures._csetf_tm_op_hiddenP(op_56, T);
                            tm_datastructures._csetf_tm_op_description(op_56, NIL);
                            tm_datastructures._csetf_tm_op_description_args(op_56, NIL);
                            if (NIL.isString()) {
                                html_tm_editing.set_op_english(op_56, NIL);
                            } else {
                                html_tm_editing.set_op_english(op_56, UNPROVIDED);
                            }
                            ops = cons(op, ops);
                            thread.resetMultipleValues();
                            {
                                SubLObject bad = tm_internals.check_operations(ops);
                                SubLObject good = thread.secondMultipleValue();
                                SubLObject verifyP = thread.thirdMultipleValue();
                                thread.resetMultipleValues();
                                if (NIL == good) {
                                    html_tm_editing.html_show_bad_ops_page(bad);
                                } else {
                                    html_tm_editing.do_good_ops_results(bad, good, symbol_function(TM_STOPLIST_MANAGER_GUTS), NIL, $$$Add_Stoplist_Word, UNPROVIDED);
                                }
                            }
                        }
                    }
                } else {
                    html_thesaurus.tm_error($str_alt69$Invalid_stoplist_word___s_is_not_, word, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_remove_stoplist_word(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject word = html_utilities.html_extract_input($str_alt60$remove_word, args);
                if (word.isString()) {
                    {
                        SubLObject op = tm_datastructures.get_tm_op();
                        SubLObject ops = NIL;
                        word = string_utilities.trim_whitespace(word);
                        {
                            SubLObject op_57 = op;
                            tm_datastructures._csetf_tm_op_opcode(op_57, $DELETE);
                            tm_datastructures._csetf_tm_op_relation(op_57, $$tmStoplistWord);
                            tm_datastructures._csetf_tm_op_inverseP(op_57, NIL);
                            tm_datastructures._csetf_tm_op_args(op_57, list(word));
                            tm_datastructures._csetf_tm_op_thesaurus(op_57, tm_datastructures.$tm_mt$.getGlobalValue());
                            tm_datastructures._csetf_tm_op_status(op_57, NIL);
                            tm_datastructures._csetf_tm_op_verifyP(op_57, NIL);
                            tm_datastructures._csetf_tm_op_hiddenP(op_57, T);
                            tm_datastructures._csetf_tm_op_description(op_57, NIL);
                            tm_datastructures._csetf_tm_op_description_args(op_57, NIL);
                            if (NIL.isString()) {
                                html_tm_editing.set_op_english(op_57, NIL);
                            } else {
                                html_tm_editing.set_op_english(op_57, UNPROVIDED);
                            }
                        }
                        ops = cons(op, ops);
                        thread.resetMultipleValues();
                        {
                            SubLObject bad = tm_internals.check_operations(ops);
                            SubLObject good = thread.secondMultipleValue();
                            SubLObject verifyP = thread.thirdMultipleValue();
                            thread.resetMultipleValues();
                            if (NIL == good) {
                                html_tm_editing.html_show_bad_ops_page(bad);
                            } else {
                                html_tm_editing.do_good_ops_results(bad, good, symbol_function(TM_STOPLIST_MANAGER_GUTS), NIL, $$$Delete_Stoplist_Word, UNPROVIDED);
                            }
                        }
                    }
                } else {
                    html_thesaurus.tm_error($str_alt73$Can_t_remove__s_from_the_stoplist, word, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_memory_snapshot(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Quick_State_Snapshot);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_58 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_59 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_60 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_60, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_59, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Quick_State_Snapshot);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Quick_State_Snapshot);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt19$tm_memory_snapshot);
                                    html_utilities.html_princ($str_alt75$This_will_take_15_minutes_to_a_fe);
                                    html_utilities.html_princ(cconcatenate($str_alt76$During_the_time_the_snapshot_is_b, new SubLObject[]{ tm_control_vars.$tool_name$.getDynamicValue(thread), $str_alt77$_will_not_respond_ }));
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_61 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt78$tm_handle_memory_snapshot, T, UNPROVIDED);
                                            html_utilities.html_submit_input($$$Save, UNPROVIDED, UNPROVIDED);
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_61, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_58, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_memory_snapshot(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject savename = tm_io.tm_determine_incremental_save_filename();
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($str_alt81$Saving_State_Snapshot_in_Foregrou);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_62 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_63 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_64 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_64, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_63, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($str_alt81$Saving_State_Snapshot_in_Foregrou);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($str_alt81$Saving_State_Snapshot_in_Foregrou);
                                html_thesaurus.thesaurus_heading($str_alt78$tm_handle_memory_snapshot);
                                html_utilities.html_princ($str_alt82$This_operation_is_not_supported_);
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_62, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_flush();
                tm_io.tm_save_incremental_world(savename, UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_generate_thesauri_report_in_thinker() {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject pathname = tm_thesaurus_report_filename();
                SubLObject thinking = tm_thinking.tm_new_thinking(tm_datastructures.$tm_user$.getDynamicValue(thread), $GENERATE_THESAURI_REPORT);
                SubLObject thread_65 = tm_thinking.tm_thinking_start(thinking, TM_WRITE_THESAURI_REPORT, list(pathname));
                return thread_65;
            }
        }
    }

    public static final SubLObject tm_thesaurus_report_filename() {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            thread.resetMultipleValues();
            {
                SubLObject day = numeric_date_utilities.decode_universal_date(numeric_date_utilities.get_universal_date(UNPROVIDED, UNPROVIDED));
                SubLObject month = thread.secondMultipleValue();
                SubLObject year = thread.thirdMultipleValue();
                thread.resetMultipleValues();
                {
                    SubLObject filename = format(NIL, $str_alt85$thesauri__a__a__a_stats, new SubLObject[]{ year, month, day });
                    return file_utilities.relative_filename(tm_datastructures.$tm_report_directory$.getGlobalValue(), filename, UNPROVIDED);
                }
            }
        }
    }

    public static final SubLObject tm_write_thesaurus_report_to_stream(SubLObject thesaurus, SubLObject stream) {
        {
            SubLObject thesaurus_name = tm_internals.thesaurus_name(thesaurus);
            SubLObject default_display_filter = tm_internals.tm_default_display_filter(thesaurus);
            SubLObject default_output_filter = tm_internals.tm_default_output_filter(thesaurus);
            SubLObject abbreviation = tm_internals.thesaurus_abbreviation(thesaurus);
            SubLObject creator = bookkeeping_store.creator(thesaurus, UNPROVIDED);
            SubLObject creation_time = bookkeeping_store.creation_time(thesaurus, UNPROVIDED);
            SubLObject load_date = tm_internals.thesaurus_load_date(thesaurus);
            SubLObject loader = tm_internals.thesaurus_loader(thesaurus);
            SubLObject empty_string = $str_alt22$;
            SubLObject tot_pt_count = format(NIL, $str_alt86$_A, tm_internals.thesaurus_preferred_term_count(thesaurus));
            SubLObject pt_count = list(tot_pt_count, NIL != default_display_filter ? ((SubLObject) (tot_pt_count)) : empty_string, NIL != default_output_filter ? ((SubLObject) (tot_pt_count)) : empty_string);
            SubLObject uf_count = list(format(NIL, $str_alt86$_A, tm_internals.thesaurus_use_for_count(thesaurus, UNPROVIDED)), NIL != default_display_filter ? ((SubLObject) (format(NIL, $str_alt86$_A, tm_internals.thesaurus_use_for_count(thesaurus, default_display_filter)))) : empty_string, NIL != default_output_filter ? ((SubLObject) (format(NIL, $str_alt86$_A, tm_internals.thesaurus_use_for_count(thesaurus, default_output_filter)))) : empty_string);
            SubLObject sn_count = list(format(NIL, $str_alt86$_A, tm_internals.thesaurus_scope_note_count(thesaurus, UNPROVIDED)), NIL != default_display_filter ? ((SubLObject) (format(NIL, $str_alt86$_A, tm_internals.thesaurus_scope_note_count(thesaurus, default_display_filter)))) : empty_string, NIL != default_output_filter ? ((SubLObject) (format(NIL, $str_alt86$_A, tm_internals.thesaurus_scope_note_count(thesaurus, default_output_filter)))) : empty_string);
            SubLObject rt_count = list(format(NIL, $str_alt86$_A, tm_internals.thesaurus_related_term_count(thesaurus, UNPROVIDED)), NIL != default_display_filter ? ((SubLObject) (format(NIL, $str_alt86$_A, tm_internals.thesaurus_related_term_count(thesaurus, default_display_filter)))) : empty_string, NIL != default_output_filter ? ((SubLObject) (format(NIL, $str_alt86$_A, tm_internals.thesaurus_related_term_count(thesaurus, default_output_filter)))) : empty_string);
            SubLObject tot_as_count = format(NIL, $str_alt86$_A, tm_internals.tm_thesaurus_assertion_count(thesaurus));
            SubLObject as_count = list(tot_as_count, NIL != default_display_filter ? ((SubLObject) (tot_as_count)) : empty_string, NIL != default_output_filter ? ((SubLObject) (tot_as_count)) : empty_string);
            SubLObject users = tm_internals.all_users();
            SubLObject lexical_relations_to_omit = $list_alt87;
            SubLObject lex_count = list(format(NIL, $str_alt86$_A, tm_internals.tm_thesaurus_lexical_assertion_count(thesaurus, lexical_relations_to_omit, UNPROVIDED)), NIL != default_display_filter ? ((SubLObject) (format(NIL, $str_alt86$_A, tm_internals.tm_thesaurus_lexical_assertion_count(thesaurus, lexical_relations_to_omit, default_display_filter)))) : empty_string, NIL != default_output_filter ? ((SubLObject) (format(NIL, $str_alt86$_A, tm_internals.tm_thesaurus_lexical_assertion_count(thesaurus, lexical_relations_to_omit, default_output_filter)))) : empty_string);
            SubLObject num_head_labels = THREE_INTEGER;
            SubLObject head_label_vector = make_vector(num_head_labels, UNPROVIDED);
            SubLObject head_data_vector = make_vector(num_head_labels, UNPROVIDED);
            SubLObject head_fill_vector = make_vector(num_head_labels, UNPROVIDED);
            SubLObject thesaurus_label_index = ZERO_INTEGER;
            SubLObject default_display_index = ONE_INTEGER;
            SubLObject default_output_index = TWO_INTEGER;
            SubLObject num_labels = SIX_INTEGER;
            SubLObject label_vector = make_vector(num_labels, UNPROVIDED);
            SubLObject fill_vector = make_vector(num_labels, UNPROVIDED);
            SubLObject num_pt_index = ZERO_INTEGER;
            SubLObject num_uf_index = ONE_INTEGER;
            SubLObject num_sn_index = TWO_INTEGER;
            SubLObject num_rt_index = THREE_INTEGER;
            SubLObject num_lex_equivs_index = FOUR_INTEGER;
            SubLObject num_facts_index = FIVE_INTEGER;
            SubLObject head_data_min_spaces_between_label_end_data_begin = FIVE_INTEGER;
            SubLObject min_spaces_between_label_end_data_begin = TWO_INTEGER;
            SubLObject filter_list = list(default_display_filter, default_output_filter);
            SubLObject list_of_data_lists = list(pt_count, uf_count, sn_count, rt_count, lex_count, as_count);
            SubLObject skip_space_for_filter = Strings.make_string(SIX_INTEGER, CHAR_space);
            SubLObject skip_from_main_to_data = Strings.make_string(min_spaces_between_label_end_data_begin, CHAR_space);
            SubLObject actual_label = $str_alt88$_Actual_;
            SubLObject display_filter_label = $$$Display_Filter;
            SubLObject output_filter_label = $$$Output_Filter;
            SubLObject fill_list_for_filter_heads = NIL;
            SubLObject skip_space_to_main_data = NIL;
            SubLObject head_label_column = NIL;
            SubLObject main_label_column = NIL;
            SubLObject main_data_index = NIL;
            SubLObject max_main_data_number = NIL;
            SubLObject label_index = NIL;
            set_aref(head_label_vector, thesaurus_label_index, $str_alt91$Thesaurus_);
            set_aref(head_data_vector, thesaurus_label_index, format(NIL, $str_alt92$_A____A_, thesaurus_name, abbreviation));
            set_aref(head_label_vector, default_display_index, NIL != default_display_filter ? ((SubLObject) ($str_alt93$Default_Display_Filter_)) : empty_string);
            set_aref(head_data_vector, default_display_index, NIL != default_display_filter ? ((SubLObject) (tm_internals.tm_filter_name(default_display_filter))) : empty_string);
            if (NIL == aref(head_data_vector, default_display_index)) {
                set_aref(head_data_vector, default_display_index, format($str_alt94$_a, default_display_filter));
            }
            set_aref(head_label_vector, default_output_index, NIL != default_output_filter ? ((SubLObject) ($str_alt95$Default_Output_Filter_)) : empty_string);
            set_aref(head_data_vector, default_output_index, NIL != default_output_filter ? ((SubLObject) (tm_internals.tm_filter_name(default_output_filter))) : empty_string);
            if (NIL == aref(head_data_vector, default_output_index)) {
                set_aref(head_data_vector, default_output_index, format($str_alt94$_a, default_output_filter));
            }
            head_label_column = max_element_of_sequence(head_label_vector, symbol_function(LENGTH));
            {
                SubLObject index = NIL;
                for (index = ZERO_INTEGER; index.numL(num_head_labels); index = add(index, ONE_INTEGER)) {
                    if (!aref(head_label_vector, index).equal(empty_string)) {
                        set_aref(head_fill_vector, index, Strings.make_string(add(subtract(head_label_column, length(aref(head_label_vector, index))), head_data_min_spaces_between_label_end_data_begin), CHAR_space));
                    } else {
                        set_aref(head_fill_vector, index, empty_string);
                    }
                }
            }
            set_aref(label_vector, num_pt_index, $str_alt97$Number_of_PTs__);
            set_aref(label_vector, num_uf_index, $str_alt98$Number_of_UFs__);
            set_aref(label_vector, num_sn_index, $str_alt99$Number_of_SNs__);
            set_aref(label_vector, num_rt_index, $str_alt100$Number_of_RT_links_);
            set_aref(label_vector, num_lex_equivs_index, $str_alt101$Number_of_lexical_equivalents_);
            set_aref(label_vector, num_facts_index, $str_alt102$Number_of_facts__total__);
            main_label_column = max_element_of_sequence(label_vector, symbol_function(LENGTH));
            {
                SubLObject index = NIL;
                for (index = ZERO_INTEGER; index.numL(num_labels); index = add(index, ONE_INTEGER)) {
                    set_aref(fill_vector, index, Strings.make_string(add(subtract(main_label_column, length(aref(label_vector, index))), min_spaces_between_label_end_data_begin), CHAR_space));
                }
            }
            skip_space_to_main_data = Strings.make_string(main_label_column, UNPROVIDED);
            format(stream, $str_alt103$_________________________________);
            format(stream, $str_alt104$___A_A_A, new SubLObject[]{ aref(head_label_vector, thesaurus_label_index), aref(head_fill_vector, thesaurus_label_index), aref(head_data_vector, thesaurus_label_index) });
            if (NIL != default_display_filter) {
                format(stream, $str_alt104$___A_A_A, new SubLObject[]{ aref(head_label_vector, default_display_index), aref(head_fill_vector, default_display_index), aref(head_data_vector, default_display_index) });
            }
            if (NIL != default_output_filter) {
                format(stream, $str_alt104$___A_A_A, new SubLObject[]{ aref(head_label_vector, default_output_index), aref(head_fill_vector, default_output_index), aref(head_data_vector, default_output_index) });
            }
            max_main_data_number = ZERO_INTEGER;
            {
                SubLObject cdolist_list_var = list_of_data_lists;
                SubLObject count_type = NIL;
                for (count_type = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , count_type = cdolist_list_var.first()) {
                    {
                        SubLObject max_in_type = max_element_of_sequence(count_type, symbol_function(LENGTH));
                        if (max_in_type.numG(max_main_data_number)) {
                            max_main_data_number = max_in_type;
                        }
                    }
                }
            }
            {
                SubLObject creator_print_name = NIL;
                SubLObject loader_print_name = NIL;
                if (NIL != creator) {
                    creator_print_name = (NIL != tm_internals.user_name(creator)) ? ((SubLObject) (tm_internals.user_name(creator))) : constants_high.constant_name(creator);
                    format(stream, $str_alt105$____Created_by__A, creator_print_name);
                    if (NIL != creation_time) {
                        format(stream, $str_alt106$_on__A, numeric_date_utilities.datestring(creation_time));
                    }
                }
                if (NIL != loader) {
                    loader_print_name = (NIL != tm_internals.user_name(loader)) ? ((SubLObject) (tm_internals.user_name(loader))) : constants_high.constant_name(loader);
                    format(stream, $str_alt107$__Loaded_by__A, loader_print_name);
                    if (NIL != load_date) {
                        format(stream, $str_alt106$_on__A, numeric_date_utilities.datestring(load_date));
                    }
                }
            }
            format(stream, $str_alt108$___A_A_A_A_A, new SubLObject[]{ skip_space_to_main_data, skip_from_main_to_data, actual_label, NIL != default_display_filter ? ((SubLObject) (cconcatenate(skip_space_for_filter, display_filter_label))) : empty_string, NIL != default_output_filter ? ((SubLObject) (cconcatenate(skip_space_for_filter, output_filter_label))) : empty_string });
            format(stream, $str_alt108$___A_A_A_A_A, new SubLObject[]{ skip_space_to_main_data, skip_from_main_to_data, Strings.make_string(length(actual_label), CHAR_hyphen), NIL != default_display_filter ? ((SubLObject) (cconcatenate(skip_space_for_filter, Strings.make_string(length(display_filter_label), CHAR_hyphen)))) : empty_string, NIL != default_output_filter ? ((SubLObject) (cconcatenate(skip_space_for_filter, Strings.make_string(length(output_filter_label), CHAR_hyphen)))) : empty_string });
            fill_list_for_filter_heads = list(Strings.make_string(subtract(length(actual_label), max_main_data_number).numG(ZERO_INTEGER) ? ((SubLObject) (subtract(length(actual_label), max_main_data_number))) : ZERO_INTEGER, UNPROVIDED), Strings.make_string(subtract(length(display_filter_label), max_main_data_number).numG(ZERO_INTEGER) ? ((SubLObject) (subtract(length(display_filter_label), max_main_data_number))) : ZERO_INTEGER, UNPROVIDED), Strings.make_string(subtract(length(output_filter_label), max_main_data_number).numG(ZERO_INTEGER) ? ((SubLObject) (subtract(length(output_filter_label), max_main_data_number))) : ZERO_INTEGER, UNPROVIDED));
            label_index = ZERO_INTEGER;
            {
                SubLObject fill_string_length = NIL;
                SubLObject cdolist_list_var = list_of_data_lists;
                SubLObject data_list = NIL;
                for (data_list = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , data_list = cdolist_list_var.first()) {
                    main_data_index = ZERO_INTEGER;
                    if (subtract(max_main_data_number, length(elt(data_list, main_data_index))).numG(ZERO_INTEGER)) {
                        fill_string_length = subtract(max_main_data_number, length(elt(data_list, main_data_index)));
                    } else {
                        fill_string_length = ZERO_INTEGER;
                    }
                    format(stream, $str_alt108$___A_A_A_A_A, new SubLObject[]{ aref(label_vector, label_index), aref(fill_vector, label_index), Strings.make_string(fill_string_length, UNPROVIDED), elt(fill_list_for_filter_heads, main_data_index), elt(data_list, main_data_index) });
                    {
                        SubLObject cdolist_list_var_66 = filter_list;
                        SubLObject filter = NIL;
                        for (filter = cdolist_list_var_66.first(); NIL != cdolist_list_var_66; cdolist_list_var_66 = cdolist_list_var_66.rest() , filter = cdolist_list_var_66.first()) {
                            main_data_index = add(main_data_index, ONE_INTEGER);
                            if (NIL != filter) {
                                if (subtract(max_main_data_number, length(elt(data_list, main_data_index))).numG(ZERO_INTEGER)) {
                                    fill_string_length = subtract(max_main_data_number, length(elt(data_list, main_data_index)));
                                } else {
                                    fill_string_length = ZERO_INTEGER;
                                }
                                format(stream, $str_alt109$_A_A_A_A, new SubLObject[]{ skip_space_for_filter, Strings.make_string(fill_string_length, UNPROVIDED), elt(fill_list_for_filter_heads, main_data_index), elt(data_list, main_data_index) });
                            }
                        }
                    }
                    label_index = add(label_index, ONE_INTEGER);
                }
            }
            {
                SubLObject cdolist_list_var = users;
                SubLObject user = NIL;
                for (user = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , user = cdolist_list_var.first()) {
                    {
                        SubLObject term_count = tm_internals.tm_user_term_count(user, thesaurus);
                        SubLObject fact_count = tm_internals.tm_user_assertion_count(user, thesaurus);
                        if (term_count.numG(ZERO_INTEGER) || fact_count.numG(ZERO_INTEGER)) {
                            format(stream, $str_alt110$____User__A_Contributions_to__A, tm_internals.user_name(user), thesaurus_name);
                            format(stream, $str_alt111$____Number_of_PTs_added_____A, term_count);
                            format(stream, $str_alt112$____Number_of_facts_added___A, fact_count);
                        }
                    }
                }
            }
        }
        return NIL;
    }

    public static final SubLObject tm_write_thesauri_report(SubLObject filename) {
        {
            SubLObject thesauri = tm_internals.all_thesauri_sorted();
            SubLObject lexical_relations_to_omit = $list_alt87;
            SubLObject num_labels = FOUR_INTEGER;
            SubLObject label_vector = make_vector(num_labels, UNPROVIDED);
            SubLObject fill_vector = make_vector(num_labels, UNPROVIDED);
            SubLObject num_thesauri_index = ZERO_INTEGER;
            SubLObject num_facts_index = ONE_INTEGER;
            SubLObject num_concepts_index = TWO_INTEGER;
            SubLObject num_lex_equivs_index = THREE_INTEGER;
            SubLObject min_spaces_between_label_end_num_begin = THREE_INTEGER;
            SubLObject main_label_column = NIL;
            set_aref(label_vector, num_thesauri_index, $str_alt113$Total_number_of_thesauri_);
            set_aref(label_vector, num_facts_index, $str_alt114$Total_number_of_thesaurus_facts_);
            set_aref(label_vector, num_concepts_index, $str_alt115$Total_number_of_concepts_in_all_t);
            set_aref(label_vector, num_lex_equivs_index, $str_alt116$Total_number_of_lexical_equivalen);
            main_label_column = max_element_of_sequence(label_vector, symbol_function(LENGTH));
            {
                SubLObject index = NIL;
                for (index = ZERO_INTEGER; index.numL(num_labels); index = add(index, ONE_INTEGER)) {
                    set_aref(fill_vector, index, Strings.make_string(add(subtract(main_label_column, length(aref(label_vector, index))), min_spaces_between_label_end_num_begin), CHAR_space));
                }
            }
            {
                SubLObject stream = NIL;
                try {
                    stream = compatibility.open_text(filename, $OUTPUT, NIL);
                    if (!stream.isStream()) {
                        Errors.error($str_alt118$Unable_to_open__S, filename);
                    }
                    {
                        SubLObject stream_67 = stream;
                        format(stream_67, $str_alt119$THESAURUS_STATISTICS_FOR__A, numeric_date_utilities.datestring(UNPROVIDED));
                        format(stream_67, $str_alt120$_____A_A_A, new SubLObject[]{ aref(label_vector, num_thesauri_index), aref(fill_vector, num_thesauri_index), length(thesauri) });
                        format(stream_67, $str_alt120$_____A_A_A, new SubLObject[]{ aref(label_vector, num_facts_index), aref(fill_vector, num_facts_index), tm_internals.tm_all_thesauri_assertion_count() });
                        format(stream_67, $str_alt120$_____A_A_A, new SubLObject[]{ aref(label_vector, num_concepts_index), aref(fill_vector, num_concepts_index), tm_internals.tm_count_concepts() });
                        format(stream_67, $str_alt120$_____A_A_A, new SubLObject[]{ aref(label_vector, num_lex_equivs_index), aref(fill_vector, num_lex_equivs_index), tm_internals.tm_thesauri_lexical_assertion_count(thesauri, lexical_relations_to_omit) });
                        format(stream_67, $str_alt121$____);
                        {
                            SubLObject list_var = NIL;
                            SubLObject thesaurus = NIL;
                            SubLObject index = NIL;
                            for (list_var = thesauri, thesaurus = list_var.first(), index = ZERO_INTEGER; NIL != list_var; list_var = list_var.rest() , thesaurus = list_var.first() , index = add(ONE_INTEGER, index)) {
                                tm_write_thesaurus_report_to_stream(thesaurus, stream_67);
                                tm_thinking.tm_thinking_note_percent_progress(index, length(thesauri), UNPROVIDED);
                            }
                        }
                    }
                } finally {
                    {
                        SubLObject _prev_bind_0 = currentBinding($is_thread_performing_cleanupP$);
                        try {
                            bind($is_thread_performing_cleanupP$, T);
                            if (stream.isStream()) {
                                close(stream, UNPROVIDED);
                            }
                        } finally {
                            rebind($is_thread_performing_cleanupP$, _prev_bind_0);
                        }
                    }
                }
            }
            return filename;
        }
    }

    /**
     * Returns nil when sequence is empty, else max item obtained applying key to
     * each element.
     */
    public static final SubLObject max_element_of_sequence(SubLObject sequence, SubLObject key) {
        if (key == UNPROVIDED) {
            key = symbol_function(IDENTITY);
        }
        if (length(sequence).eql(ZERO_INTEGER)) {
            return NIL;
        }
        {
            SubLObject current = funcall(key, elt(sequence, ZERO_INTEGER));
            SubLObject max = current;
            SubLObject cdotimes_end_var = length(sequence);
            SubLObject index = NIL;
            for (index = ZERO_INTEGER; index.numL(cdotimes_end_var); index = add(index, ONE_INTEGER)) {
                current = funcall(key, elt(sequence, index));
                if (current.numG(max)) {
                    max = current;
                }
            }
            return max;
        }
    }

    public static final SubLObject tm_list_reports(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject base_files = tm_logging.get_log_filenames($REPORT, UNPROVIDED);
                SubLObject report_files = NIL;
                base_files = Sort.sort(base_files, symbol_function(STRING_LESSP), UNPROVIDED);
                {
                    SubLObject cdolist_list_var = base_files;
                    SubLObject f = NIL;
                    for (f = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , f = cdolist_list_var.first()) {
                        report_files = cons(format(NIL, $str_alt124$_a_a, tm_datastructures.$tm_report_directory$.getGlobalValue(), f), report_files);
                    }
                }
                report_files = reverse(report_files);
                {
                    SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ($$$List_Reports);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    {
                        SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                        try {
                            html_macros.$html_inside_bodyP$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                            if (NIL != color_value) {
                                html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_color(color_value));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_68 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_69 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                    html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_70 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_70, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_69, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                    }
                                    html_utilities.html_princ($$$List_Reports);
                                    html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    tm_logging.tm_enqueue_event($$$List_Reports);
                                    if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $str_alt1$advanced_user)))) {
                                        html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                    } else {
                                        html_thesaurus.thesaurus_heading($str_alt30$tm_list_reports);
                                        html_utilities.html_br();
                                        if (NIL != report_files) {
                                            html_utilities.html_princ($str_alt125$Here_are_the_available_reports_de);
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            {
                                                SubLObject cdolist_list_var = base_files;
                                                SubLObject bf = NIL;
                                                for (bf = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , bf = cdolist_list_var.first()) {
                                                    html_utilities.html_br();
                                                    html_thesaurus.tm_link($SHOW_FILE, find(bf, report_files, symbol_function($sym127$SUBSTRING_), UNPROVIDED, UNPROVIDED, UNPROVIDED), bf, UNPROVIDED);
                                                }
                                            }
                                            html_utilities.html_br();
                                        } else {
                                            html_utilities.html_princ($str_alt128$There_are_no_report_files_availab);
                                            html_utilities.html_br();
                                        }
                                    }
                                    html_thesaurus.tm_footer();
                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_68, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                        } finally {
                            html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_verify_generate_thesauri_report(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($str_alt130$Generate_Thesaurus_Statistics_Rep);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_71 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_72 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_73 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_73, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_72, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($str_alt130$Generate_Thesaurus_Statistics_Rep);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($str_alt130$Generate_Thesaurus_Statistics_Rep);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt131$tm_verify_generate_thesauri_repor);
                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt132$Thesaurus_statistics_for__A_have_, numeric_date_utilities.datestring(UNPROVIDED));
                                    html_utilities.html_br();
                                    html_utilities.html_princ($str_alt133$They_can_be_found_in_the_file_);
                                    {
                                        SubLObject pathname = tm_thesaurus_report_filename();
                                        html_thesaurus.tm_link($SHOW_FILE, pathname, pathname, UNPROVIDED);
                                    }
                                    html_utilities.html_br();
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_74 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt134$tm_really_generate_thesauri_repor, T, UNPROVIDED);
                                            html_utilities.html_princ($str_alt135$Do_you_wish_to_generate_them_agai);
                                            html_utilities.html_br();
                                            html_utilities.html_submit_input($$$Overwrite, UNPROVIDED, UNPROVIDED);
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_74, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_71, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_really_generate_thesauri_report(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        tm_generate_thesauri_report_in_thinker();
        return html_thesaurus.tm_message_to_user($$$Thesaurus_Statistics_Generating, $str_alt138$Thesaurus_statistics_are_being_ge);
    }

    public static final SubLObject tm_generate_thesauri_report(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        if (NIL != tm_thinking.tm_active_thinking_tasks_of_type($GENERATE_THESAURI_REPORT)) {
            return html_thesaurus.tm_message_to_user($$$Not_Available_Now, $str_alt141$There_is_already_a_Generate_Thesa);
        }
        {
            SubLObject pathname = tm_thesaurus_report_filename();
            if (NIL != Filesys.probe_file(pathname)) {
                return tm_verify_generate_thesauri_report(UNPROVIDED);
            } else {
                return tm_really_generate_thesauri_report(UNPROVIDED);
            }
        }
    }

    public static final SubLObject tm_verify_generate_user_report(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject start_day = $$$01;
                SubLObject end_day = $$$01;
                SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
                SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
                SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
                SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
                SubLObject start_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(start_day, start_month, start_year));
                SubLObject end_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(end_day, end_month, end_year));
                SubLObject pathname = tm_logging.tm_user_report_filename(start_month_internal_format, end_month_internal_format);
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Generate_User_Statistics_Report);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_75 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_76 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_77 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_77, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_76, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Generate_User_Statistics_Report);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Generate_User_Statistics_Report);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt149$tm_verify_generate_user_report);
                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt150$User_statistics_for__A_to__A_have, tm_logging.readable_month(start_month_internal_format), tm_logging.readable_month(end_month_internal_format));
                                    html_utilities.html_br();
                                    html_utilities.html_princ($str_alt133$They_can_be_found_in_the_file_);
                                    html_thesaurus.tm_link($SHOW_FILE, pathname, pathname, UNPROVIDED);
                                    html_utilities.html_br();
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_78 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt151$tm_handle_user_report_parameters, T, UNPROVIDED);
                                            html_utilities.html_princ($str_alt152$Do_you_wish_to_generate_them_agai);
                                            html_utilities.html_br();
                                            {
                                                SubLObject cdolist_list_var = args;
                                                SubLObject arg_pair = NIL;
                                                for (arg_pair = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , arg_pair = cdolist_list_var.first()) {
                                                    if (arg_pair.isCons()) {
                                                        html_utilities.html_hidden_input(arg_pair.first(), second(arg_pair), UNPROVIDED);
                                                    }
                                                }
                                            }
                                            html_utilities.html_submit_input($$$Overwrite, UNPROVIDED, UNPROVIDED);
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_78, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_75, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_generate_user_report(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            tm_logging.log_thesaurus_events();
            {
                SubLObject today_month_int = tm_logging.cyc_month_integer();
                SubLObject today_month_name = tm_logging.integer_Gmonth(today_month_int);
                SubLObject today_year = integerDivide(tm_logging.cyc_date(), $int$10000);
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($str_alt154$Choose_User_Statistics_Report_Par);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_79 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_80 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_81 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_81, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_80, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($str_alt154$Choose_User_Statistics_Report_Par);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($str_alt154$Choose_User_Statistics_Report_Par);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt155$tm_really_generate_user_report);
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_82 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt156$tm_handle_user_report, T, UNPROVIDED);
                                            html_utilities.html_br();
                                            html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_83 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_84 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_85 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_br();
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_85, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_84, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_86 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($LEFT));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_87 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                                    html_utilities.html_princ($str_alt159$_Start_Date);
                                                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_87, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_88 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_indent(FIVE_INTEGER);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_88, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($LEFT));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_89 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                                    html_utilities.html_princ($str_alt160$_End_Date);
                                                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_89, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_86, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_90 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($LEFT));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_91 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                    {
                                                                        SubLObject _prev_bind_0_92 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                            html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt144$start_month);
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_93 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    {
                                                                                        SubLObject cdolist_list_var = tm_logging.$integer_month_name_table$.getDynamicValue(thread);
                                                                                        SubLObject pair = NIL;
                                                                                        for (pair = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , pair = cdolist_list_var.first()) {
                                                                                            {
                                                                                                SubLObject name = pair.rest();
                                                                                                html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_94 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                        if (name.equalp(today_month_name)) {
                                                                                                            html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                        }
                                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                        {
                                                                                                            SubLObject _prev_bind_0_95 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                            try {
                                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt94$_a, name);
                                                                                                            } finally {
                                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_95, thread);
                                                                                                            }
                                                                                                        }
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_94, thread);
                                                                                                    }
                                                                                                }
                                                                                                html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_93, thread);
                                                                                }
                                                                            }
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_92, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                    html_utilities.html_text_input($str_alt145$start_year, today_year, FIVE_INTEGER);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_91, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_96 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_indent(FIVE_INTEGER);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_96, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($LEFT));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_97 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                    {
                                                                        SubLObject _prev_bind_0_98 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                            html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt146$end_month);
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_99 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    {
                                                                                        SubLObject cdolist_list_var = tm_logging.$integer_month_name_table$.getDynamicValue(thread);
                                                                                        SubLObject pair = NIL;
                                                                                        for (pair = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , pair = cdolist_list_var.first()) {
                                                                                            {
                                                                                                SubLObject name = pair.rest();
                                                                                                html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_100 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                        if (name.equalp(today_month_name)) {
                                                                                                            html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                        }
                                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                        {
                                                                                                            SubLObject _prev_bind_0_101 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                            try {
                                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt94$_a, name);
                                                                                                            } finally {
                                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_101, thread);
                                                                                                            }
                                                                                                        }
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_100, thread);
                                                                                                    }
                                                                                                }
                                                                                                html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_99, thread);
                                                                                }
                                                                            }
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_98, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                    html_utilities.html_text_input($str_alt147$end_year, today_year, FIVE_INTEGER);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_97, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_90, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_102 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_103 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_br();
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_103, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_102, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_83, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                            html_utilities.html_radio_input($str_alt161$aggregate_, $$$yes, T);
                                            html_utilities.html_princ($str_alt163$Information_aggregated_over_entir);
                                            html_utilities.html_br();
                                            html_utilities.html_radio_input($str_alt161$aggregate_, $$$no, NIL);
                                            html_utilities.html_princ($str_alt165$Information_separated_by_month_);
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_checkbox_input($str_alt166$month_, $$$T, T, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_princ($str_alt168$User_Statistics_by_Month_);
                                            html_utilities.html_br();
                                            html_utilities.html_indent(THREE_INTEGER);
                                            html_utilities.html_princ($str_alt169$_this_option_is_only_available_wh);
                                            html_utilities.html_br();
                                            html_utilities.html_checkbox_input($str_alt170$user_, $$$T, T, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_princ($str_alt171$User_Statistics_by_User_);
                                            html_utilities.html_br();
                                            html_utilities.html_checkbox_input($str_alt172$thesaurus_, $$$T, T, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_princ($str_alt173$User_Statistics_by_Thesaurus_);
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_submit_input($$$Generate_User_Statistics, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_br();
                                            html_utilities.html_newline(UNPROVIDED);
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_82, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_79, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_verify_generate_ops_report_file(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject start_day = html_utilities.html_extract_input($str_alt175$start_day, args);
                SubLObject end_day = html_utilities.html_extract_input($str_alt176$end_day, args);
                SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
                SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
                SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
                SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
                SubLObject start_date_internal_format = tm_logging.tm_make_cyc_date(start_day, start_month, start_year);
                SubLObject end_date_internal_format = tm_logging.tm_make_cyc_date(end_day, end_month, end_year);
                SubLObject pathname = tm_logging.tm_ops_report_filename(start_date_internal_format, end_date_internal_format);
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Generate_User_Statistics_Report);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_104 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_105 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_106 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_106, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_105, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Generate_User_Statistics_Report);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Generate_User_Statistics_Report);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt177$tm_verify_generate_ops_report_fil);
                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt178$An_operations_report_for__A_to__A, tm_logging.readable_day(start_date_internal_format), tm_logging.readable_day(end_date_internal_format));
                                    html_utilities.html_br();
                                    html_utilities.html_princ($str_alt179$It_can_be_found_in_the_file_);
                                    html_thesaurus.tm_link($SHOW_FILE, pathname, pathname, UNPROVIDED);
                                    html_utilities.html_br();
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_107 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt180$tm_handle_ops_report_file_paramet, T, UNPROVIDED);
                                            html_utilities.html_princ($str_alt181$Do_you_wish_to_generate_it_again_);
                                            html_utilities.html_br();
                                            {
                                                SubLObject cdolist_list_var = args;
                                                SubLObject arg_pair = NIL;
                                                for (arg_pair = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , arg_pair = cdolist_list_var.first()) {
                                                    if (arg_pair.isCons()) {
                                                        html_utilities.html_hidden_input(arg_pair.first(), second(arg_pair), UNPROVIDED);
                                                    }
                                                }
                                            }
                                            html_utilities.html_submit_input($$$Overwrite, UNPROVIDED, UNPROVIDED);
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_107, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_104, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_ops_report_file_parameters(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject start_day = html_utilities.html_extract_input($str_alt175$start_day, args);
                SubLObject end_day = html_utilities.html_extract_input($str_alt176$end_day, args);
                SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
                SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
                SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
                SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
                SubLObject start_date = tm_logging.tm_make_cyc_date(start_day, start_month, start_year);
                SubLObject end_date = tm_logging.tm_make_cyc_date(end_day, end_month, end_year);
                SubLObject sort_string = html_utilities.html_extract_input($$$sort, args);
                SubLObject sort_key = find(sort_string, tm_logging.get_ops_log_dispatch_table_value(), symbol_function(EQUALP), symbol_function(THIRD), UNPROVIDED, UNPROVIDED).first();
                SubLObject thesauri = html_utilities.html_extract_input_values($$$thesauri, args);
                SubLObject allP = find($str_alt186$_ALL_, thesauri, symbol_function(EQUALP), UNPROVIDED, UNPROVIDED, UNPROVIDED);
                SubLObject reduced_thesauri = remove($str_alt186$_ALL_, thesauri, symbol_function(EQUALP), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                SubLObject name_lists = (reduced_thesauri.isCons()) ? ((SubLObject) (Mapping.mapcar(symbol_function(EXPLODE_THESAURUS_NAME_SEQUENCE), reduced_thesauri))) : NIL;
                SubLObject thesauri_ids = (name_lists.isCons()) ? ((SubLObject) (Mapping.mapcar(symbol_function(GET_LOGGED_THESAURUS_ID), name_lists))) : NIL;
                SubLObject expanded_ids = (NIL != allP) ? ((SubLObject) (cons($str_alt186$_ALL_, thesauri_ids))) : thesauri_ids;
                SubLObject optype = html_utilities.html_extract_input($$$optype, args);
                if (start_date.numG(end_date)) {
                    return html_thesaurus.tm_message_to_user($str_alt190$Invalid_Parameters_for_Operations, format(NIL, $str_alt191$The_end_date___a__preceeds_the_st, tm_logging.readable_day(end_date), tm_logging.readable_day(start_date)));
                }
                {
                    SubLObject table = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $UTILITY_TABLE_1);
                    if (hash_table_count(table).numG(ZERO_INTEGER)) {
                        {
                            SubLObject pathname = tm_logging.tm_maybe_generate_ops_report(sort_key, start_date, end_date);
                            SubLObject event_log_files = tm_logging.get_log_filenames($OP_LOG, UNPROVIDED);
                            SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                            html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                            html_macros.html_head_content_type();
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                            html_utilities.html_princ($$$Operations_Report_Results);
                            html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                            {
                                SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                                try {
                                    html_macros.$html_inside_bodyP$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                                    if (NIL != color_value) {
                                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_utilities.html_color(color_value));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_108 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                            html_utilities.html_markup(ONE_INTEGER);
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                                html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_109 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                            html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        }
                                                        if (true) {
                                                            html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            html_utilities.html_markup(ZERO_INTEGER);
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        }
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_110 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_110, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_109, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                            }
                                            html_utilities.html_princ($$$Operations_Report_Results);
                                            html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                            html_utilities.html_markup(ONE_INTEGER);
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            tm_logging.tm_enqueue_event($$$Operations_Report_Results);
                                            html_thesaurus.thesaurus_heading($str_alt180$tm_handle_ops_report_file_paramet);
                                            if (pathname.isString()) {
                                                html_utilities.html_princ($str_alt195$Results_are_in_the_file_);
                                                html_thesaurus.tm_link($SHOW_FILE, pathname, pathname, UNPROVIDED);
                                            } else
                                                if (NIL == event_log_files) {
                                                    html_utilities.html_princ($str_alt196$A_new_operations_report_file_was_);
                                                    html_utilities.html_princ(tm_datastructures.$tm_report_directory$.getGlobalValue());
                                                    html_utilities.html_princ($str_alt197$__);
                                                } else {
                                                    html_utilities.html_princ($str_alt198$A_new_operations_report_file_was_);
                                                }

                                            html_thesaurus.tm_footer();
                                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_108, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                } finally {
                                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                        }
                    } else {
                        tm_no_report_generated(start_date, end_date, sort_key, thesauri, optype);
                    }
                }
                return NIL;
            }
        }
    }

    public static final SubLObject tm_handle_ops_report_file(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            SubLObject start_day = html_utilities.html_extract_input($str_alt175$start_day, args);
            SubLObject end_day = html_utilities.html_extract_input($str_alt176$end_day, args);
            SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
            SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
            SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
            SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
            SubLObject start_date_internal_format = tm_logging.tm_make_cyc_date(start_day, start_month, start_year);
            SubLObject end_date_internal_format = tm_logging.tm_make_cyc_date(end_day, end_month, end_year);
            SubLObject pathname = tm_logging.tm_ops_report_filename(start_date_internal_format, end_date_internal_format);
            if (start_date_internal_format.numG(end_date_internal_format)) {
                return html_thesaurus.tm_message_to_user($str_alt190$Invalid_Parameters_for_Operations, format(NIL, $str_alt191$The_end_date___a__preceeds_the_st, tm_logging.readable_day(end_date_internal_format), tm_logging.readable_day(start_date_internal_format)));
            }
            if (NIL != Filesys.probe_file(pathname)) {
                return tm_verify_generate_ops_report_file(args);
            } else {
                return tm_handle_ops_report_file_parameters(args);
            }
        }
    }

    public static final SubLObject tm_handle_user_report(SubLObject args) {
        {
            SubLObject start_day = $$$01;
            SubLObject end_day = $$$01;
            SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
            SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
            SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
            SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
            SubLObject start_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(start_day, start_month, start_year));
            SubLObject end_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(end_day, end_month, end_year));
            SubLObject pathname = tm_logging.tm_user_report_filename(start_month_internal_format, end_month_internal_format);
            if (start_month_internal_format.numG(end_month_internal_format)) {
                return html_thesaurus.tm_message_to_user($str_alt201$Invalid_Parameters_for_User_Stati, format(NIL, $str_alt191$The_end_date___a__preceeds_the_st, tm_logging.readable_month(end_month_internal_format), tm_logging.readable_month(start_month_internal_format)));
            }
            if (NIL != Filesys.probe_file(pathname)) {
                return tm_verify_generate_user_report(args);
            } else {
                return tm_handle_user_report_parameters(args);
            }
        }
    }

    public static final SubLObject tm_handle_user_report_parameters(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject start_day = $$$01;
                SubLObject end_day = $$$01;
                SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
                SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
                SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
                SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
                SubLObject start_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(start_day, start_month, start_year));
                SubLObject end_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(end_day, end_month, end_year));
                SubLObject aggregateP = html_utilities.html_extract_input($str_alt161$aggregate_, args);
                SubLObject monthP = html_utilities.html_extract_input($str_alt166$month_, args);
                SubLObject userP = html_utilities.html_extract_input($str_alt170$user_, args);
                SubLObject thesaurusP = html_utilities.html_extract_input($str_alt172$thesaurus_, args);
                if (start_month_internal_format.numG(end_month_internal_format)) {
                    return html_thesaurus.tm_message_to_user($str_alt201$Invalid_Parameters_for_User_Stati, format(NIL, $str_alt191$The_end_date___a__preceeds_the_st, tm_logging.readable_month(end_month_internal_format), tm_logging.readable_month(start_month_internal_format)));
                }
                tm_logging.log_thesaurus_events();
                {
                    SubLObject pathname = tm_logging.tm_maybe_generate_user_report(start_month_internal_format, end_month_internal_format, aggregateP, monthP, userP, thesaurusP);
                    SubLObject event_log_files = tm_logging.get_log_filenames($EVENT_LOG, UNPROVIDED);
                    SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ($$$User_Statistics_Results);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    {
                        SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                        try {
                            html_macros.$html_inside_bodyP$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                            if (NIL != color_value) {
                                html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_color(color_value));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_111 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_112 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                    html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_113 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_113, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_112, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                    }
                                    html_utilities.html_princ($$$User_Statistics_Results);
                                    html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    tm_logging.tm_enqueue_event($$$User_Statistics_Results);
                                    html_thesaurus.thesaurus_heading($str_alt151$tm_handle_user_report_parameters);
                                    if (pathname.isString()) {
                                        html_utilities.html_princ($str_alt195$Results_are_in_the_file_);
                                        html_thesaurus.tm_link($SHOW_FILE, pathname, pathname, UNPROVIDED);
                                    } else
                                        if (NIL == event_log_files) {
                                            html_utilities.html_princ($str_alt205$A_new_user_statistics_file_was_no);
                                            html_utilities.html_princ(tm_datastructures.$tm_report_directory$.getGlobalValue());
                                            html_utilities.html_princ($str_alt197$__);
                                        } else {
                                            html_utilities.html_princ($str_alt206$A_new_user_statistics_file_was_no);
                                        }

                                    html_thesaurus.tm_footer();
                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_111, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                        } finally {
                            html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_generate_ops_report(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            tm_logging.log_thesaurus_ops();
            tm_logging.fill_tm_op_log_thesaurus_table();
            {
                SubLObject days = $list_alt208;
                SubLObject today_day = tm_logging.cyc_day_integer();
                SubLObject today_month_int = tm_logging.cyc_month_integer();
                SubLObject today_month_name = tm_logging.integer_Gmonth(today_month_int);
                SubLObject today_year = integerDivide(tm_logging.cyc_date(), $int$10000);
                SubLObject thesauri_ids = tm_logging.get_logged_thesauri_ids();
                SubLObject sorted_ids = Sort.sort(thesauri_ids, symbol_function(STRING_LESSP), symbol_function(GET_LOGGED_THESAURUS_NAMES));
                SubLObject thesauri = Mapping.mapcar(symbol_function(TM_FIND_TERM_BY_LOG_ID), sorted_ids);
                thesauri = remove_if(symbol_function(NULL), thesauri, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                {
                    SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ($str_alt212$Choose_Operation_Report_Parameter);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    {
                        SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                        try {
                            html_macros.$html_inside_bodyP$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                            if (NIL != color_value) {
                                html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_color(color_value));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_114 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_115 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                    html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_116 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_116, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_115, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                    }
                                    html_utilities.html_princ($str_alt212$Choose_Operation_Report_Parameter);
                                    html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    tm_logging.tm_enqueue_event($str_alt212$Choose_Operation_Report_Parameter);
                                    if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                        html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                    } else {
                                        html_thesaurus.thesaurus_heading($str_alt39$tm_generate_ops_report);
                                        html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                            html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        }
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_117 = html_macros.$html_safe_print$.currentBinding(thread);
                                            SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                            SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_macros.$within_html_form$.bind(T, thread);
                                                html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                                html_utilities.html_hidden_input($str_alt213$tm_handle_ops_report_parameters, $$$T, UNPROVIDED);
                                                html_utilities.html_markup(html_macros.$html_center_head$.getGlobalValue());
                                                html_utilities.html_submit_input($$$Generate_Operations_Report, UNPROVIDED, UNPROVIDED);
                                                html_utilities.html_markup(html_macros.$html_center_tail$.getGlobalValue());
                                                html_utilities.html_br();
                                                html_utilities.html_markup(html_macros.$html_center_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_118 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                        if (true) {
                                                            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            html_utilities.html_markup(html_utilities.html_align($CENTER));
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        }
                                                        if (true) {
                                                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            html_utilities.html_markup(html_utilities.html_align($TOP));
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        }
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_119 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt215$Thesaur_a, length(thesauri).numE(ONE_INTEGER) ? ((SubLObject) ($$$us)) : $$$i);
                                                                html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                                html_utilities.html_newline(TWO_INTEGER);
                                                                {
                                                                    SubLObject multiple_selectP = makeBoolean((NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $str_alt1$advanced_user)) || (NIL != tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $VIEW_MULTIPLE)));
                                                                    html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                    html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    html_utilities.html_markup($$$thesauri);
                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    if (NIL != multiple_selectP) {
                                                                        html_utilities.html_simple_attribute(html_macros.$html_select_multiple$.getGlobalValue());
                                                                    }
                                                                    if (true) {
                                                                        html_utilities.html_markup(html_macros.$html_select_size$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        html_utilities.html_markup(FIVE_INTEGER);
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    }
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_120 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            if (NIL != multiple_selectP) {
                                                                                html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                {
                                                                                    SubLObject _prev_bind_0_121 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                    try {
                                                                                        html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                        if (NIL == set_difference(thesauri, tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $THESAURI), UNPROVIDED, UNPROVIDED)) {
                                                                                            html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                        }
                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                        {
                                                                                            SubLObject _prev_bind_0_122 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                html_utilities.html_princ($str_alt186$_ALL_);
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_122, thread);
                                                                                            }
                                                                                        }
                                                                                    } finally {
                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_121, thread);
                                                                                    }
                                                                                }
                                                                                html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                            }
                                                                            {
                                                                                SubLObject cdolist_list_var = thesauri;
                                                                                SubLObject thesaurus = NIL;
                                                                                for (thesaurus = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , thesaurus = cdolist_list_var.first()) {
                                                                                    html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                    {
                                                                                        SubLObject _prev_bind_0_123 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                        try {
                                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                            if ((NIL != subl_promotions.memberP(thesaurus, tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $THESAURI), UNPROVIDED, UNPROVIDED)) && ((NIL != set_difference(thesauri, tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $THESAURI), UNPROVIDED, UNPROVIDED)) || (NIL == multiple_selectP))) {
                                                                                                html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                            }
                                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                            {
                                                                                                SubLObject _prev_bind_0_124 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                try {
                                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                                    html_utilities.html_princ(tm_logging.get_logged_thesaurus_names(tm_logging.tm_log_id(thesaurus)));
                                                                                                } finally {
                                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_124, thread);
                                                                                                }
                                                                                            }
                                                                                        } finally {
                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_123, thread);
                                                                                        }
                                                                                    }
                                                                                    html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                }
                                                                            }
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_120, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                }
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_119, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_125 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                                                                html_utilities.html_indent(FIVE_INTEGER);
                                                                html_utilities.html_princ($str_alt23$_);
                                                                html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_125, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                        if (true) {
                                                            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            html_utilities.html_markup(html_utilities.html_align($CENTER));
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        }
                                                        if (true) {
                                                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            html_utilities.html_markup(html_utilities.html_align($TOP));
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        }
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_126 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                                                if (true) {
                                                                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                }
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_127 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_128 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                {
                                                                                    SubLObject _prev_bind_0_129 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                    try {
                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                        html_utilities.html_markup(html_macros.$html_center_head$.getGlobalValue());
                                                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Start_Date);
                                                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                                                        html_utilities.html_markup(html_macros.$html_center_tail$.getGlobalValue());
                                                                                    } finally {
                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_129, thread);
                                                                                    }
                                                                                }
                                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_128, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_130 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                {
                                                                                    SubLObject _prev_bind_0_131 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                    try {
                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                        html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                                        {
                                                                                            SubLObject _prev_bind_0_132 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt175$start_day);
                                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_133 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                                        {
                                                                                                            SubLObject cdolist_list_var = days;
                                                                                                            SubLObject day = NIL;
                                                                                                            for (day = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , day = cdolist_list_var.first()) {
                                                                                                                html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                                {
                                                                                                                    SubLObject _prev_bind_0_134 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                    try {
                                                                                                                        html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                                        if (day.equal(today_day)) {
                                                                                                                            html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                                        }
                                                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                                        {
                                                                                                                            SubLObject _prev_bind_0_135 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                            try {
                                                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt94$_a, day);
                                                                                                                            } finally {
                                                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_135, thread);
                                                                                                                            }
                                                                                                                        }
                                                                                                                    } finally {
                                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_134, thread);
                                                                                                                    }
                                                                                                                }
                                                                                                                html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                                            }
                                                                                                        }
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_133, thread);
                                                                                                    }
                                                                                                }
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_132, thread);
                                                                                            }
                                                                                        }
                                                                                        html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                                        html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                                        {
                                                                                            SubLObject _prev_bind_0_136 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt144$start_month);
                                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_137 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                                        {
                                                                                                            SubLObject cdolist_list_var = tm_logging.$integer_month_name_table$.getDynamicValue(thread);
                                                                                                            SubLObject pair = NIL;
                                                                                                            for (pair = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , pair = cdolist_list_var.first()) {
                                                                                                                {
                                                                                                                    SubLObject name = pair.rest();
                                                                                                                    html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                                    {
                                                                                                                        SubLObject _prev_bind_0_138 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                        try {
                                                                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                                            if (name.equalp(today_month_name)) {
                                                                                                                                html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                                            }
                                                                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                                            {
                                                                                                                                SubLObject _prev_bind_0_139 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                                try {
                                                                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt94$_a, name);
                                                                                                                                } finally {
                                                                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_139, thread);
                                                                                                                                }
                                                                                                                            }
                                                                                                                        } finally {
                                                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_138, thread);
                                                                                                                        }
                                                                                                                    }
                                                                                                                    html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_137, thread);
                                                                                                    }
                                                                                                }
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_136, thread);
                                                                                            }
                                                                                        }
                                                                                        html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                                        html_utilities.html_text_input($str_alt145$start_year, today_year, FIVE_INTEGER);
                                                                                    } finally {
                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_131, thread);
                                                                                    }
                                                                                }
                                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_130, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_140 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                {
                                                                                    SubLObject _prev_bind_0_141 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                    try {
                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                        html_utilities.html_br();
                                                                                    } finally {
                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_141, thread);
                                                                                    }
                                                                                }
                                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_140, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_142 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                {
                                                                                    SubLObject _prev_bind_0_143 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                    try {
                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                        html_utilities.html_markup(html_macros.$html_center_head$.getGlobalValue());
                                                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$End_Date);
                                                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                                                        html_utilities.html_markup(html_macros.$html_center_tail$.getGlobalValue());
                                                                                    } finally {
                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_143, thread);
                                                                                    }
                                                                                }
                                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_142, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_144 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                {
                                                                                    SubLObject _prev_bind_0_145 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                    try {
                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                        html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                                        {
                                                                                            SubLObject _prev_bind_0_146 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt176$end_day);
                                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_147 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                                        {
                                                                                                            SubLObject cdolist_list_var = days;
                                                                                                            SubLObject day = NIL;
                                                                                                            for (day = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , day = cdolist_list_var.first()) {
                                                                                                                html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                                {
                                                                                                                    SubLObject _prev_bind_0_148 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                    try {
                                                                                                                        html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                                        if (day.equal(today_day)) {
                                                                                                                            html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                                        }
                                                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                                        {
                                                                                                                            SubLObject _prev_bind_0_149 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                            try {
                                                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt94$_a, day);
                                                                                                                            } finally {
                                                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_149, thread);
                                                                                                                            }
                                                                                                                        }
                                                                                                                    } finally {
                                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_148, thread);
                                                                                                                    }
                                                                                                                }
                                                                                                                html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                                            }
                                                                                                        }
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_147, thread);
                                                                                                    }
                                                                                                }
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_146, thread);
                                                                                            }
                                                                                        }
                                                                                        html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                                        html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                                        {
                                                                                            SubLObject _prev_bind_0_150 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt146$end_month);
                                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_151 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                                        {
                                                                                                            SubLObject cdolist_list_var = tm_logging.$integer_month_name_table$.getDynamicValue(thread);
                                                                                                            SubLObject pair = NIL;
                                                                                                            for (pair = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , pair = cdolist_list_var.first()) {
                                                                                                                {
                                                                                                                    SubLObject name = pair.rest();
                                                                                                                    html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                                    {
                                                                                                                        SubLObject _prev_bind_0_152 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                        try {
                                                                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                                            if (name.equalp(today_month_name)) {
                                                                                                                                html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                                            }
                                                                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                                            {
                                                                                                                                SubLObject _prev_bind_0_153 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                                try {
                                                                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt94$_a, name);
                                                                                                                                } finally {
                                                                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_153, thread);
                                                                                                                                }
                                                                                                                            }
                                                                                                                        } finally {
                                                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_152, thread);
                                                                                                                        }
                                                                                                                    }
                                                                                                                    html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_151, thread);
                                                                                                    }
                                                                                                }
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_150, thread);
                                                                                            }
                                                                                        }
                                                                                        html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                                        html_utilities.html_text_input($str_alt147$end_year, today_year, FIVE_INTEGER);
                                                                                    } finally {
                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_145, thread);
                                                                                    }
                                                                                }
                                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_144, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_154 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                {
                                                                                    SubLObject _prev_bind_0_155 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                    try {
                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                        html_utilities.html_br();
                                                                                    } finally {
                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_155, thread);
                                                                                    }
                                                                                }
                                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_154, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_156 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                {
                                                                                    SubLObject _prev_bind_0_157 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                    try {
                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Sort_results_by);
                                                                                        html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                                        {
                                                                                            SubLObject _prev_bind_0_158 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                            try {
                                                                                                html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $$$sort);
                                                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_159 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                                                        {
                                                                                                            SubLObject cdolist_list_var = tm_logging.get_ops_log_dispatch_table_value();
                                                                                                            SubLObject form = NIL;
                                                                                                            for (form = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , form = cdolist_list_var.first()) {
                                                                                                                {
                                                                                                                    SubLObject string = third(form);
                                                                                                                    html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                                    {
                                                                                                                        SubLObject _prev_bind_0_160 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                        try {
                                                                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                                            if (string.equalp(form.first())) {
                                                                                                                                html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                                            }
                                                                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                                            {
                                                                                                                                SubLObject _prev_bind_0_161 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                                                try {
                                                                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt94$_a, string);
                                                                                                                                } finally {
                                                                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_161, thread);
                                                                                                                                }
                                                                                                                            }
                                                                                                                        } finally {
                                                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_160, thread);
                                                                                                                        }
                                                                                                                    }
                                                                                                                    html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_159, thread);
                                                                                                    }
                                                                                                }
                                                                                            } finally {
                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_158, thread);
                                                                                            }
                                                                                        }
                                                                                        html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                                    } finally {
                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_157, thread);
                                                                                    }
                                                                                }
                                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_156, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_127, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_126, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_118, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                                html_utilities.html_newline(UNPROVIDED);
                                                html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                html_utilities.html_princ($$$Operation_Type);
                                                html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_162 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_163 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_164 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_utilities.html_radio_input($$$optype, $str_alt224$admin_only, NIL);
                                                                        html_utilities.html_princ($str_alt225$_Administrative_operations_only);
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_164, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_163, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_165 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_166 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_utilities.html_radio_input($$$optype, $str_alt226$ordinary_only, NIL);
                                                                        html_utilities.html_princ($str_alt227$_Ordinary_operations_only);
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_166, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_165, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_167 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_168 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_utilities.html_radio_input($$$optype, $str_alt228$admin_and_ordinary, T);
                                                                        html_utilities.html_princ($str_alt229$_Administrative_and_ordinary_oper);
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_168, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_167, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_162, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_center_tail$.getGlobalValue());
                                                html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                            } finally {
                                                html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                                html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_117, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                    }
                                    html_thesaurus.tm_footer();
                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_114, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                        } finally {
                            html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_no_report_generated(SubLObject start_date, SubLObject end_date, SubLObject sort_key, SubLObject thesauri, SubLObject optype) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject oneP = numE(length(thesauri), ONE_INTEGER);
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$No_Report_Generated);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_169 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_170 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_171 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_171, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_170, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$No_Report_Generated);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$No_Report_Generated);
                                html_thesaurus.thesaurus_heading($str_alt232$tm_no_report_generated);
                                html_utilities.html_br();
                                html_utilities.html_br();
                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt233$Sorry__no_operations_report_could, new SubLObject[]{ start_date, end_date, sort_key, NIL != oneP ? ((SubLObject) ($$$us)) : $$$i, NIL != oneP ? ((SubLObject) (thesauri.first())) : thesauri, optype });
                                html_utilities.html_br();
                                html_utilities.html_br();
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_169, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_ops_report_parameters(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject start_day = html_utilities.html_extract_input($str_alt175$start_day, args);
                SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
                SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
                SubLObject end_day = html_utilities.html_extract_input($str_alt176$end_day, args);
                SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
                SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
                SubLObject sort_string = html_utilities.html_extract_input($$$sort, args);
                SubLObject start_date = tm_logging.tm_make_cyc_date(start_day, start_month, start_year);
                SubLObject end_date = tm_logging.tm_make_cyc_date(end_day, end_month, end_year);
                SubLObject sort_key = find(sort_string, tm_logging.get_ops_log_dispatch_table_value(), symbol_function(EQUALP), symbol_function(THIRD), UNPROVIDED, UNPROVIDED).first();
                SubLObject thesauri = html_utilities.html_extract_input_values($$$thesauri, args);
                SubLObject allP = find($str_alt186$_ALL_, thesauri, symbol_function(EQUALP), UNPROVIDED, UNPROVIDED, UNPROVIDED);
                SubLObject reduced_thesauri = remove($str_alt186$_ALL_, thesauri, symbol_function(EQUALP), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                SubLObject name_lists = (reduced_thesauri.isCons()) ? ((SubLObject) (Mapping.mapcar(symbol_function(EXPLODE_THESAURUS_NAME_SEQUENCE), reduced_thesauri))) : NIL;
                SubLObject thesauri_ids = (name_lists.isCons()) ? ((SubLObject) (Mapping.mapcar(symbol_function(GET_LOGGED_THESAURUS_ID), name_lists))) : NIL;
                SubLObject expanded_ids = (NIL != allP) ? ((SubLObject) (cons($str_alt186$_ALL_, thesauri_ids))) : thesauri_ids;
                SubLObject optype = html_utilities.html_extract_input($$$optype, args);
                tm_logging.tm_process_ops_log_files(start_date, end_date, sort_key, expanded_ids, optype, UNPROVIDED);
                {
                    SubLObject table = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $UTILITY_TABLE_1);
                    if (hash_table_count(table).numG(ZERO_INTEGER)) {
                        tm_present_ops_report(sort_key);
                    } else {
                        tm_no_report_generated(start_date, end_date, sort_key, thesauri, optype);
                    }
                }
            }
            return NIL;
        }
    }

    public static final SubLObject lax_L(SubLObject item1, SubLObject item2) {
        if (item1.isNumber()) {
            if (item2.isNumber()) {
                return numL(item1, item2);
            } else {
                return T;
            }
        } else {
            return NIL;
        }
    }

    public static final SubLObject tm_present_user_date_time_report(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject user_table = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $UTILITY_TABLE_1);
                SubLObject user_keys = hash_table_utilities.hash_table_keys(user_table);
                SubLObject users = Sort.sort(user_keys, symbol_function(STRING_LESSP), UNPROVIDED);
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Operations_Report);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_172 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_173 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_174 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_174, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_173, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Operations_Report);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Operations_Report);
                                html_thesaurus.thesaurus_heading($str_alt236$tm_present_user_date_time_report);
                                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                if (true) {
                                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_175 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_176 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_177 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$User);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_177, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_178 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Date);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_178, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_179 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Time);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_179, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_180 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Operation);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_180, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_176, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                        {
                                            SubLObject cdolist_list_var = users;
                                            SubLObject u = NIL;
                                            for (u = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , u = cdolist_list_var.first()) {
                                                {
                                                    SubLObject date_table = gethash(u, user_table, UNPROVIDED);
                                                    SubLObject date_keys = hash_table_utilities.hash_table_keys(date_table);
                                                    SubLObject dates = Sort.sort(date_keys, symbol_function($sym242$LAX__), UNPROVIDED);
                                                    SubLObject user_printedP = NIL;
                                                    SubLObject cdolist_list_var_181 = dates;
                                                    SubLObject d = NIL;
                                                    for (d = cdolist_list_var_181.first(); NIL != cdolist_list_var_181; cdolist_list_var_181 = cdolist_list_var_181.rest() , d = cdolist_list_var_181.first()) {
                                                        {
                                                            SubLObject forms = gethash(d, date_table, UNPROVIDED);
                                                            SubLObject sorted_forms = Sort.sort(forms, symbol_function($sym242$LAX__), symbol_function(SIXTH));
                                                            SubLObject date_printedP = NIL;
                                                            SubLObject cdolist_list_var_182 = sorted_forms;
                                                            SubLObject f = NIL;
                                                            for (f = cdolist_list_var_182.first(); NIL != cdolist_list_var_182; cdolist_list_var_182 = cdolist_list_var_182.rest() , f = cdolist_list_var_182.first()) {
                                                                {
                                                                    SubLObject description = f.first();
                                                                    SubLObject thesaurus = (seventh(f).first().isNumber()) ? ((SubLObject) (tm_logging.tm_find_term_by_log_id(seventh(f).first(), UNPROVIDED))) : NIL;
                                                                    if ((NIL != tm_internals.thesaurusP(thesaurus)) && (NIL != string_utilities.ends_with(description, $$$as_a_top_term, UNPROVIDED))) {
                                                                        description = cconcatenate(description, new SubLObject[]{ $str_alt245$_in_, tm_internals.thesaurus_name(thesaurus) });
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_183 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                            if (true) {
                                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            }
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_184 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), NIL != user_printedP ? ((SubLObject) ($str_alt22$)) : u);
                                                                                    user_printedP = T;
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_184, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                            if (true) {
                                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            }
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_185 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), NIL != date_printedP ? ((SubLObject) ($str_alt22$)) : tm_logging.tm_make_datestring(d));
                                                                                    date_printedP = T;
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_185, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                            if (true) {
                                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            }
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_186 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), tm_logging.tm_make_timestring(sixth(f)));
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_186, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_187 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), description);
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_187, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_183, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_175, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_172, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_present_date_user_time_report(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject date_table = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $UTILITY_TABLE_1);
                SubLObject date_keys = hash_table_utilities.hash_table_keys(date_table);
                SubLObject dates = Sort.sort(date_keys, symbol_function($sym242$LAX__), UNPROVIDED);
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Operations_Report);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_188 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_189 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_190 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_190, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_189, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Operations_Report);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Operations_Report);
                                html_thesaurus.thesaurus_heading($str_alt247$tm_present_date_user_time_report);
                                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                if (true) {
                                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_191 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_192 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_193 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Date);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_193, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_194 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$User);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_194, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_195 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Time);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_195, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_196 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Operation);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_196, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_192, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                        {
                                            SubLObject cdolist_list_var = dates;
                                            SubLObject d = NIL;
                                            for (d = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , d = cdolist_list_var.first()) {
                                                {
                                                    SubLObject user_table = gethash(d, date_table, UNPROVIDED);
                                                    SubLObject user_keys = hash_table_utilities.hash_table_keys(user_table);
                                                    SubLObject users = Sort.sort(user_keys, symbol_function(STRING_LESSP), UNPROVIDED);
                                                    SubLObject date_printedP = NIL;
                                                    SubLObject cdolist_list_var_197 = users;
                                                    SubLObject u = NIL;
                                                    for (u = cdolist_list_var_197.first(); NIL != cdolist_list_var_197; cdolist_list_var_197 = cdolist_list_var_197.rest() , u = cdolist_list_var_197.first()) {
                                                        {
                                                            SubLObject forms = gethash(u, user_table, UNPROVIDED);
                                                            SubLObject sorted_forms = Sort.sort(forms, symbol_function($sym242$LAX__), symbol_function(SIXTH));
                                                            SubLObject user_printedP = NIL;
                                                            SubLObject cdolist_list_var_198 = sorted_forms;
                                                            SubLObject f = NIL;
                                                            for (f = cdolist_list_var_198.first(); NIL != cdolist_list_var_198; cdolist_list_var_198 = cdolist_list_var_198.rest() , f = cdolist_list_var_198.first()) {
                                                                {
                                                                    SubLObject description = f.first();
                                                                    SubLObject thesaurus = (seventh(f).first().isNumber()) ? ((SubLObject) (tm_logging.tm_find_term_by_log_id(seventh(f).first(), UNPROVIDED))) : NIL;
                                                                    if ((NIL != tm_internals.thesaurusP(thesaurus)) && (NIL != string_utilities.ends_with(description, $$$as_a_top_term, UNPROVIDED))) {
                                                                        description = cconcatenate(description, new SubLObject[]{ $str_alt245$_in_, tm_internals.thesaurus_name(thesaurus) });
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_199 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                            if (true) {
                                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            }
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_200 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), NIL != date_printedP ? ((SubLObject) ($str_alt22$)) : tm_logging.tm_make_datestring(d));
                                                                                    date_printedP = T;
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_200, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                            if (true) {
                                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            }
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_201 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), NIL != user_printedP ? ((SubLObject) ($str_alt22$)) : u);
                                                                                    user_printedP = T;
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_201, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                            if (true) {
                                                                                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            }
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_202 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), tm_logging.tm_make_timestring(sixth(f)));
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_202, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_203 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), description);
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_203, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_199, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_191, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_188, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_present_date_time_user_report(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject date_table = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $UTILITY_TABLE_1);
                SubLObject date_keys = hash_table_utilities.hash_table_keys(date_table);
                SubLObject dates = Sort.sort(copy_list(date_keys), symbol_function($sym242$LAX__), UNPROVIDED);
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Operations_Report);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_204 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_205 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_206 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_206, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_205, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Operations_Report);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Operations_Report);
                                html_thesaurus.thesaurus_heading($str_alt247$tm_present_date_user_time_report);
                                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                if (true) {
                                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_207 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_208 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_209 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Date);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_209, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_210 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Time);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_210, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_211 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$User);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_211, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_212 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $$$Operation);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_212, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_208, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                        {
                                            SubLObject cdolist_list_var = dates;
                                            SubLObject d = NIL;
                                            for (d = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , d = cdolist_list_var.first()) {
                                                {
                                                    SubLObject forms = gethash(d, date_table, UNPROVIDED);
                                                    SubLObject sorted_forms = Sort.sort(copy_list(forms), symbol_function($sym242$LAX__), symbol_function(SIXTH));
                                                    SubLObject date_printedP = NIL;
                                                    SubLObject cdolist_list_var_213 = sorted_forms;
                                                    SubLObject f = NIL;
                                                    for (f = cdolist_list_var_213.first(); NIL != cdolist_list_var_213; cdolist_list_var_213 = cdolist_list_var_213.rest() , f = cdolist_list_var_213.first()) {
                                                        {
                                                            SubLObject string = second(f);
                                                            SubLObject user = (string.isString()) ? ((SubLObject) (string)) : $$$UNKNOWN;
                                                            SubLObject description = f.first();
                                                            SubLObject thesaurus = (seventh(f).first().isNumber()) ? ((SubLObject) (tm_logging.tm_find_term_by_log_id(seventh(f).first(), UNPROVIDED))) : NIL;
                                                            if ((NIL != tm_internals.thesaurusP(thesaurus)) && (NIL != string_utilities.ends_with(description, $$$as_a_top_term, UNPROVIDED))) {
                                                                description = cconcatenate(description, new SubLObject[]{ $str_alt245$_in_, tm_internals.thesaurus_name(thesaurus) });
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_214 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                    if (true) {
                                                                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    }
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_215 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), NIL != date_printedP ? ((SubLObject) ($str_alt22$)) : tm_logging.tm_make_datestring(d));
                                                                            date_printedP = T;
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_215, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                    if (true) {
                                                                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    }
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_216 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), tm_logging.tm_make_timestring(sixth(f)));
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_216, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                    if (true) {
                                                                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        html_utilities.html_markup(html_utilities.html_align($$$middle));
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    }
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_217 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), user);
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_217, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_218 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), description);
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_218, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_214, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_207, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_204, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_present_ops_report(SubLObject sort_key) {
        {
            SubLObject pcase_var = sort_key;
            if (pcase_var.eql($USER_DATE_TIME)) {
                tm_present_user_date_time_report(UNPROVIDED);
            } else
                if (pcase_var.eql($DATE_USER_TIME)) {
                    tm_present_date_user_time_report(UNPROVIDED);
                } else
                    if (pcase_var.eql($DATE_TIME_USER)) {
                        tm_present_date_time_user_report(UNPROVIDED);
                    }


        }
        return NIL;
    }

    public static final SubLObject tm_file_date_time_user_report(SubLObject stream, SubLObject start_date, SubLObject end_date) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject date_table = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $UTILITY_TABLE_1);
                SubLObject date_keys = hash_table_utilities.hash_table_keys(date_table);
                SubLObject dates = Sort.sort(copy_list(date_keys), symbol_function($sym242$LAX__), UNPROVIDED);
                format(stream, $str_alt255$Operations_Report_for__a_to__a__, tm_logging.readable_day(start_date), tm_logging.readable_day(end_date));
                format(stream, $str_alt256$Date_____Time_____User__Operation);
                {
                    SubLObject cdolist_list_var = dates;
                    SubLObject d = NIL;
                    for (d = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , d = cdolist_list_var.first()) {
                        {
                            SubLObject forms = gethash(d, date_table, UNPROVIDED);
                            SubLObject sorted_forms = Sort.sort(copy_list(forms), symbol_function($sym242$LAX__), symbol_function(SIXTH));
                            SubLObject date_printedP = NIL;
                            SubLObject cdolist_list_var_219 = sorted_forms;
                            SubLObject f = NIL;
                            for (f = cdolist_list_var_219.first(); NIL != cdolist_list_var_219; cdolist_list_var_219 = cdolist_list_var_219.rest() , f = cdolist_list_var_219.first()) {
                                {
                                    SubLObject string = second(f);
                                    SubLObject user = (string.isString()) ? ((SubLObject) (string)) : $$$UNKNOWN;
                                    SubLObject description = f.first();
                                    SubLObject thesaurus = (seventh(f).first().isNumber()) ? ((SubLObject) (tm_logging.tm_find_term_by_log_id(seventh(f).first(), UNPROVIDED))) : NIL;
                                    if ((NIL != tm_internals.thesaurusP(thesaurus)) && (NIL != string_utilities.ends_with(description, $$$as_a_top_term, UNPROVIDED))) {
                                        description = cconcatenate(description, new SubLObject[]{ $str_alt245$_in_, tm_internals.thesaurus_name(thesaurus) });
                                    }
                                    format(stream, $str_alt94$_a, NIL != date_printedP ? ((SubLObject) ($str_alt257$________)) : tm_logging.tm_make_datestring(d));
                                    date_printedP = T;
                                    format(stream, $str_alt258$__a, tm_logging.tm_make_timestring(sixth(f)));
                                    format(stream, $str_alt258$__a, user);
                                    format(stream, $str_alt259$__a__, string_utilities.replace_substring(description, format(NIL, $str_alt260$_C, CHAR_newline), format(NIL, $str_alt261$_C________________________, CHAR_newline)));
                                }
                            }
                        }
                    }
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_file_date_user_time_report(SubLObject stream, SubLObject start_date, SubLObject end_date) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject date_table = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $UTILITY_TABLE_1);
                SubLObject date_keys = hash_table_utilities.hash_table_keys(date_table);
                SubLObject dates = Sort.sort(date_keys, symbol_function($sym242$LAX__), UNPROVIDED);
                format(stream, $str_alt255$Operations_Report_for__a_to__a__, tm_logging.readable_day(start_date), tm_logging.readable_day(end_date));
                format(stream, $str_alt262$Date_____User__Time_____Operation);
                {
                    SubLObject cdolist_list_var = dates;
                    SubLObject d = NIL;
                    for (d = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , d = cdolist_list_var.first()) {
                        {
                            SubLObject user_table = gethash(d, date_table, UNPROVIDED);
                            SubLObject user_keys = hash_table_utilities.hash_table_keys(user_table);
                            SubLObject users = Sort.sort(user_keys, symbol_function(STRING_LESSP), UNPROVIDED);
                            SubLObject date_printedP = NIL;
                            SubLObject cdolist_list_var_220 = users;
                            SubLObject u = NIL;
                            for (u = cdolist_list_var_220.first(); NIL != cdolist_list_var_220; cdolist_list_var_220 = cdolist_list_var_220.rest() , u = cdolist_list_var_220.first()) {
                                {
                                    SubLObject forms = gethash(u, user_table, UNPROVIDED);
                                    SubLObject sorted_forms = Sort.sort(forms, symbol_function($sym242$LAX__), symbol_function(SIXTH));
                                    SubLObject user_printedP = NIL;
                                    SubLObject cdolist_list_var_221 = sorted_forms;
                                    SubLObject f = NIL;
                                    for (f = cdolist_list_var_221.first(); NIL != cdolist_list_var_221; cdolist_list_var_221 = cdolist_list_var_221.rest() , f = cdolist_list_var_221.first()) {
                                        {
                                            SubLObject description = f.first();
                                            SubLObject thesaurus = (seventh(f).first().isNumber()) ? ((SubLObject) (tm_logging.tm_find_term_by_log_id(seventh(f).first(), UNPROVIDED))) : NIL;
                                            if ((NIL != tm_internals.thesaurusP(thesaurus)) && (NIL != string_utilities.ends_with(description, $$$as_a_top_term, UNPROVIDED))) {
                                                description = cconcatenate(description, new SubLObject[]{ $str_alt245$_in_, tm_internals.thesaurus_name(thesaurus) });
                                            }
                                            format(stream, $str_alt94$_a, NIL != date_printedP ? ((SubLObject) ($str_alt257$________)) : tm_logging.tm_make_datestring(d));
                                            date_printedP = T;
                                            if (NIL != user_printedP) {
                                                format(stream, $str_alt263$______);
                                            } else {
                                                format(stream, $str_alt264$__a________________, u);
                                            }
                                            user_printedP = T;
                                            format(stream, $str_alt258$__a, tm_logging.tm_make_timestring(sixth(f)));
                                            format(stream, $str_alt259$__a__, string_utilities.replace_substring(description, format(NIL, $str_alt260$_C, CHAR_newline), format(NIL, $str_alt261$_C________________________, CHAR_newline)));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_file_user_date_time_report(SubLObject stream, SubLObject start_date, SubLObject end_date) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject user_table = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $UTILITY_TABLE_1);
                SubLObject user_keys = hash_table_utilities.hash_table_keys(user_table);
                SubLObject users = Sort.sort(user_keys, symbol_function(STRING_LESSP), UNPROVIDED);
                format(stream, $str_alt255$Operations_Report_for__a_to__a__, tm_logging.readable_day(start_date), tm_logging.readable_day(end_date));
                format(stream, $str_alt265$User__Date_____Time_____Operation);
                {
                    SubLObject cdolist_list_var = users;
                    SubLObject u = NIL;
                    for (u = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , u = cdolist_list_var.first()) {
                        {
                            SubLObject date_table = gethash(u, user_table, UNPROVIDED);
                            SubLObject date_keys = hash_table_utilities.hash_table_keys(date_table);
                            SubLObject dates = Sort.sort(date_keys, symbol_function($sym242$LAX__), UNPROVIDED);
                            SubLObject user_printedP = NIL;
                            SubLObject cdolist_list_var_222 = dates;
                            SubLObject d = NIL;
                            for (d = cdolist_list_var_222.first(); NIL != cdolist_list_var_222; cdolist_list_var_222 = cdolist_list_var_222.rest() , d = cdolist_list_var_222.first()) {
                                {
                                    SubLObject forms = gethash(d, date_table, UNPROVIDED);
                                    SubLObject sorted_forms = Sort.sort(forms, symbol_function($sym242$LAX__), symbol_function(SIXTH));
                                    SubLObject date_printedP = NIL;
                                    SubLObject cdolist_list_var_223 = sorted_forms;
                                    SubLObject f = NIL;
                                    for (f = cdolist_list_var_223.first(); NIL != cdolist_list_var_223; cdolist_list_var_223 = cdolist_list_var_223.rest() , f = cdolist_list_var_223.first()) {
                                        {
                                            SubLObject description = f.first();
                                            SubLObject thesaurus = (seventh(f).first().isNumber()) ? ((SubLObject) (tm_logging.tm_find_term_by_log_id(seventh(f).first(), UNPROVIDED))) : NIL;
                                            if ((NIL != tm_internals.thesaurusP(thesaurus)) && (NIL != string_utilities.ends_with(description, $$$as_a_top_term, UNPROVIDED))) {
                                                description = cconcatenate(description, new SubLObject[]{ $str_alt245$_in_, tm_internals.thesaurus_name(thesaurus) });
                                            }
                                            if (NIL != user_printedP) {
                                                format(stream, $str_alt266$_____);
                                            } else {
                                                format(stream, $str_alt267$_a_______, u);
                                            }
                                            user_printedP = T;
                                            format(stream, $str_alt258$__a, NIL != date_printedP ? ((SubLObject) ($str_alt257$________)) : tm_logging.tm_make_datestring(d));
                                            date_printedP = T;
                                            format(stream, $str_alt258$__a, tm_logging.tm_make_timestring(sixth(f)));
                                            format(stream, $str_alt259$__a__, string_utilities.replace_substring(description, format(NIL, $str_alt260$_C, CHAR_newline), format(NIL, $str_alt261$_C________________________, CHAR_newline)));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_file_ops_report(SubLObject stream, SubLObject sort_key, SubLObject start_date, SubLObject end_date) {
        {
            SubLObject pcase_var = sort_key;
            if (pcase_var.eql($USER_DATE_TIME)) {
                tm_file_user_date_time_report(stream, start_date, end_date);
            } else
                if (pcase_var.eql($DATE_USER_TIME)) {
                    tm_file_date_user_time_report(stream, start_date, end_date);
                } else
                    if (pcase_var.eql($DATE_TIME_USER)) {
                        tm_file_date_time_user_report(stream, start_date, end_date);
                    }


        }
        return NIL;
    }

    public static final SubLObject tm_generate_tmap_report(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            tm_logging.log_tmap_events();
            {
                SubLObject today_month_int = tm_logging.cyc_month_integer();
                SubLObject today_month_name = tm_logging.integer_Gmonth(today_month_int);
                SubLObject today_year = integerDivide(tm_logging.cyc_date(), $int$10000);
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Choose_TMAP_Report_Parameters);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_224 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_225 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_226 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_226, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_225, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Choose_TMAP_Report_Parameters);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Choose_TMAP_Report_Parameters);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt41$tm_generate_tmap_report);
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_227 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt269$tm_handle_tmap_report, T, UNPROVIDED);
                                            html_utilities.html_br();
                                            html_utilities.html_markup(html_macros.$html_center_head$.getGlobalValue());
                                            html_utilities.html_submit_input($$$Generate_TMAP_Statistics, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_center_tail$.getGlobalValue());
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_markup(html_macros.$html_center_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_228 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_229 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_230 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_br();
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_230, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_229, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_231 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_232 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $$$Start_Date);
                                                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_232, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_233 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_233, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_234 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $$$End_Date);
                                                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_234, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_231, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_235 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_236 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                    {
                                                                        SubLObject _prev_bind_0_237 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                            html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt144$start_month);
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_238 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    {
                                                                                        SubLObject cdolist_list_var = tm_logging.$integer_month_name_table$.getDynamicValue(thread);
                                                                                        SubLObject pair = NIL;
                                                                                        for (pair = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , pair = cdolist_list_var.first()) {
                                                                                            {
                                                                                                SubLObject name = pair.rest();
                                                                                                html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_239 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                        if (name.equalp(today_month_name)) {
                                                                                                            html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                        }
                                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                        {
                                                                                                            SubLObject _prev_bind_0_240 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                            try {
                                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt94$_a, name);
                                                                                                            } finally {
                                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_240, thread);
                                                                                                            }
                                                                                                        }
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_239, thread);
                                                                                                    }
                                                                                                }
                                                                                                html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_238, thread);
                                                                                }
                                                                            }
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_237, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                    html_utilities.html_text_input($str_alt145$start_year, today_year, FIVE_INTEGER);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_236, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_241 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_indent(TEN_INTEGER);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_241, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_242 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                    {
                                                                        SubLObject _prev_bind_0_243 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                            html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt146$end_month);
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_244 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    {
                                                                                        SubLObject cdolist_list_var = tm_logging.$integer_month_name_table$.getDynamicValue(thread);
                                                                                        SubLObject pair = NIL;
                                                                                        for (pair = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , pair = cdolist_list_var.first()) {
                                                                                            {
                                                                                                SubLObject name = pair.rest();
                                                                                                html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                {
                                                                                                    SubLObject _prev_bind_0_245 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                    try {
                                                                                                        html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                        if (name.equalp(today_month_name)) {
                                                                                                            html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                        }
                                                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                        {
                                                                                                            SubLObject _prev_bind_0_246 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                            try {
                                                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt94$_a, name);
                                                                                                            } finally {
                                                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_246, thread);
                                                                                                            }
                                                                                                        }
                                                                                                    } finally {
                                                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_245, thread);
                                                                                                    }
                                                                                                }
                                                                                                html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_244, thread);
                                                                                }
                                                                            }
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_243, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                    html_utilities.html_text_input($str_alt147$end_year, today_year, FIVE_INTEGER);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_242, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_235, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_247 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_248 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_br();
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_248, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_247, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_228, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                            html_utilities.html_newline(UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_center_tail$.getGlobalValue());
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_227, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_224, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_tmap_report(SubLObject args) {
        {
            SubLObject start_day = $$$01;
            SubLObject end_day = $$$01;
            SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
            SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
            SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
            SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
            SubLObject start_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(start_day, start_month, start_year));
            SubLObject end_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(end_day, end_month, end_year));
            SubLObject pathname = tm_logging.tm_tmap_report_filename(start_month_internal_format, end_month_internal_format);
            if (start_month_internal_format.numG(end_month_internal_format)) {
                return html_thesaurus.tm_message_to_user($str_alt272$Invalid_Parameters_for_TMAP_Stati, format(NIL, $str_alt191$The_end_date___a__preceeds_the_st, tm_logging.readable_month(end_month_internal_format), tm_logging.readable_month(start_month_internal_format)));
            }
            if (NIL != Filesys.probe_file(pathname)) {
                return tm_verify_generate_tmap_report(args);
            } else {
                return tm_handle_tmap_report_parameters(args);
            }
        }
    }

    public static final SubLObject tm_handle_tmap_report_parameters(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject start_day = $$$01;
                SubLObject end_day = $$$01;
                SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
                SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
                SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
                SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
                SubLObject start_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(start_day, start_month, start_year));
                SubLObject end_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(end_day, end_month, end_year));
                if (start_month_internal_format.numG(end_month_internal_format)) {
                    return html_thesaurus.tm_message_to_user($str_alt274$Invalid_Parameters_for_Tmap_Stati, format(NIL, $str_alt191$The_end_date___a__preceeds_the_st, tm_logging.readable_month(end_month_internal_format), tm_logging.readable_month(start_month_internal_format)));
                }
                tm_logging.log_thesaurus_events();
                {
                    SubLObject pathname = tm_logging.tm_maybe_generate_tmap_report(start_month_internal_format, end_month_internal_format);
                    SubLObject tmap_log_files = tm_logging.get_log_filenames($TMAP_LOG, UNPROVIDED);
                    SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ($$$TMAP_Statistics_Results);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    {
                        SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                        try {
                            html_macros.$html_inside_bodyP$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                            if (NIL != color_value) {
                                html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_color(color_value));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_249 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_250 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                    html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_251 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_251, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_250, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                    }
                                    html_utilities.html_princ($$$TMAP_Statistics_Results);
                                    html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    tm_logging.tm_enqueue_event($$$TMAP_Statistics_Results);
                                    html_thesaurus.thesaurus_heading($str_alt277$tm_handle_tmap_report_parameters);
                                    if (pathname.isString()) {
                                        html_utilities.html_princ($str_alt195$Results_are_in_the_file_);
                                        html_thesaurus.tm_link($SHOW_FILE, pathname, pathname, UNPROVIDED);
                                    } else
                                        if (NIL == tmap_log_files) {
                                            html_utilities.html_princ($str_alt278$A_new_TMAP_statistics_file_was_no);
                                            html_utilities.html_princ(tm_datastructures.$tm_report_directory$.getGlobalValue());
                                            html_utilities.html_princ($str_alt197$__);
                                        } else {
                                            html_utilities.html_princ($str_alt279$A_new_TMAP_statistics_file_was_no);
                                        }

                                    html_thesaurus.tm_footer();
                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_249, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                        } finally {
                            html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_verify_generate_tmap_report(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject start_day = $$$01;
                SubLObject end_day = $$$01;
                SubLObject start_month = html_utilities.html_extract_input($str_alt144$start_month, args);
                SubLObject start_year = html_utilities.html_extract_input($str_alt145$start_year, args);
                SubLObject end_month = html_utilities.html_extract_input($str_alt146$end_month, args);
                SubLObject end_year = html_utilities.html_extract_input($str_alt147$end_year, args);
                SubLObject start_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(start_day, start_month, start_year));
                SubLObject end_month_internal_format = tm_logging.month_from_cyc_date(tm_logging.tm_make_cyc_date(end_day, end_month, end_year));
                SubLObject pathname = tm_logging.tm_tmap_report_filename(start_month_internal_format, end_month_internal_format);
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Generate_Tmap_Statistics_Report);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_252 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_253 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_254 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_254, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_253, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Generate_Tmap_Statistics_Report);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Generate_Tmap_Statistics_Report);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt282$tm_verify_generate_tmap_report);
                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt283$Tmap_statistics_for__A_to__A_have, tm_logging.readable_month(start_month_internal_format), tm_logging.readable_month(end_month_internal_format));
                                    html_utilities.html_br();
                                    html_utilities.html_princ($str_alt133$They_can_be_found_in_the_file_);
                                    html_thesaurus.tm_link($SHOW_FILE, pathname, pathname, UNPROVIDED);
                                    html_utilities.html_br();
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_255 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt277$tm_handle_tmap_report_parameters, T, UNPROVIDED);
                                            html_utilities.html_princ($str_alt152$Do_you_wish_to_generate_them_agai);
                                            html_utilities.html_br();
                                            {
                                                SubLObject cdolist_list_var = args;
                                                SubLObject arg_pair = NIL;
                                                for (arg_pair = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , arg_pair = cdolist_list_var.first()) {
                                                    if (arg_pair.isCons()) {
                                                        html_utilities.html_hidden_input(arg_pair.first(), second(arg_pair), UNPROVIDED);
                                                    }
                                                }
                                            }
                                            html_utilities.html_submit_input($$$Overwrite, UNPROVIDED, UNPROVIDED);
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_255, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_252, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_load_thesaurus(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject empty_writable_thesauri = remove_if(symbol_function($sym284$TM_THESAURUS_UNWRITABLE_), tm_internals.empty_thesauri(), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                if (NIL != tm_internals.editing_allowedP()) {
                    if (NIL != empty_writable_thesauri) {
                        {
                            SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                            html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                            html_macros.html_head_content_type();
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                            html_utilities.html_princ($$$Load_Thesaurus);
                            html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                            {
                                SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                                try {
                                    html_macros.$html_inside_bodyP$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                                    if (NIL != color_value) {
                                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_utilities.html_color(color_value));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_256 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                            html_utilities.html_markup(ONE_INTEGER);
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                                html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_257 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                        html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                            html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        }
                                                        if (true) {
                                                            html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            html_utilities.html_markup(ZERO_INTEGER);
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        }
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_258 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_258, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_257, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                            }
                                            html_utilities.html_princ($$$Load_Thesaurus);
                                            html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                            html_utilities.html_markup(ONE_INTEGER);
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            tm_logging.tm_enqueue_event($$$Load_Thesaurus);
                                            if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                                html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                            } else {
                                                html_thesaurus.thesaurus_heading($str_alt10$tm_load_thesaurus);
                                                html_utilities.html_princ($str_alt285$Load_Thesaurus_will_look_for_the_);
                                                html_utilities.html_br();
                                                html_utilities.html_princ(NIL != tm_control_vars.$tm_special_load_thesaurus_directory$.getDynamicValue(thread) ? ((SubLObject) (tm_control_vars.$tm_special_load_thesaurus_directory$.getDynamicValue(thread))) : tm_datastructures.$tm_load_thesaurus_directory$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                                    html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_259 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                                    SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_macros.$within_html_form$.bind(T, thread);
                                                        html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                                        html_utilities.html_hidden_input($str_alt286$tm_load_thesaurus_prioritize_conc, T, UNPROVIDED);
                                                        html_utilities.html_newline(UNPROVIDED);
                                                        html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                                        if (true) {
                                                            html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            html_utilities.html_markup(ZERO_INTEGER);
                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        }
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_260 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_261 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_262 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_princ($str_alt287$Choose_Thesaurus__);
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_262, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_263 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_macros.verify_not_within_html_pre();
                                                                                html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                                                                                {
                                                                                    SubLObject _prev_bind_0_264 = html_macros.$within_html_pre$.currentBinding(thread);
                                                                                    try {
                                                                                        html_macros.$within_html_pre$.bind(T, thread);
                                                                                        html_utilities.html_princ($str_alt288$__);
                                                                                    } finally {
                                                                                        html_macros.$within_html_pre$.rebind(_prev_bind_0_264, thread);
                                                                                    }
                                                                                }
                                                                                html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_263, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_265 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_princ($str_alt289$Choose_Input_Format_);
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_265, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_261, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_266 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                        if (true) {
                                                                            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            html_utilities.html_markup(html_utilities.html_align($LEFT));
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        }
                                                                        if (true) {
                                                                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            html_utilities.html_markup(html_utilities.html_align($TOP));
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        }
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_267 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_thesaurus.tm_thesaurus_selection(empty_writable_thesauri, NIL, $$$thesaurus, NIL);
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_267, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_268 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_268, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                        if (true) {
                                                                            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            html_utilities.html_markup(html_utilities.html_align($LEFT));
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        }
                                                                        if (true) {
                                                                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            html_utilities.html_markup(html_utilities.html_align($TOP));
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        }
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_269 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                {
                                                                                    SubLObject select_size = max(FOUR_INTEGER, min(EIGHT_INTEGER, length(tm_io.$tm_load_read_methods$.getDynamicValue(thread))));
                                                                                    html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                                    html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                    html_utilities.html_markup($$$format);
                                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                    if (NIL != select_size) {
                                                                                        html_utilities.html_markup(html_macros.$html_select_size$.getGlobalValue());
                                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                        html_utilities.html_markup(select_size);
                                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                    }
                                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                    {
                                                                                        SubLObject _prev_bind_0_270 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                        try {
                                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                                            {
                                                                                                SubLObject cdolist_list_var = tm_io.$tm_load_read_methods$.getDynamicValue(thread);
                                                                                                SubLObject output_format = NIL;
                                                                                                for (output_format = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , output_format = cdolist_list_var.first()) {
                                                                                                    html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                    {
                                                                                                        SubLObject _prev_bind_0_271 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                        try {
                                                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                                                            html_utilities.html_princ(string_utilities.string_from_keyword(output_format.first()));
                                                                                                        } finally {
                                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_271, thread);
                                                                                                        }
                                                                                                    }
                                                                                                    html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                                }
                                                                                            }
                                                                                        } finally {
                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_270, thread);
                                                                                        }
                                                                                    }
                                                                                    html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                                }
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_269, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_266, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_260, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                                        html_utilities.html_newline(UNPROVIDED);
                                                        html_utilities.html_princ($str_alt292$Enter_input_filename__including_e);
                                                        html_utilities.html_newline(UNPROVIDED);
                                                        html_utilities.html_text_input($$$filename, $str_alt22$, $int$60);
                                                        html_utilities.html_newline(UNPROVIDED);
                                                        html_utilities.html_newline(UNPROVIDED);
                                                        html_utilities.html_princ($str_alt295$Choose_a_concept_reuse_mode_for_t);
                                                        html_utilities.html_newline(UNPROVIDED);
                                                        {
                                                            SubLObject data = $list_alt296;
                                                            html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(ZERO_INTEGER);
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_272 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    {
                                                                        SubLObject cdolist_list_var = data;
                                                                        SubLObject item = NIL;
                                                                        for (item = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , item = cdolist_list_var.first()) {
                                                                            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_273 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                    {
                                                                                        SubLObject _prev_bind_0_274 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                        try {
                                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                                            html_utilities.html_radio_input($str_alt297$reuse_mode, item.first(), equal(item.first(), $$$none));
                                                                                        } finally {
                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_274, thread);
                                                                                        }
                                                                                    }
                                                                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                    {
                                                                                        SubLObject _prev_bind_0_275 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                        try {
                                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                                            html_utilities.html_princ(second(item));
                                                                                        } finally {
                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_275, thread);
                                                                                        }
                                                                                    }
                                                                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_273, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                                        }
                                                                    }
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_272, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                                        }
                                                        html_utilities.html_newline(UNPROVIDED);
                                                        html_utilities.html_submit_input($$$Load, UNPROVIDED, UNPROVIDED);
                                                        html_utilities.html_reset_input(UNPROVIDED);
                                                        html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                                    } finally {
                                                        html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                                        html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_259, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                            }
                                            html_thesaurus.tm_footer();
                                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_256, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                } finally {
                                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                        }
                    } else {
                        html_thesaurus.tm_error($str_alt300$No_empty_thesauri_are_available_f, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                    }
                } else {
                    {
                        SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                        html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                        html_macros.html_head_content_type();
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ($$$Load_Thesaurus);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                        {
                            SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                            try {
                                html_macros.$html_inside_bodyP$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                                if (NIL != color_value) {
                                    html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_color(color_value));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_276 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                        html_utilities.html_markup(ONE_INTEGER);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                            html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_277 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                    html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                    html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                        html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    }
                                                    if (true) {
                                                        html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_markup(ZERO_INTEGER);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    }
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_278 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_278, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_277, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                        }
                                        html_utilities.html_princ($$$Load_Thesaurus);
                                        html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                        html_utilities.html_markup(ONE_INTEGER);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        tm_logging.tm_enqueue_event($$$Load_Thesaurus);
                                        if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                            html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                        } else {
                                            html_thesaurus.tm_report_editing_disabled();
                                        }
                                        html_thesaurus.tm_footer();
                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_276, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    }
                }
            }
            return NIL;
        }
    }

    /**
     * Returns a pathname for loading a thesaurus data file of FILENAME.
     */
    public static final SubLObject tm_make_load_thesaurus_pathname(SubLObject filename) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject directory = (NIL != tm_control_vars.$tm_special_load_thesaurus_directory$.getDynamicValue(thread)) ? ((SubLObject) (tm_control_vars.$tm_special_load_thesaurus_directory$.getDynamicValue(thread))) : tm_datastructures.$tm_load_thesaurus_directory$.getGlobalValue();
                return file_utilities.relative_filename(directory, filename, UNPROVIDED);
            }
        }
    }

    public static final SubLObject tm_load_thesaurus_prioritize_concept_reuse_thesauri(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject load_thesaurus_name = html_utilities.html_extract_input($$$thesaurus, args);
                SubLObject format_name = html_utilities.html_extract_input($$$format, args);
                SubLObject filename = html_utilities.html_extract_input($$$filename, args);
                SubLObject reuse_specs = html_utilities.html_extract_input_values($str_alt302$reuse_thesauri, args);
                SubLObject next_thesaurus_name = html_utilities.html_extract_input($str_alt303$next_thesaurus, args);
                SubLObject reuse_mode = html_utilities.html_extract_input($str_alt297$reuse_mode, args);
                SubLObject do_load = makeBoolean((NIL != html_utilities.html_extract_input($$$load, args)) || (!reuse_mode.equal($$$priority)));
                SubLObject title = format(NIL, $str_alt306$Specify_Concept_Reuse_Thesauri_fo, load_thesaurus_name);
                SubLObject reuse_thesauri_count = (NIL != next_thesaurus_name) ? ((SubLObject) (add(ONE_INTEGER, length(reuse_specs)))) : length(reuse_specs);
                SubLObject reuse_thesauri = make_vector(reuse_thesauri_count, UNPROVIDED);
                SubLObject load_thesaurus = tm_internals.thesaurus_constant_from_name(load_thesaurus_name);
                SubLObject next_thesaurus = tm_internals.thesaurus_constant_from_name(next_thesaurus_name);
                SubLObject next_position = length(reuse_specs);
                SubLObject pathname = NIL;
                if (!(filename.isString() && length(filename).numG(ZERO_INTEGER))) {
                    return html_thesaurus.tm_error($str_alt307$Please_enter_a_filename_for_the_l, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                pathname = tm_make_load_thesaurus_pathname(filename);
                if (NIL == Filesys.probe_file(pathname)) {
                    return html_thesaurus.tm_error($str_alt308$Load_Thesaurus__file__S_cannot_be, filename, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                if (NIL != do_load) {
                    return tm_handle_load_thesaurus(args);
                }
                if (NIL == constant_handles.valid_constant(load_thesaurus, UNPROVIDED)) {
                    return html_thesaurus.tm_error($str_alt309$Error___S_is_not_the_name_of_a_va, load_thesaurus_name, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                if (NIL != next_thesaurus_name) {
                    if (NIL == constant_handles.valid_constant(next_thesaurus, UNPROVIDED)) {
                        return html_thesaurus.tm_error($str_alt309$Error___S_is_not_the_name_of_a_va, next_thesaurus_name, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                    }
                }
                {
                    SubLObject cdolist_list_var = reuse_specs;
                    SubLObject reuse_spec = NIL;
                    for (reuse_spec = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , reuse_spec = cdolist_list_var.first()) {
                        {
                            SubLObject item = read_from_string_ignoring_errors(reuse_spec, NIL, $EOF, UNPROVIDED, UNPROVIDED);
                            SubLObject datum = item;
                            SubLObject current = datum;
                            SubLObject position = NIL;
                            SubLObject thesaurus_name = NIL;
                            destructuring_bind_must_consp(current, datum, $list_alt311);
                            position = current.first();
                            current = current.rest();
                            destructuring_bind_must_consp(current, datum, $list_alt311);
                            thesaurus_name = current.first();
                            current = current.rest();
                            if (NIL == current) {
                                {
                                    SubLObject thesaurus = tm_internals.thesaurus_constant_from_name(thesaurus_name);
                                    if (NIL != constant_handles.valid_constant(thesaurus, UNPROVIDED)) {
                                        set_aref(reuse_thesauri, position, thesaurus);
                                    } else {
                                        return html_thesaurus.tm_error($str_alt309$Error___S_is_not_the_name_of_a_va, thesaurus_name, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                    }
                                }
                            } else {
                                cdestructuring_bind_error(datum, $list_alt311);
                            }
                        }
                    }
                }
                if (NIL != next_thesaurus) {
                    set_aref(reuse_thesauri, next_position, next_thesaurus);
                }
                {
                    SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    {
                        SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                        try {
                            html_macros.$html_inside_bodyP$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                            if (NIL != color_value) {
                                html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_color(color_value));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_279 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_280 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                    html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_281 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_281, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_280, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                    }
                                    html_utilities.html_princ(title);
                                    html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    tm_logging.tm_enqueue_event(title);
                                    html_thesaurus.thesaurus_heading($str_alt286$tm_load_thesaurus_prioritize_conc);
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_282 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt286$tm_load_thesaurus_prioritize_conc, T, UNPROVIDED);
                                            html_utilities.html_hidden_input($$$thesaurus, load_thesaurus_name, UNPROVIDED);
                                            html_utilities.html_hidden_input($$$format, format_name, UNPROVIDED);
                                            html_utilities.html_hidden_input($$$filename, filename, UNPROVIDED);
                                            html_utilities.html_hidden_input($str_alt297$reuse_mode, reuse_mode, UNPROVIDED);
                                            {
                                                SubLObject vector_var = reuse_thesauri;
                                                SubLObject backwardP_var = NIL;
                                                SubLObject length = length(vector_var);
                                                SubLObject v_iteration = NIL;
                                                for (v_iteration = ZERO_INTEGER; v_iteration.numL(length); v_iteration = add(v_iteration, ONE_INTEGER)) {
                                                    {
                                                        SubLObject position = (NIL != backwardP_var) ? ((SubLObject) (subtract(length, v_iteration, ONE_INTEGER))) : v_iteration;
                                                        SubLObject thesaurus = aref(vector_var, position);
                                                        html_utilities.html_hidden_input($str_alt302$reuse_thesauri, format(NIL, $str_alt312$__A__S_, position, tm_internals.thesaurus_name(thesaurus)), UNPROVIDED);
                                                    }
                                                }
                                            }
                                            if (!length(reuse_thesauri).numE(ZERO_INTEGER)) {
                                                html_utilities.html_princ($str_alt313$When_loading_);
                                                html_utilities.html_princ(load_thesaurus_name);
                                                html_utilities.html_princ($str_alt314$__concepts_from_only_these_thesau);
                                                html_utilities.html_newline(UNPROVIDED);
                                                html_utilities.html_princ($str_alt315$They_are_shown_in_order__from_mos);
                                                html_utilities.html_markup(html_macros.$html_blockquote_head$.getGlobalValue());
                                                {
                                                    SubLObject vector_var = reuse_thesauri;
                                                    SubLObject backwardP_var = NIL;
                                                    SubLObject length = length(vector_var);
                                                    SubLObject v_iteration = NIL;
                                                    for (v_iteration = ZERO_INTEGER; v_iteration.numL(length); v_iteration = add(v_iteration, ONE_INTEGER)) {
                                                        {
                                                            SubLObject element_num = (NIL != backwardP_var) ? ((SubLObject) (subtract(length, v_iteration, ONE_INTEGER))) : v_iteration;
                                                            SubLObject thesaurus = aref(vector_var, element_num);
                                                            html_thesaurus.tm_link($THESAURUS, thesaurus, UNPROVIDED, UNPROVIDED);
                                                            html_utilities.html_newline(UNPROVIDED);
                                                        }
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_blockquote_tail$.getGlobalValue());
                                                html_utilities.html_newline(TWO_INTEGER);
                                            }
                                            {
                                                SubLObject next = add(length(reuse_thesauri), ONE_INTEGER);
                                                SubLObject candidates = NIL;
                                                candidates = remove(load_thesaurus, tm_internals.all_thesauri(), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                                {
                                                    SubLObject vector_var = reuse_thesauri;
                                                    SubLObject backwardP_var = NIL;
                                                    SubLObject length = length(vector_var);
                                                    SubLObject v_iteration = NIL;
                                                    for (v_iteration = ZERO_INTEGER; v_iteration.numL(length); v_iteration = add(v_iteration, ONE_INTEGER)) {
                                                        {
                                                            SubLObject element_num = (NIL != backwardP_var) ? ((SubLObject) (subtract(length, v_iteration, ONE_INTEGER))) : v_iteration;
                                                            SubLObject thesaurus = aref(vector_var, element_num);
                                                            candidates = remove(thesaurus, candidates, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                                        }
                                                    }
                                                }
                                                html_utilities.html_princ($str_alt317$Select_the_);
                                                html_utilities.html_princ(pph_methods_formulas.ordinal_form(next));
                                                html_utilities.html_princ($str_alt318$_thesaurus_to_prefer_for_concept_);
                                                html_utilities.html_newline(UNPROVIDED);
                                                html_thesaurus.tm_thesaurus_selection(candidates, NIL, $str_alt303$next_thesaurus, UNPROVIDED);
                                            }
                                            html_utilities.html_newline(TWO_INTEGER);
                                            html_utilities.html_submit_input($str_alt319$Append_this_thesaurus_to_the_reus, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_newline(UNPROVIDED);
                                            html_utilities.html_submit_input($str_alt320$Don_t_add_another__perform_the_lo, $$$load, UNPROVIDED);
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_282, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                    html_thesaurus.tm_footer();
                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_279, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                        } finally {
                            html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_load_thesaurus(SubLObject args) {
        {
            SubLObject thesaurus_name = html_utilities.html_extract_input($$$thesaurus, args);
            SubLObject format_name = html_utilities.html_extract_input($$$format, args);
            SubLObject filename = html_utilities.html_extract_input($$$filename, args);
            SubLObject reuse_mode_string = html_utilities.html_extract_input($str_alt297$reuse_mode, args);
            SubLObject reuse_specs = html_utilities.html_extract_input_values($str_alt302$reuse_thesauri, args);
            SubLObject thesaurus = NIL;
            SubLObject format = NIL;
            SubLObject pathname = NIL;
            SubLObject reuse_mode = NIL;
            SubLObject reuse_thesauri = NIL;
            SubLObject temp = NIL;
            if (!thesaurus_name.isString()) {
                return html_thesaurus.tm_error($$$Please_choose_a_thesaurus_to_load, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            thesaurus = tm_internals.thesaurus_constant_from_name(thesaurus_name);
            if (NIL == tm_internals.thesaurusP(thesaurus)) {
                return html_thesaurus.tm_error($str_alt323$Could_not_find_a_thesaurus_named_, thesaurus_name, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            if (!format_name.isString()) {
                return html_thesaurus.tm_error($str_alt324$Please_choose_an_input_format_for, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            format = string_utilities.keyword_from_string(format_name);
            if (!(filename.isString() && length(filename).numG(ZERO_INTEGER))) {
                return html_thesaurus.tm_error($str_alt307$Please_enter_a_filename_for_the_l, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            pathname = tm_make_load_thesaurus_pathname(filename);
            if (NIL == Filesys.probe_file(pathname)) {
                return html_thesaurus.tm_error($str_alt308$Load_Thesaurus__file__S_cannot_be, filename, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            if (reuse_mode_string.isString()) {
                reuse_mode = string_utilities.keyword_from_string(Strings.string_upcase(reuse_mode_string, UNPROVIDED, UNPROVIDED));
            } else {
                reuse_mode = $NONE;
            }
            if (NIL == subl_promotions.memberP(reuse_mode, $list_alt326, UNPROVIDED, UNPROVIDED)) {
                return html_thesaurus.tm_error($str_alt327$Unknown_reuse_mode__S, reuse_mode, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            {
                SubLObject cdolist_list_var = reuse_specs;
                SubLObject reuse_spec = NIL;
                for (reuse_spec = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , reuse_spec = cdolist_list_var.first()) {
                    {
                        SubLObject item = read_from_string_ignoring_errors(reuse_spec, NIL, $EOF, UNPROVIDED, UNPROVIDED);
                        SubLObject datum = item;
                        SubLObject current = datum;
                        SubLObject position = NIL;
                        SubLObject thesaurus_name_283 = NIL;
                        destructuring_bind_must_consp(current, datum, $list_alt311);
                        position = current.first();
                        current = current.rest();
                        destructuring_bind_must_consp(current, datum, $list_alt311);
                        thesaurus_name_283 = current.first();
                        current = current.rest();
                        if (NIL == current) {
                            {
                                SubLObject thesaurus_284 = tm_internals.thesaurus_constant_from_name(thesaurus_name_283);
                                if (NIL != constant_handles.valid_constant(thesaurus_284, UNPROVIDED)) {
                                    temp = cons(list(position, thesaurus_284), temp);
                                } else {
                                    return html_thesaurus.tm_error($str_alt309$Error___S_is_not_the_name_of_a_va, thesaurus_name_283, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                }
                            }
                        } else {
                            cdestructuring_bind_error(datum, $list_alt311);
                        }
                    }
                }
            }
            temp = Sort.sort(temp, symbol_function($sym328$_), symbol_function(FIRST));
            reuse_thesauri = Mapping.mapcar(symbol_function(SECOND), temp);
            tm_handle_load_thesaurus_in_thinker(pathname, thesaurus, format, reuse_mode, reuse_thesauri);
        }
        return NIL;
    }

    public static final SubLObject tm_handle_load_thesaurus_in_thinker(SubLObject pathname, SubLObject thesaurus, SubLObject format, SubLObject reuse_mode, SubLObject reuse_thesauri) {
        if (reuse_thesauri == UNPROVIDED) {
            reuse_thesauri = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject thesaurus_name = tm_internals.thesaurus_name(thesaurus);
                SubLObject title = format(NIL, $str_alt332$Loading__A_Thesaurus, thesaurus_name);
                SubLObject successP = NIL;
                successP = tm_datastructures.tm_start_write_operation(thesaurus);
                if (NIL != successP) {
                    {
                        SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                        html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                        html_macros.html_head_content_type();
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                        {
                            SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                            try {
                                html_macros.$html_inside_bodyP$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                                if (NIL != color_value) {
                                    html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_color(color_value));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_285 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                        html_utilities.html_markup(ONE_INTEGER);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                            html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_286 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                    html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                    html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                        html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    }
                                                    if (true) {
                                                        html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_markup(ZERO_INTEGER);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    }
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_287 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_287, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_286, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                        }
                                        html_utilities.html_princ(title);
                                        html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                        html_utilities.html_markup(ONE_INTEGER);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        tm_logging.tm_enqueue_event(title);
                                        html_thesaurus.thesaurus_heading($str_alt333$tm_handle_load_thesaurus);
                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt334$Loading_the__A_thesaurus_from_fil, thesaurus_name);
                                        html_utilities.html_br();
                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt335$_S, pathname);
                                        html_utilities.html_br();
                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt336$in__A_format_, string_utilities.string_from_keyword(format));
                                        html_utilities.html_br();
                                        html_utilities.html_br();
                                        html_utilities.html_princ($str_alt337$Click_the_Status_button_to_track_);
                                        html_thesaurus.tm_footer();
                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_285, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                        html_utilities.html_flush();
                        tm_io.tm_load_thesaurus_in_thinker(pathname, thesaurus, format, reuse_mode, reuse_thesauri);
                    }
                } else {
                    {
                        SubLObject message = cconcatenate($str_alt338$Sorry__loading_thesaurus_, new SubLObject[]{ thesaurus_name, $str_alt339$_is_not_permitted_at_this_time__b });
                        html_thesaurus.tm_message_to_user($$$Load_Not_Started, message);
                    }
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_output_thesaurus_in_thinker(SubLObject thesaurus, SubLObject filename, SubLObject format, SubLObject start_terms, SubLObject cutoff_terms, SubLObject cutoff_level, SubLObject filter, SubLObject v_case) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject thinking = tm_thinking.tm_new_thinking(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_THESAURUS);
                SubLObject thread_288 = tm_thinking.tm_thinking_start(thinking, TM_OUTPUT_THESAURUS_OR_SUBSET_WRAPPER, list(thesaurus, filename, format, start_terms, cutoff_terms, cutoff_level, filter, v_case));
                return thread_288;
            }
        }
    }

    public static final SubLObject tm_delay_output_thesaurus_in_thinker(SubLObject thesaurus, SubLObject filename, SubLObject format, SubLObject start_terms, SubLObject cutoff_terms, SubLObject cutoff_level, SubLObject filter, SubLObject v_case) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject thinking = tm_thinking.tm_new_thinking(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_THESAURUS);
                SubLObject thread_289 = tm_thinking.tm_thinking_delay_start(thinking, TM_OUTPUT_THESAURUS_OR_SUBSET_WRAPPER, list(thesaurus, filename, format, start_terms, cutoff_terms, cutoff_level, filter, v_case));
                return thread_289;
            }
        }
    }

    /**
     * Output THESAURUS to FILENAME in FORMAT, using the output filter FILTER and the case style CASE.
     */
    public static final SubLObject tm_output_thesaurus_or_subset_wrapper(SubLObject thesaurus, SubLObject filename, SubLObject format, SubLObject start_terms, SubLObject cutoff_terms, SubLObject cutoff_level, SubLObject filter, SubLObject v_case) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject success = NIL;
                try {
                    {
                        SubLObject _prev_bind_0 = tm_io.$tm_dump_output_filter$.currentBinding(thread);
                        SubLObject _prev_bind_1 = tm_io.$tm_dump_output_case$.currentBinding(thread);
                        try {
                            tm_io.$tm_dump_output_filter$.bind(filter, thread);
                            tm_io.$tm_dump_output_case$.bind(v_case, thread);
                            tm_io.tm_output_thesaurus_or_subset(thesaurus, filename, format, start_terms, cutoff_terms, cutoff_level);
                            success = T;
                        } finally {
                            tm_io.$tm_dump_output_case$.rebind(_prev_bind_1, thread);
                            tm_io.$tm_dump_output_filter$.rebind(_prev_bind_0, thread);
                        }
                    }
                } finally {
                    {
                        SubLObject _prev_bind_0 = $is_thread_performing_cleanupP$.currentBinding(thread);
                        try {
                            $is_thread_performing_cleanupP$.bind(T, thread);
                            tm_datastructures.tm_finish_read_operation(thesaurus);
                        } finally {
                            $is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                        }
                    }
                }
                if (NIL != success) {
                    return $$$SUCCESS;
                } else {
                    return $$$INCOMPLETE;
                }
            }
        }
    }

    /**
     * Produce a page for specifying thesaurus output mode, format, and content.
     */
    public static final SubLObject tm_output_thesaurus(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Output_Thesaurus);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_290 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_291 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_292 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_292, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_291, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Output_Thesaurus);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Output_Thesaurus);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $str_alt1$advanced_user)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt5$tm_output_thesaurus);
                                    html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                    html_utilities.html_princ($$$Required_parameters);
                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_293 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt346$tm_handle_output_thesaurus, T, UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_294 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_295 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_296 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_princ($str_alt347$Choose_Thesaurus_);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_296, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_297 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_macros.verify_not_within_html_pre();
                                                                    html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                                                                    {
                                                                        SubLObject _prev_bind_0_298 = html_macros.$within_html_pre$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$within_html_pre$.bind(T, thread);
                                                                            html_utilities.html_princ($str_alt288$__);
                                                                        } finally {
                                                                            html_macros.$within_html_pre$.rebind(_prev_bind_0_298, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_297, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_299 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_princ($str_alt348$Choose_Output_Format_);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_299, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_295, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_300 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_301 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_thesaurus.tm_browse_thesaurus_selection(NIL, NIL, $$$thesaurus, T);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_301, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_302 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_macros.verify_not_within_html_pre();
                                                                    html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                                                                    {
                                                                        SubLObject _prev_bind_0_303 = html_macros.$within_html_pre$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$within_html_pre$.bind(T, thread);
                                                                            html_utilities.html_princ($str_alt288$__);
                                                                        } finally {
                                                                            html_macros.$within_html_pre$.rebind(_prev_bind_0_303, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_302, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            if (true) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_304 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    {
                                                                        SubLObject select_size = max(FOUR_INTEGER, min(EIGHT_INTEGER, length(tm_io.$tm_dump_write_methods$.getDynamicValue(thread))));
                                                                        html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                        html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        html_utilities.html_markup($$$format);
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        if (NIL != select_size) {
                                                                            html_utilities.html_markup(html_macros.$html_select_size$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            html_utilities.html_markup(select_size);
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        }
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_305 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                {
                                                                                    SubLObject cdolist_list_var = tm_io.$tm_dump_write_methods$.getDynamicValue(thread);
                                                                                    SubLObject output_format = NIL;
                                                                                    for (output_format = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , output_format = cdolist_list_var.first()) {
                                                                                        if (output_format.first() != $TEST) {
                                                                                            html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                            {
                                                                                                SubLObject _prev_bind_0_306 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                try {
                                                                                                    html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                    if (output_format.equal(tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $DEFAULT_OUTPUT_FORMAT))) {
                                                                                                        html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                    }
                                                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                    {
                                                                                                        SubLObject _prev_bind_0_307 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                        try {
                                                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                                                            html_utilities.html_princ(string_utilities.string_from_keyword(output_format.first()));
                                                                                                        } finally {
                                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_307, thread);
                                                                                                        }
                                                                                                    }
                                                                                                } finally {
                                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_306, thread);
                                                                                                }
                                                                                            }
                                                                                            html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                        }
                                                                                    }
                                                                                }
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_305, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                    }
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_304, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_300, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_294, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt351$Enter_Destination_Filename__one_w);
                                            html_utilities.html_br();
                                            html_utilities.html_text_input($$$filename, $str_alt22$, $int$30);
                                            html_utilities.html_br();
                                            html_utilities.html_submit_input($$$Output, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_reset_input($$$Reset);
                                            html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                            html_utilities.html_princ($$$Optional_parameters);
                                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            {
                                                SubLObject current_filter = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_FILTER);
                                                SubLObject current_filter_name = current_filter.first();
                                                SubLObject current_filter_constant = (current_filter_name.isString()) ? ((SubLObject) (tm_internals.tm_filter_from_name(current_filter_name))) : NIL;
                                                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_308 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_309 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_310 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_utilities.html_princ($str_alt357$Current_Output_Filter___);
                                                                        if (NIL != constant_handles.valid_constantP(current_filter_constant, UNPROVIDED)) {
                                                                            html_thesaurus.tm_link($OUTPUT_FILTER, current_filter_constant, UNPROVIDED, UNPROVIDED);
                                                                        } else {
                                                                            html_utilities.html_princ($$$None);
                                                                        }
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_310, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_311 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_macros.verify_not_within_html_pre();
                                                                        html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                                                                        {
                                                                            SubLObject _prev_bind_0_312 = html_macros.$within_html_pre$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$within_html_pre$.bind(T, thread);
                                                                                html_utilities.html_princ($str_alt288$__);
                                                                            } finally {
                                                                                html_macros.$within_html_pre$.rebind(_prev_bind_0_312, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_311, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_313 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_utilities.html_princ($str_alt359$Choose_A_Different_Filter_);
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_313, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_309, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_314 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_315 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        if (NIL != tm_internals.editing_allowedP()) {
                                                                            html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                                            html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                                            html_utilities.html_princ($str_alt360$tm_edit_output_filter);
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_316 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    html_utilities.html_princ($$$Define_a_New_Filter);
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_316, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                                            html_utilities.html_br();
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                                        html_utilities.html_princ($str_alt7$tm_output_filter_page);
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                        {
                                                                            SubLObject _prev_bind_0_317 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                                html_utilities.html_princ($$$Examine_Filters);
                                                                            } finally {
                                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_317, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_315, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_318 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        html_macros.verify_not_within_html_pre();
                                                                        html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                                                                        {
                                                                            SubLObject _prev_bind_0_319 = html_macros.$within_html_pre$.currentBinding(thread);
                                                                            try {
                                                                                html_macros.$within_html_pre$.bind(T, thread);
                                                                                html_utilities.html_princ($str_alt288$__);
                                                                            } finally {
                                                                                html_macros.$within_html_pre$.rebind(_prev_bind_0_319, thread);
                                                                            }
                                                                        }
                                                                        html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_318, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                {
                                                                    SubLObject _prev_bind_0_320 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                    try {
                                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                                        {
                                                                            SubLObject output_filters = tm_internals.tm_all_filters();
                                                                            SubLObject select_size = max(FOUR_INTEGER, min(EIGHT_INTEGER, length(output_filters)));
                                                                            html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                                                            html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            html_utilities.html_markup($str_alt363$output_filter);
                                                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            if (NIL != select_size) {
                                                                                html_utilities.html_markup(html_macros.$html_select_size$.getGlobalValue());
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                                html_utilities.html_markup(select_size);
                                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                            }
                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                            {
                                                                                SubLObject _prev_bind_0_321 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                try {
                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                    html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                    {
                                                                                        SubLObject _prev_bind_0_322 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                        try {
                                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                            if (NIL == current_filter_constant) {
                                                                                                html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                            }
                                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                            {
                                                                                                SubLObject _prev_bind_0_323 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                try {
                                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                                    html_utilities.html_princ($str_alt364$_None_);
                                                                                                } finally {
                                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_323, thread);
                                                                                                }
                                                                                            }
                                                                                        } finally {
                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_322, thread);
                                                                                        }
                                                                                    }
                                                                                    html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                    html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                    {
                                                                                        SubLObject _prev_bind_0_324 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                        try {
                                                                                            html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                            {
                                                                                                SubLObject _prev_bind_0_325 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                try {
                                                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                                                    html_utilities.html_princ($str_alt365$_Default___If_available_for_Thesa);
                                                                                                } finally {
                                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_325, thread);
                                                                                                }
                                                                                            }
                                                                                        } finally {
                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_324, thread);
                                                                                        }
                                                                                    }
                                                                                    html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                    {
                                                                                        SubLObject cdolist_list_var = output_filters;
                                                                                        SubLObject output_filter = NIL;
                                                                                        for (output_filter = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , output_filter = cdolist_list_var.first()) {
                                                                                            html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                                                            {
                                                                                                SubLObject _prev_bind_0_326 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                try {
                                                                                                    html_macros.$html_safe_print$.bind(NIL, thread);
                                                                                                    if (output_filter.equal(current_filter_constant)) {
                                                                                                        html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                                                    }
                                                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                                                    {
                                                                                                        SubLObject _prev_bind_0_327 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                                                        try {
                                                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                                                            html_utilities.html_princ(tm_internals.tm_filter_name(output_filter));
                                                                                                        } finally {
                                                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_327, thread);
                                                                                                        }
                                                                                                    }
                                                                                                } finally {
                                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_326, thread);
                                                                                                }
                                                                                            }
                                                                                            html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                                                        }
                                                                                    }
                                                                                } finally {
                                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_321, thread);
                                                                                }
                                                                            }
                                                                            html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                                                        }
                                                                    } finally {
                                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_320, thread);
                                                                    }
                                                                }
                                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_314, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_308, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                            }
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt366$Choose_Case_Style_for_Output_);
                                            html_utilities.html_markup(html_macros.$html_select_head$.getGlobalValue());
                                            {
                                                SubLObject _prev_bind_0_328 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(NIL, thread);
                                                    html_utilities.html_markup(html_macros.$html_select_name$.getGlobalValue());
                                                    html_utilities.html_princ($$$case);
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_329 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                            {
                                                                SubLObject _prev_bind_0_330 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(NIL, thread);
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_331 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            html_utilities.html_princ($$$Upper);
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_331, thread);
                                                                        }
                                                                    }
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_330, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                            {
                                                                SubLObject _prev_bind_0_332 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(NIL, thread);
                                                                    html_utilities.html_princ(html_macros.$html_option_selected$.getGlobalValue());
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_333 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            html_utilities.html_princ($$$Mixed);
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_333, thread);
                                                                        }
                                                                    }
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_332, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                            html_utilities.html_markup(html_macros.$html_option_head$.getGlobalValue());
                                                            {
                                                                SubLObject _prev_bind_0_334 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(NIL, thread);
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_335 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            html_utilities.html_princ($$$Lower);
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_335, thread);
                                                                        }
                                                                    }
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_334, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_option_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_329, thread);
                                                        }
                                                    }
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_328, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_select_tail$.getGlobalValue());
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt371$Enter_start_terms__each_on_a_sepa);
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt372$Output_will_include_these_terms_a);
                                            html_utilities.html_princ($str_alt373$If_no_start_terms_are_specified__);
                                            html_utilities.html_br();
                                            html_utilities.html_markup(html_macros.$html_textarea_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_textarea_name$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup($str_alt374$start_terms);
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_textarea_cols$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup($int$60);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_textarea_rows$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(FIVE_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_336 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_336, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_textarea_tail$.getGlobalValue());
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt375$Restrict_output_to_a_specific_num);
                                            html_utilities.html_text_input($str_alt376$num_levels, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt377$Only_output_terms_broader_than_an);
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt378$_Enter_cutoff_terms__each_on_a_se);
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt379$Output_will_not_include_any_narro);
                                            html_utilities.html_br();
                                            html_utilities.html_markup(html_macros.$html_textarea_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_textarea_name$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup($str_alt380$stop_terms);
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_textarea_cols$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup($int$60);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_textarea_rows$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(FIVE_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_337 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_337, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_textarea_tail$.getGlobalValue());
                                            html_utilities.html_br();
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_293, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_290, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    // defparameter
    public static final SubLSymbol $tm_output_thesaurus_extension_map$ = makeSymbol("*TM-OUTPUT-THESAURUS-EXTENSION-MAP*");

    /**
     * Constructs a pathname to output a thesaurus from FILENAME and EXTENSION
     */
    public static final SubLObject tm_make_output_thesaurus_pathname(SubLObject filename, SubLObject extension) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject directory = (NIL != tm_control_vars.$tm_special_output_directory$.getDynamicValue(thread)) ? ((SubLObject) (tm_control_vars.$tm_special_output_directory$.getDynamicValue(thread))) : tm_datastructures.$tm_output_directory$.getGlobalValue();
                return file_utilities.relative_filename(directory, filename, extension);
            }
        }
    }

    public static final SubLObject tm_handle_output_thesaurus(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject thesaurus_name = html_utilities.html_extract_input($$$thesaurus, args);
                SubLObject format_name = html_utilities.html_extract_input($$$format, args);
                SubLObject filename = html_utilities.html_extract_input($$$filename, args);
                SubLObject output_filter_name = html_utilities.html_extract_input($str_alt363$output_filter, args);
                SubLObject v_case = html_utilities.html_extract_input($$$case, args);
                SubLObject start_terms = html_utilities.html_extract_input($str_alt374$start_terms, args);
                SubLObject num_levels = html_utilities.html_extract_input($str_alt376$num_levels, args);
                SubLObject cutoff_terms = html_utilities.html_extract_input($str_alt380$stop_terms, args);
                SubLObject start_concepts = NIL;
                SubLObject cutoff_concepts = NIL;
                SubLObject output_filter_constant = NIL;
                SubLObject thesaurus = NIL;
                SubLObject format = NIL;
                SubLObject extension = NIL;
                SubLObject pathname = NIL;
                if (NIL == thesaurus_name) {
                    return html_thesaurus.tm_error($str_alt383$Output_Thesaurus__You_must_choose, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                if (NIL == format_name) {
                    return html_thesaurus.tm_error($str_alt384$Output_Thesaurus__You_must_choose, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                if ((NIL == filename) || filename.equalp($str_alt22$)) {
                    return html_thesaurus.tm_error($str_alt385$Output_Thesaurus__You_must_specif, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                thesaurus = tm_internals.thesaurus_constant_from_name(thesaurus_name);
                if (NIL == tm_internals.thesaurusP(thesaurus)) {
                    return html_thesaurus.tm_error($str_alt386$Output_Thesaurus___S_is_not_a_kno, thesaurus_name, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                format = string_utilities.keyword_from_string(Strings.string_upcase(format_name, UNPROVIDED, UNPROVIDED));
                if (NIL == assoc(format, tm_io.$tm_dump_write_methods$.getDynamicValue(thread), UNPROVIDED, UNPROVIDED)) {
                    return html_thesaurus.tm_error($str_alt387$Output_Thesaurus___S_is_not_a_kno, format, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                extension = assoc(format, $tm_output_thesaurus_extension_map$.getDynamicValue(thread), UNPROVIDED, UNPROVIDED).rest();
                tm_datastructures.change_tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $DEFAULT_OUTPUT_FORMAT, format, UNPROVIDED);
                if (NIL != output_filter_name) {
                    if (!output_filter_name.equalp($str_alt364$_None_)) {
                        if (output_filter_name.equalp($str_alt365$_Default___If_available_for_Thesa)) {
                            output_filter_constant = tm_internals.tm_default_output_filter(thesaurus);
                            if (NIL != output_filter_constant) {
                                output_filter_name = tm_internals.tm_filter_name(output_filter_constant);
                            } else {
                                output_filter_name = $str_alt364$_None_;
                            }
                        } else {
                            output_filter_constant = tm_internals.tm_filter_from_name(output_filter_name);
                        }
                    }
                }
                if (NIL != tm_internals.tm_filterP(output_filter_constant)) {
                    {
                        SubLObject new_filter_info = NIL;
                        new_filter_info = tm_internals.tm_filter_info(output_filter_constant, T);
                        tm_internals.tm_set_filter_info_entry(new_filter_info, $kw388$USE_FILTER_, T);
                        tm_internals.tm_set_filter_info_entry(new_filter_info, $kw389$USE_FILTER_MAP_, T);
                        tm_internals.tm_set_filter_info_entry(new_filter_info, $FILTER_TYPE, $OUTPUT);
                        tm_datastructures.change_tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_FILTER, list(output_filter_name, new_filter_info), UNPROVIDED);
                    }
                } else {
                    tm_datastructures.change_tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_FILTER, NIL, UNPROVIDED);
                }
                if (NIL != v_case) {
                    v_case = string_utilities.keyword_from_string(Strings.string_upcase(v_case, UNPROVIDED, UNPROVIDED));
                }
                if (start_terms.equalp($str_alt22$)) {
                    start_terms = NIL;
                } else {
                    start_terms = Mapping.mapcar(symbol_function(CANONICALIZE_LEXICAL_TERM), string_utilities.extract_lines(start_terms));
                }
                {
                    SubLObject cdolist_list_var = start_terms;
                    SubLObject start_term = NIL;
                    for (start_term = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , start_term = cdolist_list_var.first()) {
                        {
                            SubLObject concept = NIL;
                            SubLObject lexpred = NIL;
                            try {
                                concept = tm_internals.concept_from_term_lexpred_in_thesaurus(start_term, $$preferredTerm, thesaurus);
                            } catch (Throwable ccatch_env_var) {
                                lexpred = Errors.handleThrowable(ccatch_env_var, $MULTIPLE_LEXPRED);
                            }
                            if (NIL != lexpred) {
                                return html_thesaurus.tm_error($str_alt394$_A_has_multiple_preferred_term_st, start_term, tm_internals.thesaurus_name(thesaurus), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                            }
                            if (NIL != constant_handles.valid_constantP(concept, UNPROVIDED)) {
                                start_concepts = cons(concept, start_concepts);
                            } else {
                                return html_thesaurus.tm_error($str_alt395$_A_is_not_a_preferred_term_in__A_, start_term, tm_internals.thesaurus_name(thesaurus), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                            }
                        }
                    }
                }
                if (string_utilities.trim_whitespace(cutoff_terms).equalp($str_alt22$)) {
                    cutoff_terms = NIL;
                } else {
                    cutoff_terms = Mapping.mapcar(symbol_function(CANONICALIZE_LEXICAL_TERM), string_utilities.extract_lines(cutoff_terms));
                }
                {
                    SubLObject cdolist_list_var = cutoff_terms;
                    SubLObject cutoff_term = NIL;
                    for (cutoff_term = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , cutoff_term = cdolist_list_var.first()) {
                        {
                            SubLObject concept = tm_internals.concept_from_term_lexpred_in_thesaurus(cutoff_term, $$preferredTerm, thesaurus);
                            if (NIL != forts.valid_fortP(concept)) {
                                cutoff_concepts = cons(concept, cutoff_concepts);
                            } else {
                                return html_thesaurus.tm_error($str_alt396$Cutoff_terms_must_be_present_in_t, cutoff_term, tm_internals.thesaurus_name(thesaurus), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                            }
                        }
                    }
                }
                if (string_utilities.trim_whitespace(num_levels).equalp($str_alt22$)) {
                    num_levels = NIL;
                } else {
                    num_levels = read_from_string_ignoring_errors(num_levels, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                if (NIL != num_levels) {
                    if (NIL == subl_promotions.positive_integer_p(num_levels)) {
                        return html_thesaurus.tm_error($str_alt397$_A_is_not_a_valid_number_of_level, num_levels, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                    }
                }
                pathname = tm_make_output_thesaurus_pathname(filename, extension);
                {
                    SubLObject thinking = tm_delay_output_thesaurus_in_thinker(thesaurus, pathname, format, start_concepts, cutoff_concepts, num_levels, second(tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_FILTER)), v_case);
                    tm_datastructures.change_tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_THESAURUS_STATE, thinking, UNPROVIDED);
                    if (NIL != Filesys.probe_file(pathname)) {
                        return tm_verify_output_to_file(pathname);
                    }
                    {
                        SubLObject successP = NIL;
                        successP = tm_datastructures.tm_start_read_operation(thesaurus);
                        if (NIL != successP) {
                            tm_thinking.tm_thinking_start_after_delay(thinking);
                            tm_notify_output_in_progress();
                        } else {
                            {
                                SubLObject message = cconcatenate($str_alt399$Output_of_thesaurus_, new SubLObject[]{ thesaurus_name, $str_alt400$_is_not_permitted_at_this_time__b });
                                html_thesaurus.tm_message_to_user($$$Ouput_Not_Started, message);
                            }
                        }
                    }
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_verify_output_to_file(SubLObject pathname) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Verify_Output_Thesaurus_to_File);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_338 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_339 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_340 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_340, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_339, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Verify_Output_Thesaurus_to_File);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Verify_Output_Thesaurus_to_File);
                                html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                    html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_341 = html_macros.$html_safe_print$.currentBinding(thread);
                                    SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                    SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_macros.$within_html_form$.bind(T, thread);
                                        html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                        html_utilities.html_hidden_input($str_alt404$tm_handle_verify_output_to_file, T, UNPROVIDED);
                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt405$The_file_named__A_already_exists_, pathname);
                                        html_utilities.html_submit_input($$$Overwrite, UNPROVIDED, UNPROVIDED);
                                        html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                    } finally {
                                        html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                        html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_341, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_338, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_verify_output_to_file(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject thinking = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_THESAURUS_STATE);
                SubLObject thesaurus = nth(ZERO_INTEGER, tm_thinking.tm_thinking_args(thinking));
                SubLObject successP = NIL;
                successP = tm_datastructures.tm_start_read_operation(thesaurus);
                if (NIL != successP) {
                    tm_thinking.tm_thinking_start_after_delay(thinking);
                    tm_notify_output_in_progress();
                } else {
                    {
                        SubLObject message = cconcatenate($str_alt399$Output_of_thesaurus_, new SubLObject[]{ tm_internals.thesaurus_name(thesaurus), $str_alt400$_is_not_permitted_at_this_time__b });
                        html_thesaurus.tm_message_to_user($$$Ouput_Not_Started, message);
                    }
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_notify_output_in_progress() {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject thinking = tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_THESAURUS_STATE);
                SubLObject thesaurus = nth(ZERO_INTEGER, tm_thinking.tm_thinking_args(thinking));
                SubLObject pathname = nth(ONE_INTEGER, tm_thinking.tm_thinking_args(thinking));
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Output_Thesaurus_Underway);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_342 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_343 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_344 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_344, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_343, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Output_Thesaurus_Underway);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Output_Thesaurus_Underway);
                                html_thesaurus.thesaurus_heading($str_alt408$tm_notify_output_in_progress);
                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt409$Outputting__A_to_file__A, tm_internals.thesaurus_name(thesaurus), pathname);
                                html_utilities.html_br();
                                html_utilities.html_br();
                                html_utilities.html_princ($str_alt410$To_check_the_status_of_your_outpu);
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_342, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                return NIL;
            }
        }
    }

    public static final SubLObject tm_of(SubLObject args) {
        tm_output_filter_page(args);
        return NIL;
    }

    public static final SubLObject tm_output_filter_page(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject filter_id = (args.isCons()) ? ((SubLObject) (read_from_string_ignoring_errors(args.first(), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED))) : NIL;
                SubLObject all_filter_constants = tm_internals.tm_all_filters();
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Filters);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_345 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_346 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_347 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_347, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_346, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Filters);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Filters);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $str_alt1$advanced_user)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt7$tm_output_filter_page);
                                    html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                    html_utilities.html_princ($$$Available_Filters);
                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    html_utilities.html_br();
                                    html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                    if (true) {
                                        html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(ZERO_INTEGER);
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    if (true) {
                                        html_utilities.html_markup(html_macros.$html_table_cellpadding$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(ZERO_INTEGER);
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    if (true) {
                                        html_utilities.html_markup(html_macros.$html_table_cellspacing$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(ZERO_INTEGER);
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_348 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$html_indent_table_max$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$html_indent_table_max$.bind(TWENTY_INTEGER, thread);
                                            if (NIL != all_filter_constants) {
                                                {
                                                    SubLObject cdolist_list_var = all_filter_constants;
                                                    SubLObject filter_constant = NIL;
                                                    for (filter_constant = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , filter_constant = cdolist_list_var.first()) {
                                                        {
                                                            SubLObject indent = THREE_INTEGER;
                                                            SubLObject span = max(ONE_INTEGER, subtract(html_macros.$html_indent_table_max$.getDynamicValue(thread), indent));
                                                            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_349 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_indent_row_internal(indent);
                                                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                                    if (NIL != span) {
                                                                        html_utilities.html_markup(html_macros.$html_table_data_colspan$.getGlobalValue());
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                        html_utilities.html_markup(span);
                                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    }
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_350 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            html_thesaurus.tm_link($OUTPUT_FILTER, filter_constant, UNPROVIDED, UNPROVIDED);
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_350, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_349, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                        }
                                                    }
                                                }
                                            } else {
                                                {
                                                    SubLObject indent = THREE_INTEGER;
                                                    SubLObject span = max(ONE_INTEGER, subtract(html_macros.$html_indent_table_max$.getDynamicValue(thread), indent));
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_351 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_indent_row_internal(indent);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            if (NIL != span) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_colspan$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(span);
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_352 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_princ($str_alt364$_None_);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_352, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_351, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                }
                                            }
                                            if (NIL != tm_internals.editing_allowedP()) {
                                                {
                                                    SubLObject indent = ZERO_INTEGER;
                                                    SubLObject span = max(ONE_INTEGER, subtract(html_macros.$html_indent_table_max$.getDynamicValue(thread), indent));
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_353 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_indent_row_internal(indent);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            if (NIL != span) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_colspan$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(span);
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_354 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_br();
                                                                    html_utilities.html_br();
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_354, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_353, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                }
                                                {
                                                    SubLObject indent = ZERO_INTEGER;
                                                    SubLObject span = max(ONE_INTEGER, subtract(html_macros.$html_indent_table_max$.getDynamicValue(thread), indent));
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_355 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_indent_row_internal(indent);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            if (NIL != span) {
                                                                html_utilities.html_markup(html_macros.$html_table_data_colspan$.getGlobalValue());
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                html_utilities.html_markup(span);
                                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                            }
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_356 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                                                    html_utilities.html_princ($str_alt360$tm_edit_output_filter);
                                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                                    {
                                                                        SubLObject _prev_bind_0_357 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                        try {
                                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                                            html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
                                                                            html_utilities.html_princ($$$Define_a_New_Filter);
                                                                            html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
                                                                        } finally {
                                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_357, thread);
                                                                        }
                                                                    }
                                                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_356, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_355, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                }
                                            }
                                            html_utilities.html_indent_table_internal(ONE_INTEGER);
                                        } finally {
                                            html_macros.$html_indent_table_max$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_348, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                    if (NIL != filter_id) {
                                        html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                        tm_output_filter_info(filter_id);
                                    }
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_345, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_output_filter_info(SubLObject filter_id) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject filter_constant = html_thesaurus.tm_guess_fort(filter_id);
                if (NIL != tm_internals.tm_filterP(filter_constant)) {
                    {
                        SubLObject filter_list = Sort.sort(tm_internals.tm_relations_with_filter_information(filter_constant), symbol_function($sym414$TM_PRED_SYMBOL__), UNPROVIDED);
                        SubLObject filter_name = tm_internals.tm_filter_name(filter_constant);
                        SubLObject thesauri_for_default_output = tm_internals.tm_thesauri_for_which_default_output_filter(filter_constant);
                        SubLObject thesauri_for_default_display = tm_internals.tm_thesauri_for_which_default_display_filter(filter_constant);
                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt415$Information_on_Filter____a_, filter_name);
                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        html_utilities.html_br();
                        html_utilities.html_br();
                        if (NIL != thesauri_for_default_display) {
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt416$This_filter_is_the_default_displa);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                            {
                                SubLObject cdolist_list_var = thesauri_for_default_display;
                                SubLObject thesaurus = NIL;
                                for (thesaurus = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , thesaurus = cdolist_list_var.first()) {
                                    if (!thesaurus.eql(thesauri_for_default_display.first())) {
                                        html_utilities.html_princ($str_alt417$__);
                                    }
                                    html_thesaurus.tm_link($THESAURUS, thesaurus, UNPROVIDED, UNPROVIDED);
                                }
                            }
                            html_utilities.html_br();
                            html_utilities.html_br();
                        }
                        if (NIL != thesauri_for_default_output) {
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt418$This_filter_is_the_default_output);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                            {
                                SubLObject cdolist_list_var = thesauri_for_default_output;
                                SubLObject thesaurus = NIL;
                                for (thesaurus = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , thesaurus = cdolist_list_var.first()) {
                                    if (!thesaurus.eql(thesauri_for_default_output.first())) {
                                        html_utilities.html_princ($str_alt417$__);
                                    }
                                    html_thesaurus.tm_link($THESAURUS, thesaurus, UNPROVIDED, UNPROVIDED);
                                }
                            }
                            html_utilities.html_br();
                            html_utilities.html_br();
                        }
                        if (NIL != tm_internals.editing_allowedP()) {
                            html_thesaurus.tm_link($EDIT_FILTER, filter_id, UNPROVIDED, UNPROVIDED);
                            html_utilities.html_br();
                            html_thesaurus.tm_link($DELETE_FILTER, filter_id, UNPROVIDED, UNPROVIDED);
                            html_utilities.html_br();
                        }
                        html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                        if (true) {
                            html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(ZERO_INTEGER);
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_caption_head$.getGlobalValue());
                                if (true) {
                                    html_utilities.html_markup(html_macros.$html_caption_align$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align($TOP));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_358 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_princ($str_alt22$);
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_358, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_caption_tail$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_359 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_360 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_princ($str_alt421$Actual_Relation_);
                                                html_utilities.html_indent(TWO_INTEGER);
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_360, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_361 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_princ($str_alt422$Will_Output_As_);
                                                html_utilities.html_indent(TWO_INTEGER);
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_361, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_362 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_princ($str_alt423$Display_with_Name_);
                                                html_utilities.html_indent(TWO_INTEGER);
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_362, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_359, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                                {
                                    SubLObject cdolist_list_var = filter_list;
                                    SubLObject relation_symbol = NIL;
                                    for (relation_symbol = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , relation_symbol = cdolist_list_var.first()) {
                                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_363 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_364 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                        html_utilities.html_princ(relation_symbol);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_364, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                thread.resetMultipleValues();
                                                {
                                                    SubLObject symbol_filtered_to = tm_internals.tm_output_as_relation_according_to_filter(relation_symbol, filter_constant);
                                                    SubLObject output_status = thread.secondMultipleValue();
                                                    thread.resetMultipleValues();
                                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_365 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            if (output_status.eql($DO_NOT_OUTPUT)) {
                                                                html_utilities.html_princ($str_alt425$Don_t_output);
                                                            } else
                                                                if (output_status.eql($NOT_A_THESAURUS_RELATION)) {
                                                                    html_utilities.html_princ($str_alt425$Don_t_output);
                                                                } else
                                                                    if (output_status.eql($FILTERED)) {
                                                                        html_utilities.html_princ(symbol_filtered_to);
                                                                    } else
                                                                        if (output_status.eql($DEFAULT) && symbol_filtered_to.isString()) {
                                                                            html_utilities.html_princ(symbol_filtered_to);
                                                                        } else {
                                                                            html_utilities.html_princ($str_alt425$Don_t_output);
                                                                        }



                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_365, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                    thread.resetMultipleValues();
                                                    {
                                                        SubLObject print_name_of = tm_internals.tm_output_with_print_name_according_to_filter((output_status.eql($DEFAULT) || output_status.eql($FILTERED)) && symbol_filtered_to.isString() ? ((SubLObject) (symbol_filtered_to)) : relation_symbol, filter_constant);
                                                        SubLObject print_status = thread.secondMultipleValue();
                                                        thread.resetMultipleValues();
                                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                        {
                                                            SubLObject _prev_bind_0_366 = html_macros.$html_safe_print$.currentBinding(thread);
                                                            try {
                                                                html_macros.$html_safe_print$.bind(T, thread);
                                                                if (output_status.eql($DO_NOT_OUTPUT) || output_status.eql($NOT_A_THESAURUS_RELATION)) {
                                                                    html_utilities.html_princ($str_alt429$Won_t_Display);
                                                                } else
                                                                    if (print_status.eql($FILTERED)) {
                                                                        html_utilities.html_princ(print_name_of);
                                                                    } else
                                                                        if (print_status.eql($DEFAULT) && print_name_of.isString()) {
                                                                            html_utilities.html_princ(print_name_of);
                                                                        } else {
                                                                            html_utilities.html_princ($str_alt429$Won_t_Display);
                                                                        }


                                                            } finally {
                                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_366, thread);
                                                            }
                                                        }
                                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                    }
                                                }
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_363, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                    }
                                }
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                    }
                }
                return NIL;
            }
        }
    }

    /**
     * comment
     */
    public static final SubLObject tm_handle_set_values(SubLObject args) {
        {
            SubLObject filter_id = html_utilities.html_extract_input($str_alt430$filter_id, args);
            SubLObject filter_cmd = html_utilities.html_extract_input($str_alt431$filter_cmd, args);
            return tm_edit_output_filter(list(filter_id, filter_cmd));
        }
    }

    public static final SubLObject tm_set_value_form(SubLObject filter_id) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
            html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
            if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
            }
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_macros.$within_html_form$.bind(T, thread);
                    html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                    html_utilities.html_hidden_input($str_alt433$tm_handle_set_values, T, UNPROVIDED);
                    html_utilities.html_hidden_input($str_alt430$filter_id, NIL != filter_id ? ((SubLObject) (filter_id)) : $$$NIL, UNPROVIDED);
                    html_utilities.html_submit_input($$$Redisplay_values, UNPROVIDED, UNPROVIDED);
                    html_utilities.html_indent(FOUR_INTEGER);
                    html_utilities.html_radio_input($str_alt431$filter_cmd, $$$1, UNPROVIDED);
                    html_utilities.html_indent(ONE_INTEGER);
                    html_utilities.html_princ($str_alt437$Set_all_to__Output_as_is_);
                    html_utilities.html_indent(FOUR_INTEGER);
                    html_utilities.html_radio_input($str_alt431$filter_cmd, $$$0, UNPROVIDED);
                    html_utilities.html_indent(ONE_INTEGER);
                    html_utilities.html_princ($str_alt439$Set_all_to__Do_not_output_);
                    html_utilities.html_indent(FOUR_INTEGER);
                    html_utilities.html_radio_input($str_alt431$filter_cmd, $$$C, T);
                    html_utilities.html_indent(ONE_INTEGER);
                    html_utilities.html_princ($$$Current_values);
                    html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                } finally {
                    html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                    html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
            return NIL;
        }
    }

    /**
     * If an id is passed in as the first of args, treat this as an edit
     * operation.  Otherwise, treat it as a new filter creation.
     */
    public static final SubLObject tm_edit_output_filter(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject filter_id = (args.isCons()) ? ((SubLObject) (args.first())) : NIL;
                SubLObject filter_cmd = (args.isCons() && args.rest().isCons()) ? ((SubLObject) (cadr(args))) : NIL;
                SubLObject filter_constant = NIL;
                SubLObject filter_name = NIL;
                SubLObject filter_map = NIL;
                if (NIL != filter_id) {
                    filter_constant = html_thesaurus.tm_guess_fort(filter_id);
                    if (NIL == constant_handles.valid_constantP(filter_constant, UNPROVIDED)) {
                        return html_thesaurus.tm_error($str_alt442$Couldn_t_determine_a_filter_from_, filter_id, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                    }
                    if (NIL != tm_internals.tm_filterP(filter_constant)) {
                        filter_map = tm_internals.tm_make_filter_current(filter_constant);
                    }
                    filter_name = tm_internals.tm_filter_name(filter_constant);
                }
                {
                    SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(format(NIL, $str_alt443$_a_Filter___a, NIL != filter_constant ? ((SubLObject) ($$$Edit)) : $$$Define, NIL != filter_name ? ((SubLObject) (filter_name)) : $str_alt22$));
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    {
                        SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                        try {
                            html_macros.$html_inside_bodyP$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                            if (NIL != color_value) {
                                html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_color(color_value));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_367 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_368 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                    html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                if (true) {
                                                    html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(ZERO_INTEGER);
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                }
                                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                {
                                                    SubLObject _prev_bind_0_369 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind(T, thread);
                                                    } finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_369, thread);
                                                    }
                                                }
                                                html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_368, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                    }
                                    html_utilities.html_princ(format(NIL, $str_alt443$_a_Filter___a, NIL != filter_constant ? ((SubLObject) ($$$Edit)) : $$$Define, NIL != filter_name ? ((SubLObject) (filter_name)) : $str_alt22$));
                                    html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    tm_logging.tm_enqueue_event(format(NIL, $str_alt443$_a_Filter___a, NIL != filter_constant ? ((SubLObject) ($$$Edit)) : $$$Define, NIL != filter_name ? ((SubLObject) (filter_name)) : $str_alt22$));
                                    html_thesaurus.thesaurus_heading($str_alt360$tm_edit_output_filter);
                                    html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                    tm_set_value_form(filter_id);
                                    html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_370 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt446$tm_handle_edit_output_filter, T, UNPROVIDED);
                                            html_utilities.html_hidden_input($str_alt430$filter_id, filter_id, UNPROVIDED);
                                            html_utilities.html_princ($str_alt447$Save_Filter_As___);
                                            html_utilities.html_text_input($str_alt448$filter_name, filter_name, TWENTY_INTEGER);
                                            html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                            {
                                                SubLObject cdolist_list_var = remove_duplicates(append(NIL != tm_internals.tm_filterP(filter_constant) ? ((SubLObject) (tm_internals.tm_relations_with_filter_information(filter_constant))) : NIL, tm_internals.tm_active_relation_symbols_sorted()), symbol_function(EQUALP), UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                                SubLObject relation_symbol = NIL;
                                                for (relation_symbol = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , relation_symbol = cdolist_list_var.first()) {
                                                    html_utilities.html_hidden_input($$$XXX, T, UNPROVIDED);
                                                    {
                                                        SubLObject input_name = format(NIL, $str_alt450$_a_radio, relation_symbol);
                                                        SubLObject output_as = NIL;
                                                        SubLObject print_name_of = NIL;
                                                        SubLObject output_as_status = NIL;
                                                        SubLObject print_name_of_status = NIL;
                                                        SubLObject selected_button = NIL;
                                                        if (NIL != filter_map) {
                                                            thread.resetMultipleValues();
                                                            {
                                                                SubLObject symbol = tm_internals.tm_output_as_relation_according_to_filter(relation_symbol, filter_constant);
                                                                SubLObject status = thread.secondMultipleValue();
                                                                thread.resetMultipleValues();
                                                                output_as = symbol;
                                                                output_as_status = status;
                                                            }
                                                            thread.resetMultipleValues();
                                                            {
                                                                SubLObject symbol = tm_internals.tm_output_with_print_name_according_to_filter(relation_symbol, filter_constant);
                                                                SubLObject status = thread.secondMultipleValue();
                                                                thread.resetMultipleValues();
                                                                print_name_of = symbol;
                                                                print_name_of_status = status;
                                                            }
                                                        } else {
                                                            output_as = relation_symbol;
                                                            print_name_of = relation_symbol;
                                                        }
                                                        if (filter_cmd.equal($$$0)) {
                                                            selected_button = $DO_NOT_OUTPUT;
                                                        } else
                                                            if (filter_cmd.equal($$$1)) {
                                                                selected_button = $OUTPUT_AS_IS;
                                                            } else
                                                                if (output_as_status.eql($DO_NOT_OUTPUT)) {
                                                                    selected_button = $DO_NOT_OUTPUT;
                                                                } else
                                                                    if (output_as_status.eql($FILTERED) && relation_symbol.equal(output_as)) {
                                                                        selected_button = $OUTPUT_AS_IS;
                                                                    } else
                                                                        if (output_as_status.eql($FILTERED)) {
                                                                            selected_button = $SPECIFY;
                                                                        } else
                                                                            if (print_name_of_status.eql($FILTERED)) {
                                                                                selected_button = $PRINT_NAME;
                                                                            } else
                                                                                if (relation_symbol.equal(output_as)) {
                                                                                    selected_button = $OUTPUT_AS_IS;
                                                                                } else {
                                                                                    selected_button = $SPECIFY;
                                                                                }






                                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                                        html_utilities.html_princ(relation_symbol);
                                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                                        html_utilities.html_br();
                                                        html_utilities.html_radio_input(input_name, $$$SAME, eql(selected_button, $OUTPUT_AS_IS));
                                                        html_utilities.html_indent(ONE_INTEGER);
                                                        html_utilities.html_princ($$$Output_as_is);
                                                        html_utilities.html_indent(FOUR_INTEGER);
                                                        html_utilities.html_radio_input(input_name, $$$NO, eql(selected_button, $DO_NOT_OUTPUT));
                                                        html_utilities.html_indent(TWO_INTEGER);
                                                        html_utilities.html_princ($$$Do_not_output);
                                                        html_utilities.html_indent(FOUR_INTEGER);
                                                        html_utilities.html_radio_input(input_name, $$$SPECIFY, eql(selected_button, $SPECIFY));
                                                        html_utilities.html_indent(TWO_INTEGER);
                                                        html_utilities.html_princ($str_alt459$Output_as__);
                                                        {
                                                            SubLObject v_default = ((!output_as.equal(relation_symbol)) && (NIL != output_as)) ? ((SubLObject) (output_as)) : tm_internals.max_broader_relation(relation_symbol);
                                                            html_utilities.html_text_input(format(NIL, $str_alt460$_a_text, relation_symbol), v_default, TEN_INTEGER);
                                                        }
                                                        html_utilities.html_indent(FOUR_INTEGER);
                                                        html_utilities.html_radio_input(input_name, $$$PRINT, eql(selected_button, $PRINT_NAME));
                                                        html_utilities.html_indent(TWO_INTEGER);
                                                        html_utilities.html_princ($str_alt462$Display_with_Name__);
                                                        {
                                                            SubLObject v_default = (selected_button.eql($PRINT_NAME) && print_name_of.isString()) ? ((SubLObject) (print_name_of)) : $str_alt22$;
                                                            html_utilities.html_text_input(format(NIL, $str_alt463$_a_print_name, relation_symbol), v_default, TEN_INTEGER);
                                                        }
                                                        html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                                    }
                                                }
                                            }
                                            html_utilities.html_submit_input($$$Submit_Changes, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_reset_input(UNPROVIDED);
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_370, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                    html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                    tm_set_value_form(filter_id);
                                    html_thesaurus.tm_footer();
                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_367, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri(UNPROVIDED);
                        } finally {
                            html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                }
                return NIL;
            }
        }
    }

    public static final SubLObject tm_handle_edit_output_filter(SubLObject args) {
        {
            SubLObject save_name = html_utilities.html_extract_input($str_alt448$filter_name, args);
            SubLObject filter_id_string = html_utilities.html_extract_input($str_alt430$filter_id, args);
            SubLObject filter_id = (length(string_utilities.trim_whitespace(filter_id_string)).numG(ZERO_INTEGER)) ? ((SubLObject) (filter_id_string)) : NIL;
            save_name = string_utilities.string_subst($str_alt22$, $str_alt23$_, Strings.string_capitalize(save_name, UNPROVIDED, UNPROVIDED), UNPROVIDED);
            if (NIL != filter_id) {
                {
                    SubLObject filter_constant = html_thesaurus.tm_guess_fort(filter_id);
                    if (NIL != constant_handles.valid_constantP(filter_constant, UNPROVIDED)) {
                        if (tm_internals.tm_filter_name(filter_constant).equal(save_name)) {
                            tm_really_handle_edit_output_filter(args);
                        } else {
                            tm_handle_create_output_filter(args);
                        }
                    } else {
                        return html_thesaurus.tm_error($str_alt466$Could_not_determine_a_valid_filte, filter_id, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                    }
                }
            } else {
                tm_handle_create_output_filter(args);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_delete_output_filter(SubLObject args) {
        {
            SubLObject filter_id = (args.isCons()) ? ((SubLObject) (args.first())) : NIL;
            SubLObject filter_name = NIL;
            SubLObject filter_constant = NIL;
            if (NIL != filter_id) {
                filter_constant = html_thesaurus.tm_guess_fort(filter_id);
            } else {
                return html_thesaurus.tm_error($str_alt468$Can_t_determine_a_filter_from__A, filter_id, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            if (NIL == constant_handles.valid_constantP(filter_constant, UNPROVIDED)) {
                return html_thesaurus.tm_error($str_alt468$Can_t_determine_a_filter_from__A, filter_id, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            filter_name = tm_internals.tm_filter_name(filter_constant);
            tm_datastructures.clear_output_filter_from_tm_state(filter_name);
            tm_internals.do_delete_output_filter(filter_constant);
            html_thesaurus.tm_note_edit_change(format(NIL, $str_alt469$Delete_Filter__A, filter_name));
        }
        return NIL;
    }

    public static final SubLObject tm_handle_create_output_filter(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject save_name = html_utilities.html_extract_input($str_alt448$filter_name, args);
                SubLObject ops = NIL;
                SubLObject filter_constant = NIL;
                if (save_name.isString()) {
                    save_name = string_utilities.string_subst($str_alt22$, $str_alt23$_, Strings.string_capitalize(save_name, UNPROVIDED, UNPROVIDED), UNPROVIDED);
                } else {
                    return html_thesaurus.tm_error($str_alt471$Create_Filter__You_must_give_a_no, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                if (NIL != tm_datastructures.tm_name_string_lookup(save_name)) {
                    return html_thesaurus.tm_error($str_alt472$Create_Filter__The_name__S_is_alr, save_name, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                if (save_name.equalp($str_alt22$)) {
                    return html_thesaurus.tm_error($str_alt471$Create_Filter__You_must_give_a_no, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                }
                filter_constant = tm_internals.do_create_output_filter(save_name);
                thread.resetMultipleValues();
                {
                    SubLObject relation_mappings = tm_construct_filter_mapping_lists(filter_constant, args);
                    SubLObject print_name_mappings = thread.secondMultipleValue();
                    thread.resetMultipleValues();
                    ops = tm_internals.tm_make_ops_to_edit_filter(filter_constant, relation_mappings, print_name_mappings);
                }
                thread.resetMultipleValues();
                {
                    SubLObject bad = tm_internals.check_operations(ops);
                    SubLObject good = thread.secondMultipleValue();
                    SubLObject verifyP = thread.thirdMultipleValue();
                    thread.resetMultipleValues();
                    if (NIL == good) {
                        html_tm_editing.html_show_bad_ops_page(bad);
                    } else {
                        html_tm_editing.do_good_ops_results(bad, good, symbol_function(TM_UPDATE_FILTER_AND_OUTPUT_FILTER_INFO), list(cb_utilities.cb_fort_identifier(filter_constant)), $$$Define_Filter, UNPROVIDED);
                    }
                }
            }
            return NIL;
        }
    }

    /**
     * Preconditions: (tm-filter? filter-constant) => T
     * args is of the form of that returned by the html form for tm-edit-output-filter
     */
    public static final SubLObject tm_construct_filter_mapping_lists(SubLObject filter_constant, SubLObject args) {
        {
            SubLObject relation_mapping = NIL;
            SubLObject print_name_mapping = NIL;
            SubLObject cdolist_list_var = remove_duplicates(append(tm_internals.tm_relations_with_filter_information(filter_constant), tm_internals.tm_active_relation_symbols_sorted()), symbol_function(EQUALP), UNPROVIDED, UNPROVIDED, UNPROVIDED);
            SubLObject relation_symbol = NIL;
            for (relation_symbol = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , relation_symbol = cdolist_list_var.first()) {
                {
                    SubLObject radio_name = format(NIL, $str_alt450$_a_radio, relation_symbol);
                    SubLObject text_name = format(NIL, $str_alt460$_a_text, relation_symbol);
                    SubLObject print_name = format(NIL, $str_alt463$_a_print_name, relation_symbol);
                    SubLObject disposition = html_utilities.html_extract_input(radio_name, args);
                    SubLObject output_as = html_utilities.html_extract_input(text_name, args);
                    SubLObject print_name_of = html_utilities.html_extract_input(print_name, args);
                    if (output_as.isString()) {
                        output_as = Strings.string_upcase(output_as, UNPROVIDED, UNPROVIDED);
                    }
                    if (disposition.equal($$$SAME)) {
                        relation_mapping = cons(cons(relation_symbol, $OUTPUT_AS_IS), relation_mapping);
                    } else
                        if (disposition.equal($$$NO)) {
                            relation_mapping = cons(cons(relation_symbol, $DO_NOT_OUTPUT), relation_mapping);
                        } else
                            if (disposition.equal($$$SPECIFY)) {
                                if (relation_symbol.equal(output_as) || output_as.equal($str_alt22$)) {
                                    relation_mapping = cons(cons(relation_symbol, $OUTPUT_AS_IS), relation_mapping);
                                } else {
                                    relation_mapping = cons(cons(relation_symbol, output_as), relation_mapping);
                                }
                            } else
                                if (disposition.equal($$$PRINT)) {
                                    if (!print_name_of.equal(relation_symbol)) {
                                        print_name_mapping = cons(cons(relation_symbol, print_name_of), print_name_mapping);
                                    }
                                }



                }
            }
            return values(relation_mapping, print_name_mapping);
        }
    }

    public static final SubLObject tm_update_filter_and_output_filter_info(SubLObject filter_id) {
        {
            SubLObject filter_constant = html_thesaurus.tm_guess_fort(filter_id);
            if (NIL != tm_internals.tm_filterP(filter_constant)) {
                tm_internals.tm_make_filter_current(filter_constant);
                tm_output_filter_info(filter_id);
            }
        }
        return NIL;
    }

    public static final SubLObject tm_really_handle_edit_output_filter(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject filter_name = html_utilities.html_extract_input($str_alt448$filter_name, args);
                {
                    SubLObject filter_constant = tm_internals.tm_filter_from_name(filter_name);
                    SubLObject ops = NIL;
                    if (NIL == constant_handles.valid_constantP(filter_constant, UNPROVIDED)) {
                        return html_thesaurus.tm_error($str_alt442$Couldn_t_determine_a_filter_from_, filter_name, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                    }
                    thread.resetMultipleValues();
                    {
                        SubLObject relation_mappings = tm_construct_filter_mapping_lists(filter_constant, args);
                        SubLObject print_name_mappings = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        ops = tm_internals.tm_make_ops_to_edit_filter(filter_constant, relation_mappings, print_name_mappings);
                    }
                    if (NIL == ops) {
                        return html_thesaurus.tm_message_to_user($$$No_Changes_to_Perform, $str_alt477$No_filter_changes_were_specified_);
                    }
                    thread.resetMultipleValues();
                    {
                        SubLObject bad = tm_internals.check_operations(ops);
                        SubLObject good = thread.secondMultipleValue();
                        SubLObject verifyP = thread.thirdMultipleValue();
                        thread.resetMultipleValues();
                        if (NIL == good) {
                            html_tm_editing.html_show_bad_ops_page(bad);
                        } else {
                            html_tm_editing.do_good_ops_results(bad, good, symbol_function(TM_UPDATE_FILTER_AND_OUTPUT_FILTER_INFO), list(cb_utilities.cb_fort_identifier(filter_constant)), $$$Edit_Filter, UNPROVIDED);
                        }
                    }
                }
                {
                    SubLObject filter_constant = tm_internals.tm_filter_from_name(filter_name);
                    if (tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $DISPLAY_FILTER).first().equalp(filter_name)) {
                        if (NIL != tm_internals.tm_filterP(filter_constant)) {
                            {
                                SubLObject current_filter_info = second(tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $DISPLAY_FILTER));
                                SubLObject new_filter_info = NIL;
                                tm_internals.tm_make_filter_current(filter_constant);
                                if (NIL != tm_internals.tm_filter_infoP(current_filter_info)) {
                                    new_filter_info = tm_internals.tm_filter_info(filter_constant, UNPROVIDED);
                                    {
                                        SubLObject cdolist_list_var = $list_alt480;
                                        SubLObject filter_info_field = NIL;
                                        for (filter_info_field = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , filter_info_field = cdolist_list_var.first()) {
                                            tm_internals.tm_set_filter_info_entry(new_filter_info, filter_info_field, tm_internals.tm_get_filter_info_entry(current_filter_info, filter_info_field));
                                        }
                                    }
                                } else {
                                    new_filter_info = tm_internals.tm_filter_info(filter_constant, UNPROVIDED);
                                }
                                tm_internals.tm_set_filter_info_entry(new_filter_info, $FILTER_TYPE, $DISPLAY);
                                tm_datastructures.change_tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $DISPLAY_FILTER, list(filter_name, new_filter_info), UNPROVIDED);
                            }
                        } else {
                            tm_datastructures.change_tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $DISPLAY_FILTER, NIL, UNPROVIDED);
                        }
                    }
                    if (tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_FILTER).first().equalp(filter_name)) {
                        if (NIL != tm_internals.tm_filterP(filter_constant)) {
                            {
                                SubLObject current_filter_info = second(tm_datastructures.tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_FILTER));
                                SubLObject new_filter_info = NIL;
                                tm_internals.tm_make_filter_current(filter_constant);
                                if (NIL != tm_internals.tm_filter_infoP(current_filter_info)) {
                                    new_filter_info = tm_internals.tm_filter_info(filter_constant, T);
                                    {
                                        SubLObject cdolist_list_var = $list_alt480;
                                        SubLObject filter_info_field = NIL;
                                        for (filter_info_field = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , filter_info_field = cdolist_list_var.first()) {
                                            tm_internals.tm_set_filter_info_entry(new_filter_info, filter_info_field, tm_internals.tm_get_filter_info_entry(current_filter_info, filter_info_field));
                                        }
                                    }
                                } else {
                                    new_filter_info = tm_internals.tm_filter_info(filter_constant, T);
                                }
                                tm_internals.tm_set_filter_info_entry(new_filter_info, $FILTER_TYPE, $OUTPUT);
                                tm_datastructures.change_tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_FILTER, list(filter_name, new_filter_info), UNPROVIDED);
                            }
                        } else {
                            tm_datastructures.change_tm_value(tm_datastructures.$tm_user$.getDynamicValue(thread), $OUTPUT_FILTER, NIL, UNPROVIDED);
                        }
                    }
                }
            }
            return NIL;
        }
    }

    public static final SubLObject tm_rebuild_alpha(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Rebuild_Alphabetical_Index);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_371 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_372 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_373 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_373, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_372, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Rebuild_Alphabetical_Index);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Rebuild_Alphabetical_Index);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt483$tm_rebuild_alpha);
                                    {
                                        SubLObject index_size = add(kb_indexing.num_predicate_extent_index($$preferredTerm, UNPROVIDED), kb_indexing.num_predicate_extent_index($$useFor, UNPROVIDED));
                                        SubLObject hour_estimate = integerDivide(index_size, $int$48000);
                                        SubLObject minute_estimate = integerDivide(index_size, $int$800);
                                        if (minute_estimate.numG(ONE_INTEGER)) {
                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt487$This_operation_could_take__A__A_o, hour_estimate.numG(ZERO_INTEGER) ? ((SubLObject) (hour_estimate)) : minute_estimate, hour_estimate.numE(ONE_INTEGER) ? ((SubLObject) ($$$hour)) : hour_estimate.numG(ONE_INTEGER) ? ((SubLObject) ($$$hours)) : $$$minutes);
                                        } else {
                                            html_utilities.html_princ($str_alt491$The_operation_should_only_take_a_);
                                        }
                                        html_utilities.html_br();
                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                        html_utilities.html_princ($str_alt492$Do_you_wish_to_continue_);
                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                        html_utilities.html_br();
                                        html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                            html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        }
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0_374 = html_macros.$html_safe_print$.currentBinding(thread);
                                            SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                            SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                html_macros.$within_html_form$.bind(T, thread);
                                                html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                                html_utilities.html_hidden_input($str_alt493$tm_handle_rebuild_alpha, T, UNPROVIDED);
                                                html_utilities.html_submit_input($$$Do_It, UNPROVIDED, UNPROVIDED);
                                                html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                            } finally {
                                                html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                                html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_374, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                    }
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_371, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_rebuild_alpha(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($str_alt496$Rebuilding_Alphabetical_Index____);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_375 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_376 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_377 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_377, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_376, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($str_alt496$Rebuilding_Alphabetical_Index____);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($str_alt496$Rebuilding_Alphabetical_Index____);
                                html_thesaurus.thesaurus_heading($str_alt493$tm_handle_rebuild_alpha);
                                html_utilities.html_princ($str_alt497$Rebuild_in_progress_);
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_375, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            html_utilities.html_flush();
            tm_datastructures.tm_rebuild_alphabetical_index(T, UNPROVIDED);
            return NIL;
        }
    }

    public static final SubLObject tm_manage_tmap(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Manage_Access_Protocol_Server);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_378 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_379 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_380 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_380, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_379, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Manage_Access_Protocol_Server);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Manage_Access_Protocol_Server);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt47$tm_manage_tmap);
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_381 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt499$tm_handle_manage_tmap, $$$prefs, UNPROVIDED);
                                            html_utilities.html_reset_input($$$Reset);
                                            html_utilities.html_submit_input($$$Update_Controls, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt502$Select_the_thesaurus_manager_acce);
                                            html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
                                            html_utilities.html_princ($$$Authentication_Control);
                                            html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_checkbox_input($str_alt504$require_user, $$$T, tm_api.$tmap_user_required$.getDynamicValue(thread), UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_princ($str_alt505$__Require_user_identification_);
                                            html_utilities.html_br();
                                            html_utilities.html_checkbox_input($str_alt506$require_password, $$$T, tm_api.$tmap_password_required$.getDynamicValue(thread), UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_princ($str_alt507$__Require_user_password_);
                                            html_utilities.html_br();
                                            html_utilities.html_checkbox_input($str_alt508$require_application, $$$T, tm_api.$tmap_group_required$.getDynamicValue(thread), UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_princ($str_alt509$__Require_application_identificat);
                                            html_utilities.html_hr(UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
                                            html_utilities.html_princ($$$Logging_Control);
                                            html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_checkbox_input($str_alt511$session_logging, $$$T, tm_api.$log_tmap_sessions$.getDynamicValue(thread), UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_princ($str_alt512$__Log_protocol_sessions_);
                                            html_utilities.html_br();
                                            html_utilities.html_checkbox_input($str_alt513$command_logging, $$$T, tm_api.$log_tmap_commands$.getDynamicValue(thread), UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_princ($str_alt514$__Log_protocol_commands_);
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_381, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_378, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_manage_tmap(SubLObject args) {
        {
            SubLObject alist = list_utilities.remove_if_not(symbol_function(CONSP), args, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            SubLObject command_logging = NIL;
            SubLObject session_logging = NIL;
            SubLObject require_application = NIL;
            SubLObject require_password = NIL;
            SubLObject require_user = NIL;
            {
                SubLObject val = cadr(assoc($str_alt504$require_user, alist, symbol_function(STRING_EQUAL), UNPROVIDED));
                if (NIL != val) {
                    require_user = funcall(symbol_function(READ_FROM_STRING_IGNORING_ERRORS), val);
                }
            }
            {
                SubLObject val = cadr(assoc($str_alt506$require_password, alist, symbol_function(STRING_EQUAL), UNPROVIDED));
                if (NIL != val) {
                    require_password = funcall(symbol_function(READ_FROM_STRING_IGNORING_ERRORS), val);
                }
            }
            {
                SubLObject val = cadr(assoc($str_alt508$require_application, alist, symbol_function(STRING_EQUAL), UNPROVIDED));
                if (NIL != val) {
                    require_application = funcall(symbol_function(READ_FROM_STRING_IGNORING_ERRORS), val);
                }
            }
            {
                SubLObject val = cadr(assoc($str_alt511$session_logging, alist, symbol_function(STRING_EQUAL), UNPROVIDED));
                if (NIL != val) {
                    session_logging = funcall(symbol_function(READ_FROM_STRING_IGNORING_ERRORS), val);
                }
            }
            {
                SubLObject val = cadr(assoc($str_alt513$command_logging, alist, symbol_function(STRING_EQUAL), UNPROVIDED));
                if (NIL != val) {
                    command_logging = funcall(symbol_function(READ_FROM_STRING_IGNORING_ERRORS), val);
                }
            }
            tm_api.$tmap_user_required$.setDynamicValue(require_user);
            tm_api.$tmap_password_required$.setDynamicValue(require_password);
            tm_api.$tmap_group_required$.setDynamicValue(require_application);
            tm_api.$log_tmap_sessions$.setDynamicValue(session_logging);
            tm_api.$log_tmap_commands$.setDynamicValue(command_logging);
        }
        html_thesaurus.tm_message_to_user($str_alt519$Manage_Access_Protocol_Server_Res, $str_alt520$The_thesaurus_manager_access_prot);
        return NIL;
    }

    /**
     * presents a page of information about the Cyc installation for thesaurus managers
     */
    public static final SubLObject tm_system_info(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$System_Information);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_382 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_383 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_384 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_384, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_383, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$System_Information);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$System_Information);
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt49$tm_system_info);
                                    html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                    if (true) {
                                        html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(ZERO_INTEGER);
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_385 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            show_master_transcript_info();
                                            show_write_transcript_info();
                                            show_operation_info();
                                            show_system_info();
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_385, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_382, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject show_master_transcript_info() {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_386 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt523$Communication_Mode__);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_386, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_387 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_princ(operation_communication.communication_mode());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_387, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_colspan$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(TWO_INTEGER);
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_388 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_princ($str_alt524$_should_be_TRANSMIT_AND_RECEIVE_);
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_388, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_colspan$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(TWO_INTEGER);
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_389 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_macros.verify_not_within_html_pre();
                            html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                            {
                                SubLObject _prev_bind_0_390 = html_macros.$within_html_pre$.currentBinding(thread);
                                try {
                                    html_macros.$within_html_pre$.bind(T, thread);
                                    html_utilities.html_princ($str_alt23$_);
                                } finally {
                                    html_macros.$within_html_pre$.rebind(_prev_bind_0_390, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_389, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_391 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt525$Save_Operations_);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_391, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_392 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            if (NIL != tm_control_vars.$tm_default_save_operations_value$.getDynamicValue(thread)) {
                                html_utilities.html_princ($$$Yes);
                            } else {
                                html_utilities.html_princ($str_alt527$No_);
                                html_utilities.html_br();
                                html_utilities.html_princ($str_alt528$Check_the_install_time_parameter_);
                                html_utilities.html_br();
                                html_utilities.html_princ($str_alt529$_TM_DEFAULT_SAVE_OPERATIONS_VALUE);
                            }
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_392, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_colspan$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(TWO_INTEGER);
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_393 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_macros.verify_not_within_html_pre();
                            html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                            {
                                SubLObject _prev_bind_0_394 = html_macros.$within_html_pre$.currentBinding(thread);
                                try {
                                    html_macros.$within_html_pre$.bind(T, thread);
                                    html_utilities.html_princ($str_alt23$_);
                                } finally {
                                    html_macros.$within_html_pre$.rebind(_prev_bind_0_394, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_393, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_395 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt530$Master_Transcript_);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_395, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_396 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            if (transcript_utilities.master_transcript().isString()) {
                                html_utilities.html_princ(transcript_utilities.master_transcript());
                            } else {
                                html_utilities.html_princ($str_alt531$None___There_has_been_an_initiali);
                            }
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_396, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            if (transcript_utilities.master_transcript().isString()) {
                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        if (true) {
                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align($TOP));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_397 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                html_utilities.html_princ($str_alt532$Exists___);
                                html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_397, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        if (true) {
                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align($TOP));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_398 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                if (NIL != Filesys.probe_file(transcript_utilities.master_transcript())) {
                                    html_utilities.html_princ($str_alt533$Yes_);
                                } else {
                                    html_utilities.html_princ($str_alt534$No___Either_there_is_an_error_in_);
                                }
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_398, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    } finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                if (NIL != Filesys.probe_file(transcript_utilities.master_transcript())) {
                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            if (true) {
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_399 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                    html_utilities.html_princ($str_alt535$Characters_);
                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_399, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            if (true) {
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_400 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_princ(file_utilities.get_file_length(transcript_utilities.master_transcript()));
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_400, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            if (true) {
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_401 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                    if (NIL != system_parameters.$really_count_transcript_ops$.getDynamicValue(thread)) {
                                        html_utilities.html_princ($str_alt536$Operations_);
                                    } else {
                                        html_utilities.html_princ($str_alt537$Estimated_ops_);
                                    }
                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_401, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            if (true) {
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_402 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    if (NIL != system_parameters.$really_count_transcript_ops$.getDynamicValue(thread)) {
                                        html_utilities.html_princ(transcript_utilities.count_operations(transcript_utilities.master_transcript()));
                                    } else {
                                        html_utilities.html_princ(transcript_utilities.estimate_number_of_ops(transcript_utilities.master_transcript()));
                                    }
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_402, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_colspan$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(TWO_INTEGER);
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_403 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_macros.verify_not_within_html_pre();
                            html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                            {
                                SubLObject _prev_bind_0_404 = html_macros.$within_html_pre$.currentBinding(thread);
                                try {
                                    html_macros.$within_html_pre$.bind(T, thread);
                                    html_utilities.html_princ($str_alt23$_);
                                } finally {
                                    html_macros.$within_html_pre$.rebind(_prev_bind_0_404, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_403, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            return NIL;
        }
    }

    public static final SubLObject show_write_transcript_info() {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject write_trans = transcript_utilities.local_transcript();
                if (NIL != operation_communication.dont_record_operations_locally()) {
                    write_trans = transcript_utilities.master_transcript();
                } else {
                    write_trans = transcript_utilities.local_transcript();
                }
                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        if (true) {
                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align($TOP));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_405 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                html_utilities.html_princ($str_alt538$Write_transcript__);
                                html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_405, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        if (true) {
                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align($TOP));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_406 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                if (write_trans.isString()) {
                                    html_utilities.html_princ(write_trans);
                                } else {
                                    html_utilities.html_princ($str_alt539$None___Don_t_worry_unless_you_int);
                                }
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_406, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    } finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                if (write_trans.isString()) {
                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            if (true) {
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_407 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                    html_utilities.html_princ($str_alt532$Exists___);
                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_407, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            if (true) {
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align($TOP));
                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            }
                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                            {
                                SubLObject _prev_bind_0_408 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind(T, thread);
                                    if (NIL != Filesys.probe_file(write_trans)) {
                                        html_utilities.html_princ($str_alt533$Yes_);
                                    } else {
                                        html_utilities.html_princ($str_alt534$No___Either_there_is_an_error_in_);
                                    }
                                } finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_408, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                    if (NIL != Filesys.probe_file(write_trans)) {
                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                if (true) {
                                    html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align($TOP));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_409 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                        html_utilities.html_princ($str_alt535$Characters_);
                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_409, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                if (true) {
                                    html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align($TOP));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_410 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_princ(file_utilities.get_file_length(write_trans));
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_410, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                if (true) {
                                    html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align($TOP));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_411 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                        if (NIL != system_parameters.$really_count_transcript_ops$.getDynamicValue(thread)) {
                                            html_utilities.html_princ($str_alt536$Operations_);
                                        } else {
                                            html_utilities.html_princ($str_alt537$Estimated_ops_);
                                        }
                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_411, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                if (true) {
                                    html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align($TOP));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_412 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        if (NIL != system_parameters.$really_count_transcript_ops$.getDynamicValue(thread)) {
                                            html_utilities.html_princ(transcript_utilities.count_operations(write_trans));
                                        } else {
                                            html_utilities.html_princ(transcript_utilities.estimate_number_of_ops(write_trans));
                                        }
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_412, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    }
                }
                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        if (true) {
                            html_utilities.html_markup(html_macros.$html_table_data_colspan$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(TWO_INTEGER);
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        if (true) {
                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align($TOP));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_413 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_princ($str_alt540$The_master_and_write_transcript_w);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_413, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    } finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_414 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_macros.verify_not_within_html_pre();
                                html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                                {
                                    SubLObject _prev_bind_0_415 = html_macros.$within_html_pre$.currentBinding(thread);
                                    try {
                                        html_macros.$within_html_pre$.bind(T, thread);
                                        html_utilities.html_princ($str_alt23$_);
                                    } finally {
                                        html_macros.$within_html_pre$.rebind(_prev_bind_0_415, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_414, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    } finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject show_operation_info() {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_416 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt541$Transcript_Ops_Pending_);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_416, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_417 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_princ(operation_queues.remote_queue_size());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_417, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_418 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt542$Transcript_Ops_Done_);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_418, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_419 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_princ(operation_communication.remote_ops_processed());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_419, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_420 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt543$Current_Ops_Pending_);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_420, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_421 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_princ(operation_queues.local_queue_size());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_421, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_422 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt544$Current_Ops_Done__Not_Transcripte);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_422, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_423 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_princ(operation_queues.transcript_queue_size());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_423, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_424 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt545$Current_Ops_Done___Transcripted_);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_424, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_425 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            if (NIL != operation_communication.dont_record_operations_locally()) {
                                html_utilities.html_princ(operation_communication.total_local_operations_transmitted());
                            } else {
                                html_utilities.html_princ(operation_queues.local_operation_storage_queue_size());
                            }
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_425, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_426 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_macros.verify_not_within_html_pre();
                            html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                            {
                                SubLObject _prev_bind_0_427 = html_macros.$within_html_pre$.currentBinding(thread);
                                try {
                                    html_macros.$within_html_pre$.bind(T, thread);
                                    html_utilities.html_princ($str_alt23$_);
                                } finally {
                                    html_macros.$within_html_pre$.rebind(_prev_bind_0_427, thread);
                                }
                            }
                            html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_426, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            return NIL;
        }
    }

    public static final SubLObject show_system_info() {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_428 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt546$System_Version__);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_428, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_429 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_princ(system_info.cyc_revision_string());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_429, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char(CHAR_greater, UNPROVIDED);
            {
                SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind(T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_430 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ($str_alt547$KB_Version__);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_430, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    if (true) {
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align($TOP));
                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                    }
                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                    {
                        SubLObject _prev_bind_0_431 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind(T, thread);
                            if (NIL != control_vars.kb_loaded()) {
                                html_utilities.html_princ(control_vars.kb_loaded());
                            } else {
                                html_utilities.html_princ($$$None);
                            }
                        } finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_431, thread);
                        }
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                } finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri(UNPROVIDED);
            return NIL;
        }
    }

    public static final SubLObject tm_backup_thesauri_in_thinker(SubLObject pathname, SubLObject thesauri) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject thinking = tm_thinking.tm_new_thinking(tm_datastructures.$tm_user$.getDynamicValue(thread), $BACKUP_THESAURI);
                SubLObject thread_432 = tm_thinking.tm_thinking_start(thinking, TM_SAVE_PARTITION_WRAPPER, list(pathname, thesauri));
                return thread_432;
            }
        }
    }

    public static final SubLObject tm_save_partition_wrapper(SubLObject pathname, SubLObject thesauri) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject success = NIL;
                try {
                    {
                        SubLObject logfile = tm_make_backup_log_file_name();
                        process_utilities.thinking_note_property(process_utilities.thinking_task(), $LOGFILE, logfile);
                        {
                            SubLObject stream = NIL;
                            try {
                                stream = compatibility.open_text(logfile, $OUTPUT, NIL);
                                if (!stream.isStream()) {
                                    Errors.error($str_alt118$Unable_to_open__S, logfile);
                                }
                                {
                                    SubLObject logstream = stream;
                                    {
                                        SubLObject _prev_bind_0 = StreamsLow.$standard_output$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = utilities_macros.$silent_progressP$.currentBinding(thread);
                                        try {
                                            StreamsLow.$standard_output$.bind(logstream, thread);
                                            utilities_macros.$silent_progressP$.bind(NIL, thread);
                                            tm_io.tm_save_partition(pathname, thesauri);
                                            success = T;
                                        } finally {
                                            utilities_macros.$silent_progressP$.rebind(_prev_bind_1, thread);
                                            StreamsLow.$standard_output$.rebind(_prev_bind_0, thread);
                                        }
                                    }
                                }
                            } finally {
                                {
                                    SubLObject _prev_bind_0 = $is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        $is_thread_performing_cleanupP$.bind(T, thread);
                                        if (stream.isStream()) {
                                            close(stream, UNPROVIDED);
                                        }
                                    } finally {
                                        $is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                                    }
                                }
                            }
                        }
                    }
                } finally {
                    {
                        SubLObject _prev_bind_0 = $is_thread_performing_cleanupP$.currentBinding(thread);
                        try {
                            $is_thread_performing_cleanupP$.bind(T, thread);
                            tm_datastructures.tm_finish_multi_thesaurus_read_operation(thesauri);
                        } finally {
                            $is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                        }
                    }
                }
                if (NIL != success) {
                    return $$$SUCCESS;
                } else {
                    return $$$INCOMPLETE;
                }
            }
        }
    }

    /**
     * Constructs a pathname for the log file to be used when
     * doing a partition-save.
     */
    public static final SubLObject tm_make_backup_log_file_name() {
        {
            SubLObject filename = format(NIL, $str_alt550$backup_log__A, numeric_date_utilities.universal_timestring(UNPROVIDED));
            return file_utilities.relative_filename(tm_datastructures.$tm_report_directory$.getGlobalValue(), filename, UNPROVIDED);
        }
    }

    /**
     * Produce a page allowing administrators to dump a thesaurus partition
     * to a .cfasl file.
     */
    public static final SubLObject tm_dump_thesaurus(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        return tm_detailed_dump_thesaurus(args);
    }

    /**
     * Produce a page allowing administrators to dump one or more thesauri into .cfasl partition files.
     */
    public static final SubLObject tm_detailed_dump_thesaurus(SubLObject args) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ(format(NIL, $str_alt21$Backup__a_aInfo_to_File, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) (tm_control_vars.$application_name$.getDynamicValue(thread))) : $str_alt22$, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) ($str_alt23$_)) : $str_alt22$));
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_433 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_434 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_435 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_435, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_434, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ(format(NIL, $str_alt21$Backup__a_aInfo_to_File, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) (tm_control_vars.$application_name$.getDynamicValue(thread))) : $str_alt22$, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) ($str_alt23$_)) : $str_alt22$));
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event(format(NIL, $str_alt21$Backup__a_aInfo_to_File, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) (tm_control_vars.$application_name$.getDynamicValue(thread))) : $str_alt22$, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) ($str_alt23$_)) : $str_alt22$));
                                if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                    html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                } else {
                                    html_thesaurus.thesaurus_heading($str_alt552$tm_detailed_dump_thesaurus);
                                    html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    if (NIL != html_macros.$html_form_method_post$.getGlobalValue()) {
                                        html_utilities.html_markup(html_macros.$html_form_method$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_markup(html_macros.$html_form_method_post$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    }
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_436 = html_macros.$html_safe_print$.currentBinding(thread);
                                        SubLObject _prev_bind_1 = html_macros.$within_html_form$.currentBinding(thread);
                                        SubLObject _prev_bind_2 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_macros.$within_html_form$.bind(T, thread);
                                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                            html_utilities.html_hidden_input($str_alt553$tm_handle_detailed_dump_thesaurus, T, UNPROVIDED);
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt554$Choose_one_or_more_thesauri_to_ba);
                                            html_utilities.html_br();
                                            html_thesaurus.tm_thesaurus_selection(tm_internals.all_thesauri(), UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_br();
                                            html_utilities.html_submit_input($$$Save, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_reset_input(UNPROVIDED);
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt555$Or__to_save_all_thesaurus_informa);
                                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                            html_thesaurus.tm_link($HANDLE_DUMP_THESAURUS, UNPROVIDED, UNPROVIDED, UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt557$_);
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_unordered_list_head$.getGlobalValue());
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_437 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                    html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_438 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_princ($str_alt558$This_operation_could_take_several);
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_438, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                    html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_439 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_princ($str_alt559$While_it_is_underway__all_editing);
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_439, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_437, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_unordered_list_tail$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                            html_utilities.html_br();
                                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                                        } finally {
                                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_2, thread);
                                            html_macros.$within_html_form$.rebind(_prev_bind_1, thread);
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_436, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_433, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_handle_dump_thesaurus_int(SubLObject thesauri, SubLObject pathname) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            if (NIL == tm_io.tm_directory_accessible(tm_datastructures.$tm_partition_directory$.getGlobalValue())) {
                return html_thesaurus.tm_error($str_alt561$The_directory__A_is_not_accessibl, tm_datastructures.$tm_partition_directory$.getGlobalValue(), UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            thread.resetMultipleValues();
            {
                SubLObject success = tm_datastructures.tm_start_multi_thesaurus_read_operation(thesauri);
                SubLObject problem_thesaurus = thread.secondMultipleValue();
                thread.resetMultipleValues();
                if (NIL != success) {
                    tm_backup_thesauri_in_thinker(pathname, thesauri);
                    {
                        SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                        html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                        html_macros.html_head_content_type();
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(format(NIL, $str_alt562$Backing_Up__a_aInfo_to_File, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) (tm_control_vars.$application_name$.getDynamicValue(thread))) : $str_alt22$, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) ($str_alt23$_)) : $str_alt22$));
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                        {
                            SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                            try {
                                html_macros.$html_inside_bodyP$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                                if (NIL != color_value) {
                                    html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_color(color_value));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_440 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                        html_utilities.html_markup(ONE_INTEGER);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                            html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_441 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                    html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                                    html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                        html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    }
                                                    if (true) {
                                                        html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                        html_utilities.html_markup(ZERO_INTEGER);
                                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                    }
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_442 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_442, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_441, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                        }
                                        html_utilities.html_princ(format(NIL, $str_alt562$Backing_Up__a_aInfo_to_File, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) (tm_control_vars.$application_name$.getDynamicValue(thread))) : $str_alt22$, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) ($str_alt23$_)) : $str_alt22$));
                                        html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                        html_utilities.html_markup(ONE_INTEGER);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        tm_logging.tm_enqueue_event(format(NIL, $str_alt562$Backing_Up__a_aInfo_to_File, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) (tm_control_vars.$application_name$.getDynamicValue(thread))) : $str_alt22$, tm_control_vars.$application_name$.getDynamicValue(thread).isString() ? ((SubLObject) ($str_alt23$_)) : $str_alt22$));
                                        if (!(true && (NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)))) {
                                            html_utilities.html_princ($str_alt2$Sorry__you_do_not_have_permission);
                                        } else {
                                            html_thesaurus.thesaurus_heading($str_alt563$tm_handle_dump_thesaurus);
                                            html_utilities.html_br();
                                            format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt564$Backing_up__a_state_to_the_file__, tm_control_vars.$application_name$.getDynamicValue(thread), pathname);
                                            html_utilities.html_br();
                                            html_utilities.html_br();
                                            html_utilities.html_princ($str_alt565$Click_on_the_Status_button_to_see);
                                        }
                                        html_thesaurus.tm_footer();
                                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_440, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    }
                } else {
                    {
                        SubLObject message = $str_alt566$Backup_cannot_be_performed_at_thi;
                        message = cconcatenate(message, new SubLObject[]{ tm_internals.thesaurus_name(problem_thesaurus), $str_alt567$_is_currently_involved_in_an_edit });
                        html_thesaurus.tm_message_to_user($$$Backup_Unavailable, message);
                    }
                }
            }
            return NIL;
        }
    }

    /**
     * Create .cfasl filename, show the user the filename,
     * and then start the dump.
     */
    public static final SubLObject tm_handle_dump_thesaurus(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        return tm_handle_dump_thesaurus_int(tm_internals.all_thesauri(), tm_io.tm_new_partition_pathname(UNPROVIDED));
    }

    public static final SubLObject tm_handle_detailed_dump_thesaurus(SubLObject args) {
        {
            SubLObject thesaurus_names = html_utilities.html_extract_input_values($$$thesauri, args);
            SubLObject thesauri = Mapping.mapcar(symbol_function(THESAURUS_CONSTANT_FROM_NAME), thesaurus_names);
            if (NIL == thesauri) {
                return html_thesaurus.tm_error($str_alt571$You_must_select_at_least_one_thes, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            if (NIL != subl_promotions.memberP(NIL, thesauri, UNPROVIDED, UNPROVIDED)) {
                return html_thesaurus.tm_error($str_alt572$Implementation_error__One_or_more, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED);
            }
            {
                SubLObject pathname = tm_io.tm_new_partition_pathname(thesauri);
                return tm_handle_dump_thesaurus_int(thesauri, pathname);
            }
        }
    }

    public static final SubLObject tm_show_all_thinking_status(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject color_value = tm_datastructures.$tm_bg_color_default$.getDynamicValue(thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ($$$Background_Operation_Status);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
                {
                    SubLObject _prev_bind_0 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind(T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (NIL != color_value) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(color_value));
                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                        }
                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                        {
                            SubLObject _prev_bind_0_443 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind(T, thread);
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                if ((NIL != tm_control_vars.$client_thes_home_page$.getDynamicValue(thread)) && (NIL != tm_control_vars.$client_mini_logo$.getDynamicValue(thread))) {
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(tm_control_vars.$client_thes_home_page$.getDynamicValue(thread));
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                    {
                                        SubLObject _prev_bind_0_444 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind(T, thread);
                                            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            html_utilities.html_markup(tm_control_vars.$client_mini_logo$.getDynamicValue(thread));
                                            html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            if (NIL != tm_control_vars.$client_name$.getDynamicValue(thread)) {
                                                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(tm_control_vars.$client_name$.getDynamicValue(thread));
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            if (true) {
                                                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                                html_utilities.html_markup(ZERO_INTEGER);
                                                html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                            }
                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                            {
                                                SubLObject _prev_bind_0_445 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                } finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_445, thread);
                                                }
                                            }
                                            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
                                        } finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_444, thread);
                                        }
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                                html_utilities.html_princ($$$Background_Operation_Status);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup(ONE_INTEGER);
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                tm_logging.tm_enqueue_event($$$Background_Operation_Status);
                                html_thesaurus.thesaurus_heading($str_alt575$tm_show_all_thinking_status);
                                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                if (true) {
                                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                    html_utilities.html_markup(ONE_INTEGER);
                                    html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                }
                                html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                {
                                    SubLObject _prev_bind_0_446 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind(T, thread);
                                        {
                                            SubLObject cdolist_list_var = tm_thinking.tm_all_thinkings();
                                            SubLObject thinking = NIL;
                                            for (thinking = cdolist_list_var.first(); NIL != cdolist_list_var; cdolist_list_var = cdolist_list_var.rest() , thinking = cdolist_list_var.first()) {
                                                if ((NIL != tm_internals.privelegedP(tm_datastructures.$tm_user$.getDynamicValue(thread), $$$administrator)) || tm_datastructures.$tm_user$.getDynamicValue(thread).equal(tm_thinking.tm_thinking_user(thinking))) {
                                                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                    html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                    {
                                                        SubLObject _prev_bind_0_447 = html_macros.$html_safe_print$.currentBinding(thread);
                                                        try {
                                                            html_macros.$html_safe_print$.bind(T, thread);
                                                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                            html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                                            {
                                                                SubLObject _prev_bind_0_448 = html_macros.$html_safe_print$.currentBinding(thread);
                                                                try {
                                                                    html_macros.$html_safe_print$.bind(T, thread);
                                                                    tm_show_thinking_status(thinking);
                                                                } finally {
                                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_448, thread);
                                                                }
                                                            }
                                                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                        } finally {
                                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_447, thread);
                                                        }
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                    html_utilities.html_source_readability_terpri(UNPROVIDED);
                                                }
                                            }
                                        }
                                    } finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_446, thread);
                                    }
                                }
                                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                if (NIL == tm_thinking.tm_all_thinkings()) {
                                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                    html_utilities.html_princ($str_alt576$There_are_no_background_operation);
                                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                }
                                html_thesaurus.tm_footer();
                                html_utilities.html_source_readability_terpri(UNPROVIDED);
                            } finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_443, thread);
                            }
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri(UNPROVIDED);
                    } finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0, thread);
                    }
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri(UNPROVIDED);
            }
            return NIL;
        }
    }

    public static final SubLObject tm_show_thinking_status(SubLObject thinking) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject user = tm_thinking.tm_thinking_user(thinking);
                SubLObject progress_message = tm_thinking.tm_thinking_progress_message(thinking);
                SubLObject status = process_utilities.thinking_status(thinking);
                SubLObject sofar = process_utilities.thinking_progress_sofar(thinking);
                SubLObject total = process_utilities.thinking_progress_total(thinking);
                SubLObject start_time = process_utilities.thinking_start_time(thinking);
                SubLObject finish_time = process_utilities.thinking_finish_time(thinking);
                SubLObject run_time = (NIL != finish_time) ? ((SubLObject) (subtract(finish_time, start_time))) : NIL != start_time ? ((SubLObject) (subtract(get_universal_time(), start_time))) : NIL;
                SubLObject result = process_utilities.thinking_result(thinking);
                SubLObject error_message = process_utilities.thinking_error_message(thinking);
                if (NIL != processp(process_utilities.thinking_thread(thinking))) {
                    status = $RUNNING;
                }
                {
                    SubLObject pcase_var = status;
                    if (pcase_var.eql($RUNNING)) {
                        html_utilities.html_progress_section(progress_message, sofar, total, run_time, finish_time);
                        html_utilities.html_princ($str_alt579$Task_started_by_user_);
                        html_utilities.html_princ(user);
                        html_utilities.html_br();
                        if (user.equal(tm_datastructures.$tm_user$.getDynamicValue(thread)) && (NIL != processp(process_utilities.thinking_thread(thinking)))) {
                            html_thesaurus.tm_link($ABORT, tm_thinking.tm_thinking_id(thinking), UNPROVIDED, UNPROVIDED);
                        }
                    } else {
                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                        html_utilities.html_princ(progress_message);
                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                        html_utilities.html_br();
                        html_utilities.html_princ($str_alt579$Task_started_by_user_);
                        html_utilities.html_princ(user);
                        html_utilities.html_br();
                        {
                            SubLObject pcase_var_449 = status;
                            if (pcase_var_449.eql($ERROR)) {
                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt582$Task_halted_with_this_error___A, error_message);
                            } else
                                if (pcase_var_449.eql($STOPPED)) {
                                    html_utilities.html_princ($str_alt584$Task_was_halted_before_completion);
                                } else
                                    if (pcase_var_449.eql($FINISHED)) {
                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt586$Task_finished_with_this_result___, result);
                                        html_utilities.html_br();
                                        tm_thinking_result_link(thinking);
                                    } else
                                        if (pcase_var_449.eql($NONE)) {
                                            html_utilities.html_princ($str_alt587$Task_was_never_begun_);
                                            if (NIL != error_message) {
                                                html_utilities.html_br();
                                                html_utilities.html_princ($str_alt588$Error_message__);
                                                html_utilities.html_princ(error_message);
                                            }
                                        } else {
                                            Errors.error($str_alt589$Unknown_thinking_status__A, status);
                                        }



                        }
                        if (user.equal(tm_datastructures.$tm_user$.getDynamicValue(thread))) {
                            html_utilities.html_br();
                            html_thesaurus.tm_link($FORGET, tm_thinking.tm_thinking_id(thinking), UNPROVIDED, UNPROVIDED);
                        }
                    }
                }
                if (tm_thinking.tm_thinking_type(thinking) == $BACKUP_THESAURI) {
                    {
                        SubLObject logfile = process_utilities.thinking_property(thinking, $LOGFILE);
                        html_utilities.html_br();
                        html_utilities.html_princ($str_alt591$Log_file__);
                        html_thesaurus.tm_link($SHOW_FILE, logfile, logfile, UNPROVIDED);
                    }
                }
                return NIL;
            }
        }
    }

    public static final SubLObject tm_thinking_abort(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            SubLObject id_string = args.first();
            SubLObject id = (length(string_utilities.trim_whitespace(id_string)).numG(ZERO_INTEGER)) ? ((SubLObject) (read_from_string_ignoring_errors(id_string, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED))) : NIL;
            SubLObject thinking = (NIL != id) ? ((SubLObject) (tm_thinking.tm_lookup_thinking(id))) : NIL;
            if (NIL != process_utilities.thinking_task_p(thinking)) {
                tm_thinking.tm_thinking_stop(thinking);
            }
        }
        tm_show_all_thinking_status(UNPROVIDED);
        return NIL;
    }

    public static final SubLObject tm_thinking_forget(SubLObject args) {
        if (args == UNPROVIDED) {
            args = NIL;
        }
        {
            SubLObject id_string = args.first();
            SubLObject id = (length(string_utilities.trim_whitespace(id_string)).numG(ZERO_INTEGER)) ? ((SubLObject) (read_from_string_ignoring_errors(id_string, UNPROVIDED, UNPROVIDED, UNPROVIDED, UNPROVIDED))) : NIL;
            SubLObject thinking = (NIL != id) ? ((SubLObject) (tm_thinking.tm_lookup_thinking(id))) : NIL;
            if (NIL != process_utilities.thinking_task_p(thinking)) {
                tm_thinking.tm_remove_thinking(thinking);
            }
        }
        tm_show_all_thinking_status(UNPROVIDED);
        return NIL;
    }

    public static final SubLObject tm_thinking_result_link(SubLObject thinking) {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject args = tm_thinking.tm_thinking_args(thinking);
                SubLObject type = tm_thinking.tm_thinking_type(thinking);
                SubLObject pcase_var = type;
                if (pcase_var.eql($GENERATE_THESAURI_REPORT)) {
                    {
                        SubLObject pathname = args.first();
                        SubLObject line_count = file_utilities.get_file_line_count(pathname);
                        html_thesaurus.tm_link($SHOW_FILE, pathname, pathname, UNPROVIDED);
                        html_utilities.html_tab(THREE_INTEGER);
                        html_utilities.html_markup(html_macros.$html_italic_head$.getGlobalValue());
                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt594$__D_lines_, line_count);
                        html_utilities.html_markup(html_macros.$html_italic_tail$.getGlobalValue());
                    }
                } else
                    if (pcase_var.eql($COPY_THESAURUS)) {
                        {
                            SubLObject target_thesaurus = second(args);
                            SubLObject skipped_facts_log = seventh(args);
                            if (NIL != tm_internals.thesaurusP(target_thesaurus)) {
                                html_utilities.html_princ($str_alt596$Target_thesaurus__);
                                html_thesaurus.tm_link($THESAURUS, target_thesaurus, UNPROVIDED, UNPROVIDED);
                                if (NIL != skipped_facts_log) {
                                    html_utilities.html_br();
                                    html_utilities.html_princ($str_alt597$Skipped_facts_log__);
                                    html_thesaurus.tm_link($SHOW_FILE, skipped_facts_log, skipped_facts_log, UNPROVIDED);
                                }
                            }
                        }
                    } else
                        if (pcase_var.eql($LOAD_THESAURUS)) {
                            {
                                SubLObject thesaurus = second(args);
                                if (NIL != tm_internals.thesaurusP(thesaurus)) {
                                    html_thesaurus.tm_link($THESAURUS, thesaurus, UNPROVIDED, UNPROVIDED);
                                }
                            }
                        } else
                            if (pcase_var.eql($UPDATE_LOAD)) {
                                {
                                    SubLObject thesaurus = second(args);
                                    if ((NIL != tm_internals.thesaurusP(thesaurus)) && (NIL != tm_io.tm_update_load_state_for_thesaurus(thesaurus))) {
                                        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt4$_A_, system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt16$tm_decide_update_load_changes__A, cb_utilities.cb_fort_identifier(thesaurus));
                                        html_utilities.html_char(CHAR_quotation, UNPROVIDED);
                                        html_utilities.html_char(CHAR_greater, UNPROVIDED);
                                        {
                                            SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind(T, thread);
                                                format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt600$Decide_Update_Load_Changes_for__A, tm_internals.thesaurus_name(thesaurus));
                                            } finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                                            }
                                        }
                                        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                    }
                                }
                            } else
                                if (pcase_var.eql($OUTPUT_THESAURUS)) {
                                    {
                                        SubLObject pathname = second(args);
                                        SubLObject line_count = file_utilities.get_file_line_count(pathname);
                                        html_utilities.html_princ($str_alt601$The_output_is_in_this_file___);
                                        html_thesaurus.tm_link($SHOW_FILE, pathname, pathname, UNPROVIDED);
                                        html_utilities.html_tab(THREE_INTEGER);
                                        html_utilities.html_markup(html_macros.$html_italic_head$.getGlobalValue());
                                        format(html_macros.$html_stream$.getDynamicValue(thread), $str_alt594$__D_lines_, line_count);
                                        html_utilities.html_markup(html_macros.$html_italic_tail$.getGlobalValue());
                                    }
                                } else
                                    if (pcase_var.eql($BACKUP_THESAURI)) {
                                        {
                                            SubLObject pathname = args.first();
                                            html_utilities.html_princ($str_alt602$The_backup_was_saved_to_);
                                            html_utilities.html_princ(pathname);
                                        }
                                    } else
                                        if (pcase_var.eql($COUNTING)) {
                                        } else {
                                            Errors.error($str_alt604$Unknown_thinking_type__A, type);
                                        }






                return NIL;
            }
        }
    }

    public static final SubLObject tm_start_counting() {
        {
            final SubLThread thread = SubLProcess.currentSubLThread();
            {
                SubLObject thinking = tm_thinking.tm_new_thinking(tm_datastructures.$tm_user$.getDynamicValue(thread), $COUNTING);
                SubLObject thread_450 = tm_thinking.tm_thinking_start(thinking, TM_COUNT, $list_alt606);
                return thread_450;
            }
        }
    }

    public static final SubLObject tm_count(SubLObject how_high) {
        {
            SubLObject sofar = NIL;
            for (sofar = ZERO_INTEGER; sofar.numL(how_high); sofar = add(sofar, ONE_INTEGER)) {
                sleep(THREE_INTEGER);
                sofar = add(sofar, ONE_INTEGER);
                tm_thinking.tm_thinking_note_percent_progress(sofar, how_high, UNPROVIDED);
            }
        }
        return how_high;
    }

    public static final SubLObject declare_html_tm_utilities_file() {
        declareFunction("tm_utilities_page", "TM-UTILITIES-PAGE", 0, 1, false);
        declareFunction("tm_manage_stoplists", "TM-MANAGE-STOPLISTS", 0, 1, false);
        declareFunction("tm_stoplist_manager_guts", "TM-STOPLIST-MANAGER-GUTS", 0, 0, false);
        declareFunction("tm_handle_add_stoplist_word", "TM-HANDLE-ADD-STOPLIST-WORD", 1, 0, false);
        declareFunction("tm_handle_remove_stoplist_word", "TM-HANDLE-REMOVE-STOPLIST-WORD", 1, 0, false);
        declareFunction("tm_memory_snapshot", "TM-MEMORY-SNAPSHOT", 0, 1, false);
        declareFunction("tm_handle_memory_snapshot", "TM-HANDLE-MEMORY-SNAPSHOT", 0, 1, false);
        declareFunction("tm_generate_thesauri_report_in_thinker", "TM-GENERATE-THESAURI-REPORT-IN-THINKER", 0, 0, false);
        declareFunction("tm_thesaurus_report_filename", "TM-THESAURUS-REPORT-FILENAME", 0, 0, false);
        declareFunction("tm_write_thesaurus_report_to_stream", "TM-WRITE-THESAURUS-REPORT-TO-STREAM", 2, 0, false);
        declareFunction("tm_write_thesauri_report", "TM-WRITE-THESAURI-REPORT", 1, 0, false);
        declareFunction("max_element_of_sequence", "MAX-ELEMENT-OF-SEQUENCE", 1, 1, false);
        declareFunction("tm_list_reports", "TM-LIST-REPORTS", 0, 1, false);
        declareFunction("tm_verify_generate_thesauri_report", "TM-VERIFY-GENERATE-THESAURI-REPORT", 0, 1, false);
        declareFunction("tm_really_generate_thesauri_report", "TM-REALLY-GENERATE-THESAURI-REPORT", 0, 1, false);
        declareFunction("tm_generate_thesauri_report", "TM-GENERATE-THESAURI-REPORT", 0, 1, false);
        declareFunction("tm_verify_generate_user_report", "TM-VERIFY-GENERATE-USER-REPORT", 1, 0, false);
        declareFunction("tm_generate_user_report", "TM-GENERATE-USER-REPORT", 0, 1, false);
        declareFunction("tm_verify_generate_ops_report_file", "TM-VERIFY-GENERATE-OPS-REPORT-FILE", 1, 0, false);
        declareFunction("tm_handle_ops_report_file_parameters", "TM-HANDLE-OPS-REPORT-FILE-PARAMETERS", 1, 0, false);
        declareFunction("tm_handle_ops_report_file", "TM-HANDLE-OPS-REPORT-FILE", 0, 1, false);
        declareFunction("tm_handle_user_report", "TM-HANDLE-USER-REPORT", 1, 0, false);
        declareFunction("tm_handle_user_report_parameters", "TM-HANDLE-USER-REPORT-PARAMETERS", 1, 0, false);
        declareFunction("tm_generate_ops_report", "TM-GENERATE-OPS-REPORT", 0, 1, false);
        declareFunction("tm_no_report_generated", "TM-NO-REPORT-GENERATED", 5, 0, false);
        declareFunction("tm_handle_ops_report_parameters", "TM-HANDLE-OPS-REPORT-PARAMETERS", 0, 1, false);
        declareFunction("lax_L", "LAX-<", 2, 0, false);
        declareFunction("tm_present_user_date_time_report", "TM-PRESENT-USER-DATE-TIME-REPORT", 0, 1, false);
        declareFunction("tm_present_date_user_time_report", "TM-PRESENT-DATE-USER-TIME-REPORT", 0, 1, false);
        declareFunction("tm_present_date_time_user_report", "TM-PRESENT-DATE-TIME-USER-REPORT", 0, 1, false);
        declareFunction("tm_present_ops_report", "TM-PRESENT-OPS-REPORT", 1, 0, false);
        declareFunction("tm_file_date_time_user_report", "TM-FILE-DATE-TIME-USER-REPORT", 3, 0, false);
        declareFunction("tm_file_date_user_time_report", "TM-FILE-DATE-USER-TIME-REPORT", 3, 0, false);
        declareFunction("tm_file_user_date_time_report", "TM-FILE-USER-DATE-TIME-REPORT", 3, 0, false);
        declareFunction("tm_file_ops_report", "TM-FILE-OPS-REPORT", 4, 0, false);
        declareFunction("tm_generate_tmap_report", "TM-GENERATE-TMAP-REPORT", 0, 1, false);
        declareFunction("tm_handle_tmap_report", "TM-HANDLE-TMAP-REPORT", 1, 0, false);
        declareFunction("tm_handle_tmap_report_parameters", "TM-HANDLE-TMAP-REPORT-PARAMETERS", 1, 0, false);
        declareFunction("tm_verify_generate_tmap_report", "TM-VERIFY-GENERATE-TMAP-REPORT", 1, 0, false);
        declareFunction("tm_load_thesaurus", "TM-LOAD-THESAURUS", 0, 1, false);
        declareFunction("tm_make_load_thesaurus_pathname", "TM-MAKE-LOAD-THESAURUS-PATHNAME", 1, 0, false);
        declareFunction("tm_load_thesaurus_prioritize_concept_reuse_thesauri", "TM-LOAD-THESAURUS-PRIORITIZE-CONCEPT-REUSE-THESAURI", 1, 0, false);
        declareFunction("tm_handle_load_thesaurus", "TM-HANDLE-LOAD-THESAURUS", 1, 0, false);
        declareFunction("tm_handle_load_thesaurus_in_thinker", "TM-HANDLE-LOAD-THESAURUS-IN-THINKER", 4, 1, false);
        declareFunction("tm_output_thesaurus_in_thinker", "TM-OUTPUT-THESAURUS-IN-THINKER", 8, 0, false);
        declareFunction("tm_delay_output_thesaurus_in_thinker", "TM-DELAY-OUTPUT-THESAURUS-IN-THINKER", 8, 0, false);
        declareFunction("tm_output_thesaurus_or_subset_wrapper", "TM-OUTPUT-THESAURUS-OR-SUBSET-WRAPPER", 8, 0, false);
        declareFunction("tm_output_thesaurus", "TM-OUTPUT-THESAURUS", 0, 1, false);
        declareFunction("tm_make_output_thesaurus_pathname", "TM-MAKE-OUTPUT-THESAURUS-PATHNAME", 2, 0, false);
        declareFunction("tm_handle_output_thesaurus", "TM-HANDLE-OUTPUT-THESAURUS", 1, 0, false);
        declareFunction("tm_verify_output_to_file", "TM-VERIFY-OUTPUT-TO-FILE", 1, 0, false);
        declareFunction("tm_handle_verify_output_to_file", "TM-HANDLE-VERIFY-OUTPUT-TO-FILE", 0, 1, false);
        declareFunction("tm_notify_output_in_progress", "TM-NOTIFY-OUTPUT-IN-PROGRESS", 0, 0, false);
        declareFunction("tm_of", "TM-OF", 1, 0, false);
        declareFunction("tm_output_filter_page", "TM-OUTPUT-FILTER-PAGE", 0, 1, false);
        declareFunction("tm_output_filter_info", "TM-OUTPUT-FILTER-INFO", 1, 0, false);
        declareFunction("tm_handle_set_values", "TM-HANDLE-SET-VALUES", 1, 0, false);
        declareFunction("tm_set_value_form", "TM-SET-VALUE-FORM", 1, 0, false);
        declareFunction("tm_edit_output_filter", "TM-EDIT-OUTPUT-FILTER", 0, 1, false);
        declareFunction("tm_handle_edit_output_filter", "TM-HANDLE-EDIT-OUTPUT-FILTER", 1, 0, false);
        declareFunction("tm_delete_output_filter", "TM-DELETE-OUTPUT-FILTER", 1, 0, false);
        declareFunction("tm_handle_create_output_filter", "TM-HANDLE-CREATE-OUTPUT-FILTER", 1, 0, false);
        declareFunction("tm_construct_filter_mapping_lists", "TM-CONSTRUCT-FILTER-MAPPING-LISTS", 2, 0, false);
        declareFunction("tm_update_filter_and_output_filter_info", "TM-UPDATE-FILTER-AND-OUTPUT-FILTER-INFO", 1, 0, false);
        declareFunction("tm_really_handle_edit_output_filter", "TM-REALLY-HANDLE-EDIT-OUTPUT-FILTER", 1, 0, false);
        declareFunction("tm_rebuild_alpha", "TM-REBUILD-ALPHA", 1, 0, false);
        declareFunction("tm_handle_rebuild_alpha", "TM-HANDLE-REBUILD-ALPHA", 1, 0, false);
        declareFunction("tm_manage_tmap", "TM-MANAGE-TMAP", 1, 0, false);
        declareFunction("tm_handle_manage_tmap", "TM-HANDLE-MANAGE-TMAP", 1, 0, false);
        declareFunction("tm_system_info", "TM-SYSTEM-INFO", 0, 1, false);
        declareFunction("show_master_transcript_info", "SHOW-MASTER-TRANSCRIPT-INFO", 0, 0, false);
        declareFunction("show_write_transcript_info", "SHOW-WRITE-TRANSCRIPT-INFO", 0, 0, false);
        declareFunction("show_operation_info", "SHOW-OPERATION-INFO", 0, 0, false);
        declareFunction("show_system_info", "SHOW-SYSTEM-INFO", 0, 0, false);
        declareFunction("tm_backup_thesauri_in_thinker", "TM-BACKUP-THESAURI-IN-THINKER", 2, 0, false);
        declareFunction("tm_save_partition_wrapper", "TM-SAVE-PARTITION-WRAPPER", 2, 0, false);
        declareFunction("tm_make_backup_log_file_name", "TM-MAKE-BACKUP-LOG-FILE-NAME", 0, 0, false);
        declareFunction("tm_dump_thesaurus", "TM-DUMP-THESAURUS", 0, 1, false);
        declareFunction("tm_detailed_dump_thesaurus", "TM-DETAILED-DUMP-THESAURUS", 1, 0, false);
        declareFunction("tm_handle_dump_thesaurus_int", "TM-HANDLE-DUMP-THESAURUS-INT", 2, 0, false);
        declareFunction("tm_handle_dump_thesaurus", "TM-HANDLE-DUMP-THESAURUS", 0, 1, false);
        declareFunction("tm_handle_detailed_dump_thesaurus", "TM-HANDLE-DETAILED-DUMP-THESAURUS", 1, 0, false);
        declareFunction("tm_show_all_thinking_status", "TM-SHOW-ALL-THINKING-STATUS", 0, 1, false);
        declareFunction("tm_show_thinking_status", "TM-SHOW-THINKING-STATUS", 1, 0, false);
        declareFunction("tm_thinking_abort", "TM-THINKING-ABORT", 0, 1, false);
        declareFunction("tm_thinking_forget", "TM-THINKING-FORGET", 0, 1, false);
        declareFunction("tm_thinking_result_link", "TM-THINKING-RESULT-LINK", 1, 0, false);
        declareFunction("tm_start_counting", "TM-START-COUNTING", 0, 0, false);
        declareFunction("tm_count", "TM-COUNT", 1, 0, false);
        return NIL;
    }

    public static final SubLObject init_html_tm_utilities_file() {
        defparameter("*TM-OUTPUT-THESAURUS-EXTENSION-MAP*", $list_alt382);
        return NIL;
    }

    public static final SubLObject setup_html_tm_utilities_file() {
                html_macros.note_html_handler_function(TM_UTILITIES_PAGE);
        html_macros.note_html_handler_function(TM_MANAGE_STOPLISTS);
        html_macros.note_html_handler_function(TM_HANDLE_ADD_STOPLIST_WORD);
        html_macros.note_html_handler_function(TM_HANDLE_REMOVE_STOPLIST_WORD);
        html_macros.note_html_handler_function(TM_MEMORY_SNAPSHOT);
        html_macros.note_html_handler_function(TM_HANDLE_MEMORY_SNAPSHOT);
        html_macros.note_html_handler_function(TM_LIST_REPORTS);
        html_macros.note_html_handler_function(TM_REALLY_GENERATE_THESAURI_REPORT);
        html_macros.note_html_handler_function(TM_GENERATE_THESAURI_REPORT);
        html_macros.note_html_handler_function(TM_GENERATE_USER_REPORT);
        html_macros.note_html_handler_function(TM_VERIFY_GENERATE_OPS_REPORT_FILE);
        html_macros.note_html_handler_function(TM_HANDLE_OPS_REPORT_FILE_PARAMETERS);
        html_macros.note_html_handler_function(TM_HANDLE_OPS_REPORT_FILE);
        html_macros.note_html_handler_function(TM_HANDLE_USER_REPORT);
        html_macros.note_html_handler_function(TM_HANDLE_USER_REPORT_PARAMETERS);
        html_macros.note_html_handler_function(TM_GENERATE_OPS_REPORT);
        html_macros.note_html_handler_function(TM_HANDLE_OPS_REPORT_PARAMETERS);
        html_macros.note_html_handler_function(TM_PRESENT_USER_DATE_TIME_REPORT);
        html_macros.note_html_handler_function(TM_PRESENT_DATE_USER_TIME_REPORT);
        html_macros.note_html_handler_function(TM_PRESENT_DATE_TIME_USER_REPORT);
        html_macros.note_html_handler_function(TM_PRESENT_OPS_REPORT);
        html_macros.note_html_handler_function(TM_GENERATE_TMAP_REPORT);
        html_macros.note_html_handler_function(TM_HANDLE_TMAP_REPORT);
        html_macros.note_html_handler_function(TM_HANDLE_TMAP_REPORT_PARAMETERS);
        html_macros.note_html_handler_function(TM_LOAD_THESAURUS);
        html_macros.note_html_handler_function(TM_LOAD_THESAURUS_PRIORITIZE_CONCEPT_REUSE_THESAURI);
        html_macros.note_html_handler_function(TM_HANDLE_LOAD_THESAURUS);
        html_macros.note_html_handler_function(TM_OUTPUT_THESAURUS);
        html_macros.note_html_handler_function(TM_HANDLE_OUTPUT_THESAURUS);
        html_macros.note_html_handler_function(TM_HANDLE_VERIFY_OUTPUT_TO_FILE);
        html_macros.note_html_handler_function(TM_OF);
        html_macros.note_html_handler_function(TM_OUTPUT_FILTER_PAGE);
        html_macros.note_html_handler_function(TM_HANDLE_SET_VALUES);
        html_macros.note_html_handler_function(TM_EDIT_OUTPUT_FILTER);
        html_macros.note_html_handler_function(TM_HANDLE_EDIT_OUTPUT_FILTER);
        html_macros.note_html_handler_function(TM_DELETE_OUTPUT_FILTER);
        html_macros.note_html_handler_function(TM_HANDLE_CREATE_OUTPUT_FILTER);
        html_macros.note_html_handler_function(TM_REBUILD_ALPHA);
        html_macros.note_html_handler_function(TM_HANDLE_REBUILD_ALPHA);
        html_macros.note_html_handler_function(TM_MANAGE_TMAP);
        html_macros.note_html_handler_function(TM_HANDLE_MANAGE_TMAP);
        html_macros.note_html_handler_function(TM_SYSTEM_INFO);
        html_macros.note_html_handler_function(TM_DUMP_THESAURUS);
        html_macros.note_html_handler_function(TM_DETAILED_DUMP_THESAURUS);
        html_macros.note_html_handler_function(TM_HANDLE_DUMP_THESAURUS);
        html_macros.note_html_handler_function(TM_HANDLE_DETAILED_DUMP_THESAURUS);
        html_macros.note_html_handler_function(TM_SHOW_ALL_THINKING_STATUS);
        html_macros.note_html_handler_function(TM_THINKING_ABORT);
        html_macros.note_html_handler_function(TM_THINKING_FORGET);
        return NIL;
    }

    // // Internal Constants
    static private final SubLString $$$Thesaurus_Utilities = makeString("Thesaurus Utilities");

    static private final SubLString $str_alt1$advanced_user = makeString("advanced-user");

    static private final SubLString $str_alt2$Sorry__you_do_not_have_permission = makeString("Sorry, you do not have permission to access this page.");

    static private final SubLString $str_alt3$tm_utilities_page = makeString("tm-utilities-page");

    static private final SubLString $str_alt4$_A_ = makeString("~A?");

    static private final SubLString $str_alt5$tm_output_thesaurus = makeString("tm-output-thesaurus");

    static private final SubLString $$$Output_Thesaurus = makeString("Output Thesaurus");

    static private final SubLString $str_alt7$tm_output_filter_page = makeString("tm-output-filter-page");

    static private final SubLString $$$Filters = makeString("Filters");

    static private final SubLString $$$administrator = makeString("administrator");

    static private final SubLString $str_alt10$tm_load_thesaurus = makeString("tm-load-thesaurus");

    static private final SubLString $$$Load_Thesaurus = makeString("Load Thesaurus");

    static private final SubLString $str_alt12$tm_update_load_page = makeString("tm-update-load-page");

    static private final SubLString $$$Begin_Update_Load_Analysis = makeString("Begin Update Load Analysis");

    static private final SubLString $$$Decide_Update_Load_Changes = makeString("Decide Update Load Changes");

    static private final SubLString $str_alt15$For_thesaurus__ = makeString("For thesaurus: ");

    static private final SubLString $str_alt16$tm_decide_update_load_changes__A = makeString("tm-decide-update-load-changes|~A");

    private static final SubLSymbol $STOPLIST_MANAGER = makeKeyword("STOPLIST-MANAGER");

    static private final SubLString $$$Stoplist_Manager = makeString("Stoplist Manager");

    static private final SubLString $str_alt19$tm_memory_snapshot = makeString("tm-memory-snapshot");

    static private final SubLString $$$Quick_State_Snapshot = makeString("Quick State Snapshot");

    static private final SubLString $str_alt21$Backup__a_aInfo_to_File = makeString("Backup ~a~aInfo to File");

    static private final SubLString $str_alt22$ = makeString("");

    static private final SubLString $str_alt23$_ = makeString(" ");

    private static final SubLSymbol $BACKUP_THESAURI = makeKeyword("BACKUP-THESAURI");

    static private final SubLString $str_alt25$__in_progress = makeString(" (in progress");

    static private final SubLString $str_alt26$___see_Status_page_ = makeString(" - see Status page)");

    static private final SubLString $str_alt27$__by__A_ = makeString(", by ~A)");

    private static final SubLSymbol $DUMP_THESAURUS = makeKeyword("DUMP-THESAURUS");

    static private final SubLString $$$Reports = makeString("Reports");

    static private final SubLString $str_alt30$tm_list_reports = makeString("tm-list-reports");

    static private final SubLString $$$List_Reports = makeString("List Reports");

    static private final SubLString $$$Generate_Reports = makeString("Generate Reports");

    private static final SubLSymbol $GENERATE_THESAURI_REPORT = makeKeyword("GENERATE-THESAURI-REPORT");

    static private final SubLString $str_alt34$Generate_Thesaurus_Statistics__in = makeString("Generate Thesaurus Statistics (in progress");

    static private final SubLString $str_alt35$tm_generate_thesauri_report = makeString("tm-generate-thesauri-report");

    static private final SubLString $$$Generate_Thesaurus_Statistics = makeString("Generate Thesaurus Statistics");

    static private final SubLString $str_alt37$tm_generate_user_report = makeString("tm-generate-user-report");

    static private final SubLString $$$Generate_User_Statistics = makeString("Generate User Statistics");

    static private final SubLString $str_alt39$tm_generate_ops_report = makeString("tm-generate-ops-report");

    static private final SubLString $$$Generate_Operations_Report = makeString("Generate Operations Report");

    static private final SubLString $str_alt41$tm_generate_tmap_report = makeString("tm-generate-tmap-report");

    static private final SubLString $$$Generate_TMAP_Report = makeString("Generate TMAP Report");

    static private final SubLString $str_alt43$tm_manage_users = makeString("tm-manage-users");

    static private final SubLString $$$Manage_Users = makeString("Manage Users");

    static private final SubLString $str_alt45$tm_manage_apps = makeString("tm-manage-apps");

    static private final SubLString $$$Manage_Applications = makeString("Manage Applications");

    static private final SubLString $str_alt47$tm_manage_tmap = makeString("tm-manage-tmap");

    static private final SubLString $$$Manage_Access_Protocol_Server = makeString("Manage Access Protocol Server");

    static private final SubLString $str_alt49$tm_system_info = makeString("tm-system-info");

    static private final SubLString $$$System_Information = makeString("System Information");

    private static final SubLSymbol TM_UTILITIES_PAGE = makeSymbol("TM-UTILITIES-PAGE");

    static private final SubLString $str_alt52$tm_manage_stoplists = makeString("tm-manage-stoplists");

    private static final SubLSymbol TM_MANAGE_STOPLISTS = makeSymbol("TM-MANAGE-STOPLISTS");

    static private final SubLString $str_alt54$tm_handle_add_stoplist_word = makeString("tm-handle-add-stoplist-word");

    static private final SubLString $str_alt55$Add_new_stoplist_word__ = makeString("Add new stoplist word: ");

    static private final SubLString $str_alt56$add_word = makeString("add-word");

    static private final SubLString $$$Add = makeString("Add");

    static private final SubLString $str_alt58$tm_handle_remove_stoplist_word = makeString("tm-handle-remove-stoplist-word");

    static private final SubLString $str_alt59$Remove_word_from_stoplist__ = makeString("Remove word from stoplist: ");

    static private final SubLString $str_alt60$remove_word = makeString("remove-word");

    static private final SubLString $$$Remove = makeString("Remove");

    static private final SubLString $str_alt62$Current_Stoplist_ = makeString("Current Stoplist:");



    static private final SubLString $str_alt64$Invalid_stoplist_word___s_contain = makeString("Invalid stoplist word: ~s contains a space.");



    public static final SubLObject $$tmStoplistWord = constant_handles.reader_make_constant_shell(makeString("tmStoplistWord"));

    private static final SubLSymbol TM_STOPLIST_MANAGER_GUTS = makeSymbol("TM-STOPLIST-MANAGER-GUTS");

    static private final SubLString $$$Add_Stoplist_Word = makeString("Add Stoplist Word");

    static private final SubLString $str_alt69$Invalid_stoplist_word___s_is_not_ = makeString("Invalid stoplist word: ~s is not a string.");

    private static final SubLSymbol TM_HANDLE_ADD_STOPLIST_WORD = makeSymbol("TM-HANDLE-ADD-STOPLIST-WORD");



    static private final SubLString $$$Delete_Stoplist_Word = makeString("Delete Stoplist Word");

    static private final SubLString $str_alt73$Can_t_remove__s_from_the_stoplist = makeString("Can't remove ~s from the stoplist.");

    private static final SubLSymbol TM_HANDLE_REMOVE_STOPLIST_WORD = makeSymbol("TM-HANDLE-REMOVE-STOPLIST-WORD");

    static private final SubLString $str_alt75$This_will_take_15_minutes_to_a_fe = makeString("This will take 15 minutes to a few hours, depending on the size of the thesauri loaded.");

    static private final SubLString $str_alt76$During_the_time_the_snapshot_is_b = makeString("During the time the snapshot is being saved, the ");

    static private final SubLString $str_alt77$_will_not_respond_ = makeString(" will not respond.");

    static private final SubLString $str_alt78$tm_handle_memory_snapshot = makeString("tm-handle-memory-snapshot");

    static private final SubLString $$$Save = makeString("Save");

    private static final SubLSymbol TM_MEMORY_SNAPSHOT = makeSymbol("TM-MEMORY-SNAPSHOT");

    static private final SubLString $str_alt81$Saving_State_Snapshot_in_Foregrou = makeString("Saving State Snapshot in Foreground ...");

    static private final SubLString $str_alt82$This_operation_is_not_supported_ = makeString("This operation is not supported.");

    private static final SubLSymbol TM_HANDLE_MEMORY_SNAPSHOT = makeSymbol("TM-HANDLE-MEMORY-SNAPSHOT");

    private static final SubLSymbol TM_WRITE_THESAURI_REPORT = makeSymbol("TM-WRITE-THESAURI-REPORT");

    static private final SubLString $str_alt85$thesauri__a__a__a_stats = makeString("thesauri-~a-~a-~a.stats");

    static private final SubLString $str_alt86$_A = makeString("~A");

    static private final SubLList $list_alt87 = list(constant_handles.reader_make_constant_shell(makeString("preferredTerm")));

    static private final SubLString $str_alt88$_Actual_ = makeString(" Actual ");

    static private final SubLString $$$Display_Filter = makeString("Display Filter");

    static private final SubLString $$$Output_Filter = makeString("Output Filter");

    static private final SubLString $str_alt91$Thesaurus_ = makeString("Thesaurus:");

    static private final SubLString $str_alt92$_A____A_ = makeString("~A  (~A)");

    static private final SubLString $str_alt93$Default_Display_Filter_ = makeString("Default Display Filter:");

    static private final SubLString $str_alt94$_a = makeString("~a");

    static private final SubLString $str_alt95$Default_Output_Filter_ = makeString("Default Output Filter:");



    static private final SubLString $str_alt97$Number_of_PTs__ = makeString("Number of PTs :");

    static private final SubLString $str_alt98$Number_of_UFs__ = makeString("Number of UFs :");

    static private final SubLString $str_alt99$Number_of_SNs__ = makeString("Number of SNs :");

    static private final SubLString $str_alt100$Number_of_RT_links_ = makeString("Number of RT links:");

    static private final SubLString $str_alt101$Number_of_lexical_equivalents_ = makeString("Number of lexical equivalents:");

    static private final SubLString $str_alt102$Number_of_facts__total__ = makeString("Number of facts, total :");

    static private final SubLString $str_alt103$_________________________________ = makeString("~%~%--------------------------------------------------------------------------------");

    static private final SubLString $str_alt104$___A_A_A = makeString("~%~A~A~A");

    static private final SubLString $str_alt105$____Created_by__A = makeString("~%~%Created by ~A");

    static private final SubLString $str_alt106$_on__A = makeString(" on ~A");

    static private final SubLString $str_alt107$__Loaded_by__A = makeString("~%Loaded by ~A");

    static private final SubLString $str_alt108$___A_A_A_A_A = makeString("~%~A~A~A~A~A");

    static private final SubLString $str_alt109$_A_A_A_A = makeString("~A~A~A~A");

    static private final SubLString $str_alt110$____User__A_Contributions_to__A = makeString("~%~%User ~A Contributions to ~A");

    static private final SubLString $str_alt111$____Number_of_PTs_added_____A = makeString("~%  Number of PTs added:   ~A");

    static private final SubLString $str_alt112$____Number_of_facts_added___A = makeString("~%  Number of facts added: ~A");

    static private final SubLString $str_alt113$Total_number_of_thesauri_ = makeString("Total number of thesauri:");

    static private final SubLString $str_alt114$Total_number_of_thesaurus_facts_ = makeString("Total number of thesaurus facts:");

    static private final SubLString $str_alt115$Total_number_of_concepts_in_all_t = makeString("Total number of concepts in all thesauri:");

    static private final SubLString $str_alt116$Total_number_of_lexical_equivalen = makeString("Total number of lexical equivalents in all thesauri:");



    static private final SubLString $str_alt118$Unable_to_open__S = makeString("Unable to open ~S");

    static private final SubLString $str_alt119$THESAURUS_STATISTICS_FOR__A = makeString("THESAURUS STATISTICS FOR ~A");

    static private final SubLString $str_alt120$_____A_A_A = makeString("~%~%~A~A~A");

    static private final SubLString $str_alt121$____ = makeString("~%~%");





    static private final SubLString $str_alt124$_a_a = makeString("~a~a");

    static private final SubLString $str_alt125$Here_are_the_available_reports_de = makeString("Here are the available reports describing statistics for thesauri and users.  Click on a link to see the report file:");

    private static final SubLSymbol $SHOW_FILE = makeKeyword("SHOW-FILE");

    static private final SubLSymbol $sym127$SUBSTRING_ = makeSymbol("SUBSTRING?");

    static private final SubLString $str_alt128$There_are_no_report_files_availab = makeString("There are no report files available.");

    private static final SubLSymbol TM_LIST_REPORTS = makeSymbol("TM-LIST-REPORTS");

    static private final SubLString $str_alt130$Generate_Thesaurus_Statistics_Rep = makeString("Generate Thesaurus Statistics Report");

    static private final SubLString $str_alt131$tm_verify_generate_thesauri_repor = makeString("tm-verify-generate-thesauri-report");

    static private final SubLString $str_alt132$Thesaurus_statistics_for__A_have_ = makeString("Thesaurus statistics for ~A have already been generated.");

    static private final SubLString $str_alt133$They_can_be_found_in_the_file_ = makeString("They can be found in the file ");

    static private final SubLString $str_alt134$tm_really_generate_thesauri_repor = makeString("tm-really-generate-thesauri-report");

    static private final SubLString $str_alt135$Do_you_wish_to_generate_them_agai = makeString("Do you wish to generate them again and overwrite the file?");

    static private final SubLString $$$Overwrite = makeString("Overwrite");

    static private final SubLString $$$Thesaurus_Statistics_Generating = makeString("Thesaurus Statistics Generating");

    static private final SubLString $str_alt138$Thesaurus_statistics_are_being_ge = makeString("Thesaurus statistics are being generated.  Click on the Status button to check if it's done.");

    private static final SubLSymbol TM_REALLY_GENERATE_THESAURI_REPORT = makeSymbol("TM-REALLY-GENERATE-THESAURI-REPORT");

    static private final SubLString $$$Not_Available_Now = makeString("Not Available Now");

    static private final SubLString $str_alt141$There_is_already_a_Generate_Thesa = makeString("There is already a Generate Thesaurus Statistics operation underway.  When it is finished, you can start another.  Click the Status button in the heading to check if it's done.");

    private static final SubLSymbol TM_GENERATE_THESAURI_REPORT = makeSymbol("TM-GENERATE-THESAURI-REPORT");

    static private final SubLString $$$01 = makeString("01");

    static private final SubLString $str_alt144$start_month = makeString("start-month");

    static private final SubLString $str_alt145$start_year = makeString("start-year");

    static private final SubLString $str_alt146$end_month = makeString("end-month");

    static private final SubLString $str_alt147$end_year = makeString("end-year");

    static private final SubLString $$$Generate_User_Statistics_Report = makeString("Generate User Statistics Report");

    static private final SubLString $str_alt149$tm_verify_generate_user_report = makeString("tm-verify-generate-user-report");

    static private final SubLString $str_alt150$User_statistics_for__A_to__A_have = makeString("User statistics for ~A to ~A have already been generated.");

    static private final SubLString $str_alt151$tm_handle_user_report_parameters = makeString("tm-handle-user-report-parameters");

    static private final SubLString $str_alt152$Do_you_wish_to_generate_them_agai = makeString("Do you wish to generate them again and overwrite the file (this might take several minutes)?");

    public static final SubLInteger $int$10000 = makeInteger(10000);

    static private final SubLString $str_alt154$Choose_User_Statistics_Report_Par = makeString("Choose User Statistics Report Parameters");

    static private final SubLString $str_alt155$tm_really_generate_user_report = makeString("tm-really-generate-user-report");

    static private final SubLString $str_alt156$tm_handle_user_report = makeString("tm-handle-user-report");





    static private final SubLString $str_alt159$_Start_Date = makeString(" Start Date");

    static private final SubLString $str_alt160$_End_Date = makeString(" End Date");

    static private final SubLString $str_alt161$aggregate_ = makeString("aggregate?");

    static private final SubLString $$$yes = makeString("yes");

    static private final SubLString $str_alt163$Information_aggregated_over_entir = makeString("Information aggregated over entire reporting period.");

    static private final SubLString $$$no = makeString("no");

    static private final SubLString $str_alt165$Information_separated_by_month_ = makeString("Information separated by month.");

    static private final SubLString $str_alt166$month_ = makeString("month?");

    static private final SubLString $$$T = makeString("T");

    static private final SubLString $str_alt168$User_Statistics_by_Month_ = makeString("User Statistics by Month.");

    static private final SubLString $str_alt169$_this_option_is_only_available_wh = makeString("(this option is only available when aggregating information over entire reporting period)");

    static private final SubLString $str_alt170$user_ = makeString("user?");

    static private final SubLString $str_alt171$User_Statistics_by_User_ = makeString("User Statistics by User.");

    static private final SubLString $str_alt172$thesaurus_ = makeString("thesaurus?");

    static private final SubLString $str_alt173$User_Statistics_by_Thesaurus_ = makeString("User Statistics by Thesaurus.");

    private static final SubLSymbol TM_GENERATE_USER_REPORT = makeSymbol("TM-GENERATE-USER-REPORT");

    static private final SubLString $str_alt175$start_day = makeString("start-day");

    static private final SubLString $str_alt176$end_day = makeString("end-day");

    static private final SubLString $str_alt177$tm_verify_generate_ops_report_fil = makeString("tm-verify-generate-ops-report-file");

    static private final SubLString $str_alt178$An_operations_report_for__A_to__A = makeString("An operations report for ~A to ~A has already been generated.");

    static private final SubLString $str_alt179$It_can_be_found_in_the_file_ = makeString("It can be found in the file ");

    static private final SubLString $str_alt180$tm_handle_ops_report_file_paramet = makeString("tm-handle-ops-report-file-parameters");

    static private final SubLString $str_alt181$Do_you_wish_to_generate_it_again_ = makeString("Do you wish to generate it again and overwrite the file (this might take several minutes)?");

    private static final SubLSymbol TM_VERIFY_GENERATE_OPS_REPORT_FILE = makeSymbol("TM-VERIFY-GENERATE-OPS-REPORT-FILE");

    static private final SubLString $$$sort = makeString("sort");



    static private final SubLString $$$thesauri = makeString("thesauri");

    static private final SubLString $str_alt186$_ALL_ = makeString("[ALL]");

    private static final SubLSymbol EXPLODE_THESAURUS_NAME_SEQUENCE = makeSymbol("EXPLODE-THESAURUS-NAME-SEQUENCE");

    private static final SubLSymbol GET_LOGGED_THESAURUS_ID = makeSymbol("GET-LOGGED-THESAURUS-ID");

    static private final SubLString $$$optype = makeString("optype");

    static private final SubLString $str_alt190$Invalid_Parameters_for_Operations = makeString("Invalid Parameters for Operations Report");

    static private final SubLString $str_alt191$The_end_date___a__preceeds_the_st = makeString("The end date, ~a, preceeds the start date, ~a.");

    private static final SubLSymbol $UTILITY_TABLE_1 = makeKeyword("UTILITY-TABLE-1");

    private static final SubLSymbol $OP_LOG = makeKeyword("OP-LOG");

    static private final SubLString $$$Operations_Report_Results = makeString("Operations Report Results");

    static private final SubLString $str_alt195$Results_are_in_the_file_ = makeString("Results are in the file ");

    static private final SubLString $str_alt196$A_new_operations_report_file_was_ = makeString("A new operations report file was not generated, because no operation log files can be found in the directory ");

    static private final SubLString $str_alt197$__ = makeString(" .");

    static private final SubLString $str_alt198$A_new_operations_report_file_was_ = makeString("A new operations report file was not generated, for unknown reasons.  Please report this problem to your system administrator.");

    private static final SubLSymbol TM_HANDLE_OPS_REPORT_FILE_PARAMETERS = makeSymbol("TM-HANDLE-OPS-REPORT-FILE-PARAMETERS");

    private static final SubLSymbol TM_HANDLE_OPS_REPORT_FILE = makeSymbol("TM-HANDLE-OPS-REPORT-FILE");

    static private final SubLString $str_alt201$Invalid_Parameters_for_User_Stati = makeString("Invalid Parameters for User Statistics Report");

    private static final SubLSymbol TM_HANDLE_USER_REPORT = makeSymbol("TM-HANDLE-USER-REPORT");

    private static final SubLSymbol $EVENT_LOG = makeKeyword("EVENT-LOG");

    static private final SubLString $$$User_Statistics_Results = makeString("User Statistics Results");

    static private final SubLString $str_alt205$A_new_user_statistics_file_was_no = makeString("A new user statistics file was not generated, because no user event log files can be found in the directory ");

    static private final SubLString $str_alt206$A_new_user_statistics_file_was_no = makeString("A new user statistics file was not generated, for unknown reasons.  Please report this problem to your system administrator.");

    private static final SubLSymbol TM_HANDLE_USER_REPORT_PARAMETERS = makeSymbol("TM-HANDLE-USER-REPORT-PARAMETERS");

    static private final SubLList $list_alt208 = list(new SubLObject[]{ ONE_INTEGER, TWO_INTEGER, THREE_INTEGER, FOUR_INTEGER, FIVE_INTEGER, SIX_INTEGER, SEVEN_INTEGER, EIGHT_INTEGER, NINE_INTEGER, TEN_INTEGER, ELEVEN_INTEGER, TWELVE_INTEGER, THIRTEEN_INTEGER, FOURTEEN_INTEGER, FIFTEEN_INTEGER, SIXTEEN_INTEGER, SEVENTEEN_INTEGER, EIGHTEEN_INTEGER, NINETEEN_INTEGER, TWENTY_INTEGER, makeInteger(21), makeInteger(22), makeInteger(23), makeInteger(24), makeInteger(25), makeInteger(26), makeInteger(27), makeInteger(28), makeInteger(29), makeInteger(30), makeInteger(31) });

    private static final SubLSymbol GET_LOGGED_THESAURUS_NAMES = makeSymbol("GET-LOGGED-THESAURUS-NAMES");

    private static final SubLSymbol TM_FIND_TERM_BY_LOG_ID = makeSymbol("TM-FIND-TERM-BY-LOG-ID");



    static private final SubLString $str_alt212$Choose_Operation_Report_Parameter = makeString("Choose Operation Report Parameters");

    static private final SubLString $str_alt213$tm_handle_ops_report_parameters = makeString("tm-handle-ops-report-parameters");



    static private final SubLString $str_alt215$Thesaur_a = makeString("Thesaur~a");

    static private final SubLString $$$us = makeString("us");

    static private final SubLString $$$i = makeString("i");

    private static final SubLSymbol $VIEW_MULTIPLE = makeKeyword("VIEW-MULTIPLE");

    private static final SubLSymbol $THESAURI = makeKeyword("THESAURI");

    static private final SubLString $$$Start_Date = makeString("Start Date");

    static private final SubLString $$$End_Date = makeString("End Date");

    static private final SubLString $$$Sort_results_by = makeString("Sort results by");

    static private final SubLString $$$Operation_Type = makeString("Operation Type");

    static private final SubLString $str_alt224$admin_only = makeString("admin-only");

    static private final SubLString $str_alt225$_Administrative_operations_only = makeString(" Administrative operations only");

    static private final SubLString $str_alt226$ordinary_only = makeString("ordinary-only");

    static private final SubLString $str_alt227$_Ordinary_operations_only = makeString(" Ordinary operations only");

    static private final SubLString $str_alt228$admin_and_ordinary = makeString("admin-and-ordinary");

    static private final SubLString $str_alt229$_Administrative_and_ordinary_oper = makeString(" Administrative and ordinary operations");

    private static final SubLSymbol TM_GENERATE_OPS_REPORT = makeSymbol("TM-GENERATE-OPS-REPORT");

    static private final SubLString $$$No_Report_Generated = makeString("No Report Generated");

    static private final SubLString $str_alt232$tm_no_report_generated = makeString("tm-no-report-generated");

    static private final SubLString $str_alt233$Sorry__no_operations_report_could = makeString("Sorry, no operations report could be generated using the date parameters ~a and ~a, the sort parameter ~a, the thesaur~a ~s, and the operation type parameter ~s.");

    private static final SubLSymbol TM_HANDLE_OPS_REPORT_PARAMETERS = makeSymbol("TM-HANDLE-OPS-REPORT-PARAMETERS");

    static private final SubLString $$$Operations_Report = makeString("Operations Report");

    static private final SubLString $str_alt236$tm_present_user_date_time_report = makeString("tm-present-user-date-time-report");

    static private final SubLString $$$middle = makeString("middle");

    static private final SubLString $$$User = makeString("User");

    static private final SubLString $$$Date = makeString("Date");

    static private final SubLString $$$Time = makeString("Time");

    static private final SubLString $$$Operation = makeString("Operation");

    static private final SubLSymbol $sym242$LAX__ = makeSymbol("LAX-<");

    private static final SubLSymbol SIXTH = makeSymbol("SIXTH");

    static private final SubLString $$$as_a_top_term = makeString("as a top term");

    static private final SubLString $str_alt245$_in_ = makeString(" in ");

    private static final SubLSymbol TM_PRESENT_USER_DATE_TIME_REPORT = makeSymbol("TM-PRESENT-USER-DATE-TIME-REPORT");

    static private final SubLString $str_alt247$tm_present_date_user_time_report = makeString("tm-present-date-user-time-report");

    private static final SubLSymbol TM_PRESENT_DATE_USER_TIME_REPORT = makeSymbol("TM-PRESENT-DATE-USER-TIME-REPORT");

    static private final SubLString $$$UNKNOWN = makeString("UNKNOWN");

    private static final SubLSymbol TM_PRESENT_DATE_TIME_USER_REPORT = makeSymbol("TM-PRESENT-DATE-TIME-USER-REPORT");

    private static final SubLSymbol $USER_DATE_TIME = makeKeyword("USER-DATE-TIME");

    private static final SubLSymbol $DATE_USER_TIME = makeKeyword("DATE-USER-TIME");

    private static final SubLSymbol $DATE_TIME_USER = makeKeyword("DATE-TIME-USER");

    private static final SubLSymbol TM_PRESENT_OPS_REPORT = makeSymbol("TM-PRESENT-OPS-REPORT");

    static private final SubLString $str_alt255$Operations_Report_for__a_to__a__ = makeString("Operations Report for ~a to ~a~%");

    static private final SubLString $str_alt256$Date_____Time_____User__Operation = makeString("Date-----Time-----User--Operation~%");

    static private final SubLString $str_alt257$________ = makeString("        ");

    static private final SubLString $str_alt258$__a = makeString(" ~a");

    static private final SubLString $str_alt259$__a__ = makeString(" ~a~%");

    static private final SubLString $str_alt260$_C = makeString("~C");

    static private final SubLString $str_alt261$_C________________________ = makeString("~C                        ");

    static private final SubLString $str_alt262$Date_____User__Time_____Operation = makeString("Date-----User--Time-----Operation~%");

    static private final SubLString $str_alt263$______ = makeString("      ");

    static private final SubLString $str_alt264$__a________________ = makeString(" ~a~%              ");

    static private final SubLString $str_alt265$User__Date_____Time_____Operation = makeString("User--Date-----Time-----Operation~%");

    static private final SubLString $str_alt266$_____ = makeString("     ");

    static private final SubLString $str_alt267$_a_______ = makeString("~a~%     ");

    static private final SubLString $$$Choose_TMAP_Report_Parameters = makeString("Choose TMAP Report Parameters");

    static private final SubLString $str_alt269$tm_handle_tmap_report = makeString("tm-handle-tmap-report");

    static private final SubLString $$$Generate_TMAP_Statistics = makeString("Generate TMAP Statistics");

    private static final SubLSymbol TM_GENERATE_TMAP_REPORT = makeSymbol("TM-GENERATE-TMAP-REPORT");

    static private final SubLString $str_alt272$Invalid_Parameters_for_TMAP_Stati = makeString("Invalid Parameters for TMAP Statistics Report");

    private static final SubLSymbol TM_HANDLE_TMAP_REPORT = makeSymbol("TM-HANDLE-TMAP-REPORT");

    static private final SubLString $str_alt274$Invalid_Parameters_for_Tmap_Stati = makeString("Invalid Parameters for Tmap Statistics Report");

    private static final SubLSymbol $TMAP_LOG = makeKeyword("TMAP-LOG");

    static private final SubLString $$$TMAP_Statistics_Results = makeString("TMAP Statistics Results");

    static private final SubLString $str_alt277$tm_handle_tmap_report_parameters = makeString("tm-handle-tmap-report-parameters");

    static private final SubLString $str_alt278$A_new_TMAP_statistics_file_was_no = makeString("A new TMAP statistics file was not generated, because no TMAP event log files can be found in the directory ");

    static private final SubLString $str_alt279$A_new_TMAP_statistics_file_was_no = makeString("A new TMAP statistics file was not generated, for unknown reasons.  Please report this problem to your system administrator.");

    private static final SubLSymbol TM_HANDLE_TMAP_REPORT_PARAMETERS = makeSymbol("TM-HANDLE-TMAP-REPORT-PARAMETERS");

    static private final SubLString $$$Generate_Tmap_Statistics_Report = makeString("Generate Tmap Statistics Report");

    static private final SubLString $str_alt282$tm_verify_generate_tmap_report = makeString("tm-verify-generate-tmap-report");

    static private final SubLString $str_alt283$Tmap_statistics_for__A_to__A_have = makeString("Tmap statistics for ~A to ~A have already been generated.");

    static private final SubLSymbol $sym284$TM_THESAURUS_UNWRITABLE_ = makeSymbol("TM-THESAURUS-UNWRITABLE?");

    static private final SubLString $str_alt285$Load_Thesaurus_will_look_for_the_ = makeString("Load Thesaurus will look for the file to load in the following directory.  Make sure this directory holds your file:");

    static private final SubLString $str_alt286$tm_load_thesaurus_prioritize_conc = makeString("tm-load-thesaurus-prioritize-concept-reuse-thesauri");

    static private final SubLString $str_alt287$Choose_Thesaurus__ = makeString("Choose Thesaurus: ");

    static private final SubLString $str_alt288$__ = makeString("  ");

    static private final SubLString $str_alt289$Choose_Input_Format_ = makeString("Choose Input Format:");

    static private final SubLString $$$thesaurus = makeString("thesaurus");

    static private final SubLString $$$format = makeString("format");

    static private final SubLString $str_alt292$Enter_input_filename__including_e = makeString("Enter input filename, including extension (if present): ");

    static private final SubLString $$$filename = makeString("filename");

    public static final SubLInteger $int$60 = makeInteger(60);

    static private final SubLString $str_alt295$Choose_a_concept_reuse_mode_for_t = makeString("Choose a concept reuse mode for this load:");

    static private final SubLList $list_alt296 = list(list(makeString("none"), makeString("Always create new concepts.")), list(makeString("any"), makeString("Reuse any concept from any thesaurus.")), list(makeString("priority"), makeString("Specify a priority list of thesauri to reuse concepts from.")));

    static private final SubLString $str_alt297$reuse_mode = makeString("reuse-mode");

    static private final SubLString $$$none = makeString("none");

    static private final SubLString $$$Load = makeString("Load");

    static private final SubLString $str_alt300$No_empty_thesauri_are_available_f = makeString("No empty thesauri are available for loading. Please create a thesaurus first.");

    private static final SubLSymbol TM_LOAD_THESAURUS = makeSymbol("TM-LOAD-THESAURUS");

    static private final SubLString $str_alt302$reuse_thesauri = makeString("reuse-thesauri");

    static private final SubLString $str_alt303$next_thesaurus = makeString("next-thesaurus");

    static private final SubLString $$$load = makeString("load");

    static private final SubLString $$$priority = makeString("priority");

    static private final SubLString $str_alt306$Specify_Concept_Reuse_Thesauri_fo = makeString("Specify Concept Reuse Thesauri for ~A Load");

    static private final SubLString $str_alt307$Please_enter_a_filename_for_the_l = makeString("Please enter a filename for the load");

    static private final SubLString $str_alt308$Load_Thesaurus__file__S_cannot_be = makeString("Load Thesaurus: file ~S cannot be opened or does not exist");

    static private final SubLString $str_alt309$Error___S_is_not_the_name_of_a_va = makeString("Error: ~S is not the name of a valid thesaurus.");



    static private final SubLList $list_alt311 = list(makeSymbol("POSITION"), makeSymbol("THESAURUS-NAME"));

    static private final SubLString $str_alt312$__A__S_ = makeString("(~A ~S)");

    static private final SubLString $str_alt313$When_loading_ = makeString("When loading ");

    static private final SubLString $str_alt314$__concepts_from_only_these_thesau = makeString(", concepts from only these thesauri may be reused.");

    static private final SubLString $str_alt315$They_are_shown_in_order__from_mos = makeString("They are shown in order, from most preferred to least preferred.");

    private static final SubLSymbol $THESAURUS = makeKeyword("THESAURUS");

    static private final SubLString $str_alt317$Select_the_ = makeString("Select the ");

    static private final SubLString $str_alt318$_thesaurus_to_prefer_for_concept_ = makeString(" thesaurus to prefer for concept reuse.");

    static private final SubLString $str_alt319$Append_this_thesaurus_to_the_reus = makeString("Append this thesaurus to the reuse list");

    static private final SubLString $str_alt320$Don_t_add_another__perform_the_lo = makeString("Don't add another; perform the load now");

    private static final SubLSymbol TM_LOAD_THESAURUS_PRIORITIZE_CONCEPT_REUSE_THESAURI = makeSymbol("TM-LOAD-THESAURUS-PRIORITIZE-CONCEPT-REUSE-THESAURI");

    static private final SubLString $$$Please_choose_a_thesaurus_to_load = makeString("Please choose a thesaurus to load");

    static private final SubLString $str_alt323$Could_not_find_a_thesaurus_named_ = makeString("Could not find a thesaurus named ~A");

    static private final SubLString $str_alt324$Please_choose_an_input_format_for = makeString("Please choose an input format for the load");



    static private final SubLList $list_alt326 = list(makeKeyword("ANY"), $NONE, makeKeyword("PRIORITY"), makeKeyword("UNIQUE"));

    static private final SubLString $str_alt327$Unknown_reuse_mode__S = makeString("Unknown reuse-mode ~S");

    static private final SubLSymbol $sym328$_ = makeSymbol("<");





    private static final SubLSymbol TM_HANDLE_LOAD_THESAURUS = makeSymbol("TM-HANDLE-LOAD-THESAURUS");

    static private final SubLString $str_alt332$Loading__A_Thesaurus = makeString("Loading ~A Thesaurus");

    static private final SubLString $str_alt333$tm_handle_load_thesaurus = makeString("tm-handle-load-thesaurus");

    static private final SubLString $str_alt334$Loading_the__A_thesaurus_from_fil = makeString("Loading the ~A thesaurus from file ");

    static private final SubLString $str_alt335$_S = makeString("~S");

    static private final SubLString $str_alt336$in__A_format_ = makeString("in ~A format.");

    static private final SubLString $str_alt337$Click_the_Status_button_to_track_ = makeString("Click the Status button to track progress.");

    static private final SubLString $str_alt338$Sorry__loading_thesaurus_ = makeString("Sorry, loading thesaurus ");

    static private final SubLString $str_alt339$_is_not_permitted_at_this_time__b = makeString(" is not permitted at this time, because it is involved in some other operation.  Please try again later.");

    static private final SubLString $$$Load_Not_Started = makeString("Load Not Started");

    private static final SubLSymbol $OUTPUT_THESAURUS = makeKeyword("OUTPUT-THESAURUS");

    private static final SubLSymbol TM_OUTPUT_THESAURUS_OR_SUBSET_WRAPPER = makeSymbol("TM-OUTPUT-THESAURUS-OR-SUBSET-WRAPPER");

    static private final SubLString $$$SUCCESS = makeString("SUCCESS");

    static private final SubLString $$$INCOMPLETE = makeString("INCOMPLETE");

    static private final SubLString $$$Required_parameters = makeString("Required parameters");

    static private final SubLString $str_alt346$tm_handle_output_thesaurus = makeString("tm-handle-output-thesaurus");

    static private final SubLString $str_alt347$Choose_Thesaurus_ = makeString("Choose Thesaurus:");

    static private final SubLString $str_alt348$Choose_Output_Format_ = makeString("Choose Output Format:");



    private static final SubLSymbol $DEFAULT_OUTPUT_FORMAT = makeKeyword("DEFAULT-OUTPUT-FORMAT");

    static private final SubLString $str_alt351$Enter_Destination_Filename__one_w = makeString("Enter Destination Filename (one word, no spaces, no extension):");

    public static final SubLInteger $int$30 = makeInteger(30);

    static private final SubLString $$$Output = makeString("Output");

    static private final SubLString $$$Reset = makeString("Reset");

    static private final SubLString $$$Optional_parameters = makeString("Optional parameters");

    private static final SubLSymbol $OUTPUT_FILTER = makeKeyword("OUTPUT-FILTER");

    static private final SubLString $str_alt357$Current_Output_Filter___ = makeString("Current Output Filter:  ");

    static private final SubLString $$$None = makeString("None");

    static private final SubLString $str_alt359$Choose_A_Different_Filter_ = makeString("Choose A Different Filter:");

    static private final SubLString $str_alt360$tm_edit_output_filter = makeString("tm-edit-output-filter");

    static private final SubLString $$$Define_a_New_Filter = makeString("Define a New Filter");

    static private final SubLString $$$Examine_Filters = makeString("Examine Filters");

    static private final SubLString $str_alt363$output_filter = makeString("output-filter");

    static private final SubLString $str_alt364$_None_ = makeString("(None)");

    static private final SubLString $str_alt365$_Default___If_available_for_Thesa = makeString("(Default - If available for Thesaurus)");

    static private final SubLString $str_alt366$Choose_Case_Style_for_Output_ = makeString("Choose Case Style for Output:");

    static private final SubLString $$$case = makeString("case");

    static private final SubLString $$$Upper = makeString("Upper");

    static private final SubLString $$$Mixed = makeString("Mixed");

    static private final SubLString $$$Lower = makeString("Lower");

    static private final SubLString $str_alt371$Enter_start_terms__each_on_a_sepa = makeString("Enter start-terms, each on a separate line.");

    static private final SubLString $str_alt372$Output_will_include_these_terms_a = makeString("Output will include these terms and all their narrower terms.  ");

    static private final SubLString $str_alt373$If_no_start_terms_are_specified__ = makeString("If no start-terms are specified, output will start at the very top of the thesaurus.");

    static private final SubLString $str_alt374$start_terms = makeString("start-terms");

    static private final SubLString $str_alt375$Restrict_output_to_a_specific_num = makeString("Restrict output to a specific number of levels:  ");

    static private final SubLString $str_alt376$num_levels = makeString("num-levels");

    static private final SubLString $str_alt377$Only_output_terms_broader_than_an = makeString("Only output terms broader than and including these cutoff-terms:");

    static private final SubLString $str_alt378$_Enter_cutoff_terms__each_on_a_se = makeString("(Enter cutoff-terms, each on a separate line.");

    static private final SubLString $str_alt379$Output_will_not_include_any_narro = makeString("Output will not include any narrower terms of these.)");

    static private final SubLString $str_alt380$stop_terms = makeString("stop-terms");

    private static final SubLSymbol TM_OUTPUT_THESAURUS = makeSymbol("TM-OUTPUT-THESAURUS");

    static private final SubLList $list_alt382 = list(cons(makeKeyword("BASIS"), makeString("basis")), cons(makeKeyword("BRS"), makeString("brs")), cons(makeKeyword("VERITY"), makeString("verity")));

    static private final SubLString $str_alt383$Output_Thesaurus__You_must_choose = makeString("Output Thesaurus: You must choose a thesaurus as an output source.");

    static private final SubLString $str_alt384$Output_Thesaurus__You_must_choose = makeString("Output Thesaurus: You must choose an output format.");

    static private final SubLString $str_alt385$Output_Thesaurus__You_must_specif = makeString("Output Thesaurus: You must specify the name of the output file.");

    static private final SubLString $str_alt386$Output_Thesaurus___S_is_not_a_kno = makeString("Output Thesaurus: ~S is not a known thesaurus name");

    static private final SubLString $str_alt387$Output_Thesaurus___S_is_not_a_kno = makeString("Output Thesaurus: ~S is not a known output format");

    public static final SubLSymbol $kw388$USE_FILTER_ = makeKeyword("USE-FILTER?");

    public static final SubLSymbol $kw389$USE_FILTER_MAP_ = makeKeyword("USE-FILTER-MAP?");

    private static final SubLSymbol $FILTER_TYPE = makeKeyword("FILTER-TYPE");

    private static final SubLSymbol CANONICALIZE_LEXICAL_TERM = makeSymbol("CANONICALIZE-LEXICAL-TERM");

    private static final SubLSymbol $MULTIPLE_LEXPRED = makeKeyword("MULTIPLE-LEXPRED");

    public static final SubLObject $$preferredTerm = constant_handles.reader_make_constant_shell(makeString("preferredTerm"));

    static private final SubLString $str_alt394$_A_has_multiple_preferred_term_st = makeString("~A has multiple preferred term statements in ~A.  Integrity-check this term to fix.");

    static private final SubLString $str_alt395$_A_is_not_a_preferred_term_in__A_ = makeString("~A is not a preferred term in ~A.");

    static private final SubLString $str_alt396$Cutoff_terms_must_be_present_in_t = makeString("Cutoff terms must be present in the thesaurus being emitted.  ~A is not a preferred term in ~A.");

    static private final SubLString $str_alt397$_A_is_not_a_valid_number_of_level = makeString("~A is not a valid number of levels.  You must use a positive integer.");

    private static final SubLSymbol $OUTPUT_THESAURUS_STATE = makeKeyword("OUTPUT-THESAURUS-STATE");

    static private final SubLString $str_alt399$Output_of_thesaurus_ = makeString("Output of thesaurus ");

    static private final SubLString $str_alt400$_is_not_permitted_at_this_time__b = makeString(" is not permitted at this time, because it is currently being edited.  Please try again later.");

    static private final SubLString $$$Ouput_Not_Started = makeString("Ouput Not Started");

    private static final SubLSymbol TM_HANDLE_OUTPUT_THESAURUS = makeSymbol("TM-HANDLE-OUTPUT-THESAURUS");

    static private final SubLString $$$Verify_Output_Thesaurus_to_File = makeString("Verify Output Thesaurus to File");

    static private final SubLString $str_alt404$tm_handle_verify_output_to_file = makeString("tm-handle-verify-output-to-file");

    static private final SubLString $str_alt405$The_file_named__A_already_exists_ = makeString("The file named ~A already exists.  Overwrite it?");

    private static final SubLSymbol TM_HANDLE_VERIFY_OUTPUT_TO_FILE = makeSymbol("TM-HANDLE-VERIFY-OUTPUT-TO-FILE");

    static private final SubLString $$$Output_Thesaurus_Underway = makeString("Output Thesaurus Underway");

    static private final SubLString $str_alt408$tm_notify_output_in_progress = makeString("tm-notify-output-in-progress");

    static private final SubLString $str_alt409$Outputting__A_to_file__A = makeString("Outputting ~A to file ~A");

    static private final SubLString $str_alt410$To_check_the_status_of_your_outpu = makeString("To check the status of your output, click on the Status button in the heading.");

    private static final SubLSymbol TM_OF = makeSymbol("TM-OF");

    static private final SubLString $$$Available_Filters = makeString("Available Filters");

    private static final SubLSymbol TM_OUTPUT_FILTER_PAGE = makeSymbol("TM-OUTPUT-FILTER-PAGE");

    static private final SubLSymbol $sym414$TM_PRED_SYMBOL__ = makeSymbol("TM-PRED-SYMBOL-<");

    static private final SubLString $str_alt415$Information_on_Filter____a_ = makeString("Information on Filter: '~a'");

    static private final SubLString $str_alt416$This_filter_is_the_default_displa = makeString("This filter is the default display filter for:  ");

    static private final SubLString $str_alt417$__ = makeString(", ");

    static private final SubLString $str_alt418$This_filter_is_the_default_output = makeString("This filter is the default output filter for:  ");

    private static final SubLSymbol $EDIT_FILTER = makeKeyword("EDIT-FILTER");

    private static final SubLSymbol $DELETE_FILTER = makeKeyword("DELETE-FILTER");

    static private final SubLString $str_alt421$Actual_Relation_ = makeString("Actual Relation:");

    static private final SubLString $str_alt422$Will_Output_As_ = makeString("Will Output As:");

    static private final SubLString $str_alt423$Display_with_Name_ = makeString("Display with Name:");

    private static final SubLSymbol $DO_NOT_OUTPUT = makeKeyword("DO-NOT-OUTPUT");

    static private final SubLString $str_alt425$Don_t_output = makeString("Don't output");

    private static final SubLSymbol $NOT_A_THESAURUS_RELATION = makeKeyword("NOT-A-THESAURUS-RELATION");

    private static final SubLSymbol $FILTERED = makeKeyword("FILTERED");



    static private final SubLString $str_alt429$Won_t_Display = makeString("Won't Display");

    static private final SubLString $str_alt430$filter_id = makeString("filter-id");

    static private final SubLString $str_alt431$filter_cmd = makeString("filter-cmd");

    private static final SubLSymbol TM_HANDLE_SET_VALUES = makeSymbol("TM-HANDLE-SET-VALUES");

    static private final SubLString $str_alt433$tm_handle_set_values = makeString("tm-handle-set-values");

    static private final SubLString $$$NIL = makeString("NIL");

    static private final SubLString $$$Redisplay_values = makeString("Redisplay values");

    static private final SubLString $$$1 = makeString("1");

    static private final SubLString $str_alt437$Set_all_to__Output_as_is_ = makeString("Set all to \"Output as is\"");

    static private final SubLString $$$0 = makeString("0");

    static private final SubLString $str_alt439$Set_all_to__Do_not_output_ = makeString("Set all to \"Do not output\"");

    static private final SubLString $$$C = makeString("C");

    static private final SubLString $$$Current_values = makeString("Current values");

    static private final SubLString $str_alt442$Couldn_t_determine_a_filter_from_ = makeString("Couldn't determine a filter from ~A");

    static private final SubLString $str_alt443$_a_Filter___a = makeString("~a Filter: ~a");

    static private final SubLString $$$Edit = makeString("Edit");

    static private final SubLString $$$Define = makeString("Define");

    static private final SubLString $str_alt446$tm_handle_edit_output_filter = makeString("tm-handle-edit-output-filter");

    static private final SubLString $str_alt447$Save_Filter_As___ = makeString("Save Filter As:  ");

    static private final SubLString $str_alt448$filter_name = makeString("filter-name");

    static private final SubLString $$$XXX = makeString("XXX");

    static private final SubLString $str_alt450$_a_radio = makeString("~a-radio");

    private static final SubLSymbol $OUTPUT_AS_IS = makeKeyword("OUTPUT-AS-IS");



    private static final SubLSymbol $PRINT_NAME = makeKeyword("PRINT-NAME");

    static private final SubLString $$$SAME = makeString("SAME");

    static private final SubLString $$$Output_as_is = makeString("Output as is");

    static private final SubLString $$$NO = makeString("NO");

    static private final SubLString $$$Do_not_output = makeString("Do not output");

    static private final SubLString $$$SPECIFY = makeString("SPECIFY");

    static private final SubLString $str_alt459$Output_as__ = makeString("Output as: ");

    static private final SubLString $str_alt460$_a_text = makeString("~a-text");

    static private final SubLString $$$PRINT = makeString("PRINT");

    static private final SubLString $str_alt462$Display_with_Name__ = makeString("Display with Name: ");

    static private final SubLString $str_alt463$_a_print_name = makeString("~a-print-name");

    static private final SubLString $$$Submit_Changes = makeString("Submit Changes");

    private static final SubLSymbol TM_EDIT_OUTPUT_FILTER = makeSymbol("TM-EDIT-OUTPUT-FILTER");

    static private final SubLString $str_alt466$Could_not_determine_a_valid_filte = makeString("Could not determine a valid filter from ~A");

    private static final SubLSymbol TM_HANDLE_EDIT_OUTPUT_FILTER = makeSymbol("TM-HANDLE-EDIT-OUTPUT-FILTER");

    static private final SubLString $str_alt468$Can_t_determine_a_filter_from__A = makeString("Can't determine a filter from ~A");

    static private final SubLString $str_alt469$Delete_Filter__A = makeString("Delete Filter ~A");

    private static final SubLSymbol TM_DELETE_OUTPUT_FILTER = makeSymbol("TM-DELETE-OUTPUT-FILTER");

    static private final SubLString $str_alt471$Create_Filter__You_must_give_a_no = makeString("Create Filter: You must give a non-empty name!");

    static private final SubLString $str_alt472$Create_Filter__The_name__S_is_alr = makeString("Create Filter: The name ~S is already in use.");

    private static final SubLSymbol TM_UPDATE_FILTER_AND_OUTPUT_FILTER_INFO = makeSymbol("TM-UPDATE-FILTER-AND-OUTPUT-FILTER-INFO");

    static private final SubLString $$$Define_Filter = makeString("Define Filter");

    private static final SubLSymbol TM_HANDLE_CREATE_OUTPUT_FILTER = makeSymbol("TM-HANDLE-CREATE-OUTPUT-FILTER");

    static private final SubLString $$$No_Changes_to_Perform = makeString("No Changes to Perform");

    static private final SubLString $str_alt477$No_filter_changes_were_specified_ = makeString("No filter changes were specified.");

    static private final SubLString $$$Edit_Filter = makeString("Edit Filter");

    private static final SubLSymbol $DISPLAY_FILTER = makeKeyword("DISPLAY-FILTER");

    static private final SubLList $list_alt480 = list(makeKeyword("USE-FILTER?"), makeKeyword("USE-FILTER-MAP?"));



    static private final SubLString $$$Rebuild_Alphabetical_Index = makeString("Rebuild Alphabetical Index");

    static private final SubLString $str_alt483$tm_rebuild_alpha = makeString("tm-rebuild-alpha");

    public static final SubLObject $$useFor = constant_handles.reader_make_constant_shell(makeString("useFor"));

    public static final SubLInteger $int$48000 = makeInteger(48000);

    public static final SubLInteger $int$800 = makeInteger(800);

    static private final SubLString $str_alt487$This_operation_could_take__A__A_o = makeString("This operation could take ~A ~A or even twice that long, depending on processor speed, memory and other system activity.");

    static private final SubLString $$$hour = makeString("hour");

    static private final SubLString $$$hours = makeString("hours");

    static private final SubLString $$$minutes = makeString("minutes");

    static private final SubLString $str_alt491$The_operation_should_only_take_a_ = makeString("The operation should only take a minute or so.");

    static private final SubLString $str_alt492$Do_you_wish_to_continue_ = makeString("Do you wish to continue?");

    static private final SubLString $str_alt493$tm_handle_rebuild_alpha = makeString("tm-handle-rebuild-alpha");

    static private final SubLString $$$Do_It = makeString("Do It");

    private static final SubLSymbol TM_REBUILD_ALPHA = makeSymbol("TM-REBUILD-ALPHA");

    static private final SubLString $str_alt496$Rebuilding_Alphabetical_Index____ = makeString("Rebuilding Alphabetical Index ...");

    static private final SubLString $str_alt497$Rebuild_in_progress_ = makeString("Rebuild in progress.");

    private static final SubLSymbol TM_HANDLE_REBUILD_ALPHA = makeSymbol("TM-HANDLE-REBUILD-ALPHA");

    static private final SubLString $str_alt499$tm_handle_manage_tmap = makeString("tm-handle-manage-tmap");

    static private final SubLString $$$prefs = makeString("prefs");

    static private final SubLString $$$Update_Controls = makeString("Update Controls");

    static private final SubLString $str_alt502$Select_the_thesaurus_manager_acce = makeString("Select the thesaurus manager access protocol controls below, then click on Update Controls to perform the changes.");

    static private final SubLString $$$Authentication_Control = makeString("Authentication Control");

    static private final SubLString $str_alt504$require_user = makeString("require-user");

    static private final SubLString $str_alt505$__Require_user_identification_ = makeString("  Require user identification?");

    static private final SubLString $str_alt506$require_password = makeString("require-password");

    static private final SubLString $str_alt507$__Require_user_password_ = makeString("  Require user password?");

    static private final SubLString $str_alt508$require_application = makeString("require-application");

    static private final SubLString $str_alt509$__Require_application_identificat = makeString("  Require application identification?");

    static private final SubLString $$$Logging_Control = makeString("Logging Control");

    static private final SubLString $str_alt511$session_logging = makeString("session-logging");

    static private final SubLString $str_alt512$__Log_protocol_sessions_ = makeString("  Log protocol sessions?");

    static private final SubLString $str_alt513$command_logging = makeString("command-logging");

    static private final SubLString $str_alt514$__Log_protocol_commands_ = makeString("  Log protocol commands?");

    private static final SubLSymbol TM_MANAGE_TMAP = makeSymbol("TM-MANAGE-TMAP");







    static private final SubLString $str_alt519$Manage_Access_Protocol_Server_Res = makeString("Manage Access Protocol Server Results");

    static private final SubLString $str_alt520$The_thesaurus_manager_access_prot = makeString("The thesaurus manager access protocol controls have been updated.");

    private static final SubLSymbol TM_HANDLE_MANAGE_TMAP = makeSymbol("TM-HANDLE-MANAGE-TMAP");

    private static final SubLSymbol TM_SYSTEM_INFO = makeSymbol("TM-SYSTEM-INFO");

    static private final SubLString $str_alt523$Communication_Mode__ = makeString("Communication Mode: ");

    static private final SubLString $str_alt524$_should_be_TRANSMIT_AND_RECEIVE_ = makeString("(should be TRANSMIT-AND-RECEIVE)");

    static private final SubLString $str_alt525$Save_Operations_ = makeString("Save Operations?");

    static private final SubLString $$$Yes = makeString("Yes");

    static private final SubLString $str_alt527$No_ = makeString("No.");

    static private final SubLString $str_alt528$Check_the_install_time_parameter_ = makeString("Check the install-time parameter,");

    static private final SubLString $str_alt529$_TM_DEFAULT_SAVE_OPERATIONS_VALUE = makeString("*TM-DEFAULT-SAVE-OPERATIONS-VALUE*");

    static private final SubLString $str_alt530$Master_Transcript_ = makeString("Master Transcript:");

    static private final SubLString $str_alt531$None___There_has_been_an_initiali = makeString("None.  There has been an initialization error.");

    static private final SubLString $str_alt532$Exists___ = makeString("Exists?: ");

    static private final SubLString $str_alt533$Yes_ = makeString("Yes.");

    static private final SubLString $str_alt534$No___Either_there_is_an_error_in_ = makeString("No.  Either there is an error in your installation, or no operations have been done that should be transcripted.");

    static private final SubLString $str_alt535$Characters_ = makeString("Characters:");

    static private final SubLString $str_alt536$Operations_ = makeString("Operations:");

    static private final SubLString $str_alt537$Estimated_ops_ = makeString("Estimated ops:");

    static private final SubLString $str_alt538$Write_transcript__ = makeString("Write transcript: ");

    static private final SubLString $str_alt539$None___Don_t_worry_unless_you_int = makeString("None.  Don't worry unless you intend to keep a local transcript.");

    static private final SubLString $str_alt540$The_master_and_write_transcript_w = makeString("The master and write transcript will be the same if you have set the install-time parameter *DONT-RECORD-OPERATIONS-LOCALLY*.  If they are different, and operations are being saved, they will be written to both transcripts.");

    static private final SubLString $str_alt541$Transcript_Ops_Pending_ = makeString("Transcript Ops Pending:");

    static private final SubLString $str_alt542$Transcript_Ops_Done_ = makeString("Transcript Ops Done:");

    static private final SubLString $str_alt543$Current_Ops_Pending_ = makeString("Current Ops Pending:");

    static private final SubLString $str_alt544$Current_Ops_Done__Not_Transcripte = makeString("Current Ops Done, Not Transcripted:");

    static private final SubLString $str_alt545$Current_Ops_Done___Transcripted_ = makeString("Current Ops Done & Transcripted:");

    static private final SubLString $str_alt546$System_Version__ = makeString("System Version: ");

    static private final SubLString $str_alt547$KB_Version__ = makeString("KB Version: ");

    private static final SubLSymbol TM_SAVE_PARTITION_WRAPPER = makeSymbol("TM-SAVE-PARTITION-WRAPPER");

    private static final SubLSymbol $LOGFILE = makeKeyword("LOGFILE");

    static private final SubLString $str_alt550$backup_log__A = makeString("backup-log-~A");

    private static final SubLSymbol TM_DUMP_THESAURUS = makeSymbol("TM-DUMP-THESAURUS");

    static private final SubLString $str_alt552$tm_detailed_dump_thesaurus = makeString("tm-detailed-dump-thesaurus");

    static private final SubLString $str_alt553$tm_handle_detailed_dump_thesaurus = makeString("tm-handle-detailed-dump-thesaurus");

    static private final SubLString $str_alt554$Choose_one_or_more_thesauri_to_ba = makeString("Choose one or more thesauri to back up:");

    static private final SubLString $str_alt555$Or__to_save_all_thesaurus_informa = makeString("Or, to save all thesaurus information to a file, click ");

    private static final SubLSymbol $HANDLE_DUMP_THESAURUS = makeKeyword("HANDLE-DUMP-THESAURUS");

    static private final SubLString $str_alt557$_ = makeString(".");

    static private final SubLString $str_alt558$This_operation_could_take_several = makeString("This operation could take several hours.");

    static private final SubLString $str_alt559$While_it_is_underway__all_editing = makeString("While it is underway, all editing will be disabled to ensure integrity of the backup.");

    private static final SubLSymbol TM_DETAILED_DUMP_THESAURUS = makeSymbol("TM-DETAILED-DUMP-THESAURUS");

    static private final SubLString $str_alt561$The_directory__A_is_not_accessibl = makeString("The directory ~A is not accessible; Backup cannot be performed.");

    static private final SubLString $str_alt562$Backing_Up__a_aInfo_to_File = makeString("Backing Up ~a~aInfo to File");

    static private final SubLString $str_alt563$tm_handle_dump_thesaurus = makeString("tm-handle-dump-thesaurus");

    static private final SubLString $str_alt564$Backing_up__a_state_to_the_file__ = makeString("Backing up ~a state to the file ~s.");

    static private final SubLString $str_alt565$Click_on_the_Status_button_to_see = makeString("Click on the Status button to see progress.");

    static private final SubLString $str_alt566$Backup_cannot_be_performed_at_thi = makeString("Backup cannot be performed at this time, because ");

    static private final SubLString $str_alt567$_is_currently_involved_in_an_edit = makeString(" is currently involved in an editing operation.");

    static private final SubLString $$$Backup_Unavailable = makeString("Backup Unavailable");

    private static final SubLSymbol TM_HANDLE_DUMP_THESAURUS = makeSymbol("TM-HANDLE-DUMP-THESAURUS");

    private static final SubLSymbol THESAURUS_CONSTANT_FROM_NAME = makeSymbol("THESAURUS-CONSTANT-FROM-NAME");

    static private final SubLString $str_alt571$You_must_select_at_least_one_thes = makeString("You must select at least one thesaurus to back up.");

    static private final SubLString $str_alt572$Implementation_error__One_or_more = makeString("Implementation error: One or more thesaurus names did not yield a thesaurus.");

    private static final SubLSymbol TM_HANDLE_DETAILED_DUMP_THESAURUS = makeSymbol("TM-HANDLE-DETAILED-DUMP-THESAURUS");

    static private final SubLString $$$Background_Operation_Status = makeString("Background Operation Status");

    static private final SubLString $str_alt575$tm_show_all_thinking_status = makeString("tm-show-all-thinking-status");

    static private final SubLString $str_alt576$There_are_no_background_operation = makeString("There are no background operations underway.");

    private static final SubLSymbol TM_SHOW_ALL_THINKING_STATUS = makeSymbol("TM-SHOW-ALL-THINKING-STATUS");



    static private final SubLString $str_alt579$Task_started_by_user_ = makeString("Task started by user ");





    static private final SubLString $str_alt582$Task_halted_with_this_error___A = makeString("Task halted with this error: ~A");



    static private final SubLString $str_alt584$Task_was_halted_before_completion = makeString("Task was halted before completion.");



    static private final SubLString $str_alt586$Task_finished_with_this_result___ = makeString("Task finished with this result:  ~A");

    static private final SubLString $str_alt587$Task_was_never_begun_ = makeString("Task was never begun.");

    static private final SubLString $str_alt588$Error_message__ = makeString("Error message: ");

    static private final SubLString $str_alt589$Unknown_thinking_status__A = makeString("Unknown thinking status ~A");

    private static final SubLSymbol $FORGET = makeKeyword("FORGET");

    static private final SubLString $str_alt591$Log_file__ = makeString("Log file: ");

    private static final SubLSymbol TM_THINKING_ABORT = makeSymbol("TM-THINKING-ABORT");

    private static final SubLSymbol TM_THINKING_FORGET = makeSymbol("TM-THINKING-FORGET");

    static private final SubLString $str_alt594$__D_lines_ = makeString("(~D lines)");

    private static final SubLSymbol $COPY_THESAURUS = makeKeyword("COPY-THESAURUS");

    static private final SubLString $str_alt596$Target_thesaurus__ = makeString("Target thesaurus: ");

    static private final SubLString $str_alt597$Skipped_facts_log__ = makeString("Skipped facts log: ");

    private static final SubLSymbol $LOAD_THESAURUS = makeKeyword("LOAD-THESAURUS");

    private static final SubLSymbol $UPDATE_LOAD = makeKeyword("UPDATE-LOAD");

    static private final SubLString $str_alt600$Decide_Update_Load_Changes_for__A = makeString("Decide Update Load Changes for ~A");

    static private final SubLString $str_alt601$The_output_is_in_this_file___ = makeString("The output is in this file:  ");

    static private final SubLString $str_alt602$The_backup_was_saved_to_ = makeString("The backup was saved to ");

    private static final SubLSymbol $COUNTING = makeKeyword("COUNTING");

    static private final SubLString $str_alt604$Unknown_thinking_type__A = makeString("Unknown thinking type ~A");

    private static final SubLSymbol TM_COUNT = makeSymbol("TM-COUNT");

    static private final SubLList $list_alt606 = list(makeInteger(50));

    // // Initializers
    public void declareFunctions() {
        declare_html_tm_utilities_file();
    }

    public void initializeVariables() {
        init_html_tm_utilities_file();
    }

    public void runTopLevelForms() {
        setup_html_tm_utilities_file();
    }
}

